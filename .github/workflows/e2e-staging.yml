name: e2e-staging-tests

on:
  workflow_call:
    
env:
  AWS_DEFAULT_OUTPUT: json
  AWS_REGION: us-west-2
  GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
  EXECUTOR_ROLE: czid-staging-gh-actions-executor

jobs:
  cancel_outdated_builds:
    runs-on: ubuntu-latest
    # This will cancel the whole workflow for non-current pushes on your branch
    steps:
      - name: Cancel Outdated Builds
        uses: styfle/cancel-workflow-action@0.8.0
        with:
          access_token: ${{ github.token }}
  
  e2e-tests:
    runs-on: ubuntu-latest
    permissions: 
      id-token: write
      contents: read
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: ~/.cache
          key: ${{runner.os}}-cache

      - name: Configure AWS Credentials
        id: configure_aws_credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ secrets.DEV_AWS_ROLE }}
          role-session-name: e2e-staging-cicd

      - name: Login to ECR
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.DEV_ECR_REPO }}

      - name: Export variables
        run: |
          AWS_ACCOUNT_ID=${{ steps.configure_aws_credentials.outputs.aws-account-id }}
          echo "AWS_ACCOUNT_ID=$AWS_ACCOUNT_ID" >> $GITHUB_ENV
      
      - name: Configure secrets
        uses: aws-actions/aws-secretsmanager-get-secrets@v1.0.0
        with:
          secret-ids: |
            LOGIN, czid-login
            SAUCE, czid-sauce
            SLACK, czid-slack 
          parse-json-secrets: true
      
      - name: Get git references
        shell: bash
        run: |
          echo "CI_COMMIT_SHORT_SHA=$(git rev-parse --short "$GITHUB_SHA")" >> "$GITHUB_ENV"
          echo "BRANCH=$(echo ${GITHUB_REF#refs/heads/})" >> "$GITHUB_ENV"

      - name: Run Playwright in Saucelabs
        run: |
          cd e2e
          npm install -g saucectl
          saucectl run -c .sauce/staging.yml

        env: 
          CZID_USERNAME: ${{ env.LOGIN_USERNAME}}      
          CZID_PASSWORD: ${{ env.LOGIN_PASSWORD }}
          SAUCE_USERNAME: ${{env.SAUCE_USERNAME}}
          SAUCE_ACCESS_KEY: ${{env.SAUCE_ACCESS_KEY}}  
          SAUCE_REST_ENDPOINT: 'https://us-west-1.saucelabs.com/'
          NODE_ENV: STAGING
          CI_COMMIT_SHORT_SHA: ${{env.CI_COMMIT_SHORT_SHA}}
          BRANCH: ${{env.BRANCH}}
