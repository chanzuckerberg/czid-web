name: reusable-e2e-tests

on:
  workflow_call:
    inputs:
      environment:
        default: 'staging'
        type: string

env:
  AWS_DEFAULT_OUTPUT: json
  AWS_REGION: us-west-2
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  ENVIRONMENT: dev
  EXECUTOR_ROLE: czid-staging-gh-actions-executor

jobs:
  cancel_outdated_builds:
    runs-on: ubuntu-latest
    # This will cancel the whole workflow for non-current pushes on your branch
    steps:
      - name: Cancel Outdated Builds
        uses: styfle/cancel-workflow-action@0.11.0
        with:
          access_token: ${{ github.token }}

  run-e2e-tests:
    runs-on: ubuntu-latest
    permissions: # these permissions must be set for AWS auth to work!
      id-token: write
      contents: read
      actions: read
    
    steps:
      - uses: actions/checkout@v3 
      - uses: actions/cache@v1
        with:
          path: ~/.cache
          key: ${{runner.os}}-cache

      - name: Configure AWS Credentials
        id: configure_aws_credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-region: us-west-2
          role-to-assume: ${{ secrets.DEV_AWS_ROLE }}
          role-session-name: build-push-docker-img

      - name: Export variables
        run: |
          AWS_ACCOUNT_ID=${{ steps.configure_aws_credentials.outputs.aws-account-id }}
          echo "AWS_ACCOUNT_ID=$AWS_ACCOUNT_ID" >> $GITHUB_ENV

      - name: Login to ECR
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.DEV_ECR_REPO }}

      - name: Configure AWS Secrets Executor Role Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/ci/${{ env.EXECUTOR_ROLE }}

      - name: Configure login, sauce & slack credentials
        uses: aws-actions/aws-secretsmanager-get-secrets@v1.0.0
        with:
          secret-ids: |
            LOGIN, czid-login
            SAUCE, czid-sauce
            SLACK, czid-slack         
          parse-json-secrets: true 

      - name: Git references
        shell: bash
        run: |
          echo "CI_COMMIT_SHORT_SHA=$(git rev-parse --short "$GITHUB_SHA")" >> "$GITHUB_ENV"
          echo "BRANCH=$(echo ${GITHUB_REF#refs/heads/})" >> "$GITHUB_ENV"

      - name: Start sauce-connect
        if: ${{ github.event.inputs.environment != 'staging' }} # we cannot create tunnel on staging
        uses: saucelabs/sauce-connect-action@v2
        with:
          username: ${{ env.SAUCE_USERNAME }}
          accessKey: ${{ env.SAUCE_ACCESS_KEY }}
          tunnelIdentifier: czid-github-sauce-connect

      - name: Run Playwright in saucelabs
        run: |
          cd e2e
          npm install -g saucectl
          npm run sauce:${{ inputs.environment }}

        env: 
          CZID_USERNAME: ${{ env.LOGIN_USERNAME }}      
          CZID_PASSWORD: ${{ env.LOGIN_PASSWORD }}
          SAUCE_USERNAME: ${{ env.SAUCE_USERNAME }}
          SAUCE_ACCESS_KEY: ${{ env.SAUCE_ACCESS_KEY }}
          SAUCE_REST_ENDPOINT: 'https://us-west-1.saucelabs.com/'
          CI_COMMIT_SHORT_SHA: ${{ env.CI_COMMIT_SHORT_SHA }}
          BRANCH: ${{ env.BRANCH }}
          