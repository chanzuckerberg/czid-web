name: Build and Push Docker Images

on:
  push:
    branches:
      - "**"
    tags-ignore:
      - "**"
    paths-ignore:
      - ".github/workflows/**"

env:
  AWS_DEFAULT_OUTPUT: json
  AWS_REGION: us-west-2
  DEBIAN_FRONTEND: noninteractive
  LC_ALL: C.UTF-8
  LANG: C.UTF-8
  GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

jobs:
  cancel_outdated_builds:
    runs-on: ubuntu-latest
    # This will cancel the whole workflow for non-current pushes on your branch
    steps:
      - name: Cancel Outdated Builds
        uses: styfle/cancel-workflow-action@0.8.0
        with:
          access_token: ${{ github.token }}
  
  build_dev_docker_image:
    runs-on: ubuntu-latest
    permissions: # these permissions must be set for AWS auth to work!
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/cache@v1
        with:
          path: ~/.cache
          key: ${{runner.os}}-cache
      - name: Configure AWS Credentials
        id: configure_aws_credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-west-2
          role-to-assume: ${{ secrets.DEV_AWS_ROLE }}
          role-session-name: build-push-docker-img
      - name: Login to ECR
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.DEV_ECR_REPO }}
      - name: Export variables
        run: |
          AWS_ACCOUNT_ID=${{ steps.configure_aws_credentials.outputs.aws-account-id }}
          echo "AWS_ACCOUNT_ID=$AWS_ACCOUNT_ID" >> $GITHUB_ENV
      - name: Build docker image
        run: bin/build-docker $(basename $GITHUB_REF) ${GITHUB_SHA::8}
      - name: Push docker image
        run: bin/push-docker $(basename $GITHUB_REF) ${GITHUB_SHA::8}

  build_prod_docker_image:
    runs-on: ubuntu-latest
    permissions: # these permissions must be set for AWS auth to work!
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/cache@v1
        with:
          path: ~/.cache
          key: ${{runner.os}}-cache
      - name: Configure AWS Credentials
        id: configure_aws_credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-west-2
          role-to-assume: ${{ secrets.PROD_AWS_ROLE }}
          role-session-name: build-push-docker-img
      - name: Login to ECR
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.PROD_ECR_REPO }}
      - name: Export variables
        run: |
          AWS_ACCOUNT_ID=${{ steps.configure_aws_credentials.outputs.aws-account-id }}
          echo "AWS_ACCOUNT_ID=$AWS_ACCOUNT_ID" >> $GITHUB_ENV
      - name: Build docker image
        run: bin/build-docker $(basename $GITHUB_REF) ${GITHUB_SHA::8}
      - name: Push docker image
        run: bin/push-docker $(basename $GITHUB_REF) ${GITHUB_SHA::8}
