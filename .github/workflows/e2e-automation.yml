name: e2e-automation

on:
  workflow_call:
    inputs:
      node-environment:
        type: string
        description: 'Environment'
        required: true
        default: 'staging'
      test-category:
          type: string
          description: 'Test Category'
          required: true
          default: 'smoke'
      should-run-with-feature-flags:
          type: string
          description: 'Run with feature flags?'
          required: true
          default: 'false'

  workflow_dispatch:
    inputs:
      node-environment:
        type: choice
        description: 'Environment'
        required: true
        default: 'staging'
        options:
        - staging
        - sandbox
      test-category:
        type: choice
        description: 'Test Category'
        required: true
        default: 'smoke'
        options:
        - smoke
        - e2e
      should-run-with-feature-flags:
        type: choice
        description: 'Run with feature flags?'
        required: true
        default: 'false'
        options:
          - 'true'
          - 'false'

run-name: "Run ${{inputs.test-category}} tests on ${{inputs.node-environment}} environment (with feature flags: ${{inputs.should-run-with-feature-flags}})"

jobs:
  workflow-e2e:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    env:
      SAUCE_USERNAME: ${{secrets.SAUCE_USERNAME}}
      SAUCE_ACCESS_KEY: ${{secrets.SAUCE_ACCESS_KEY}}
      CZID_USERNAME: ${{secrets.CZID_USERNAME}}
      CZID_PASSWORD: ${{secrets.CZID_PASSWORD}}
      NODE_ENV: ${{inputs.node-environment}}
      BASESPACE_USERNAME: ${{secrets.BASESPACE_USERNAME}}
      BASESPACE_PASSWORD: ${{secrets.BASESPACE_PASSWORD}}
      NEXTGEN_FEATURE_FLAGS_ENABLED: ${{inputs.should-run-with-feature-flags}}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: npm install
        working-directory: ./e2e/
        run: |
          npm install
          npm i -g saucectl
          npm i -g @playwright/test
      - name: Configure user for test
        working-directory: ./e2e/
        run: |
          if [[ ${{inputs.should-run-with-feature-flags}} == 'true' ]]; then
            CZID_USERNAME_WITH_FF=${{secrets.CZID_USERNAME_WITH_FF}}
            CZID_PASSWORD_WITH_FF=${{secrets.CZID_PASSWORD_WITH_FF}}
            echo "CZID_USERNAME=${CZID_USERNAME_WITH_FF}" >> $GITHUB_ENV
            echo "CZID_PASSWORD=${CZID_PASSWORD_WITH_FF}" >> $GITHUB_ENV
            echo "Running tests with feature flags"
          else
            echo "Running tests without feature flags"
          fi
      - name: Use saucectl
        working-directory: ./e2e/
        if: failure() || success()
        run: |
          saucectl run -c ./.sauce/${{inputs.test-category}}.yml

      - name: Send custom JSON data to Slack workflow
        id: slack
        uses: slackapi/slack-github-action@v1.25.0
        with:
          # This data can be any valid JSON from a previous step in the GitHub Action
          payload: |
            {
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": ":gear: E2E Automation",
                    "emoji": true
                  }
                },
                {
                  "type": "section",
                  "text": {
                      "type": "mrkdwn",
                      "text": "*Workflow*: ${{ github.workflow }}"
                  }
                },
                {
                  "type": "section",
                  "text": {
                      "type": "mrkdwn",
                      "text": "*Env*: ${{inputs.node-environment}}"
                  }
                },
                {
                  "type": "section",
                  "text": {
                      "type": "mrkdwn",
                      "text": "*Branch*: ${{ github.ref_name }}"
                  }
                },
                {
                  "type": "section",
                  "text": {
                      "type": "mrkdwn",
                      "text": "*Commit*: ${{ github.sha }}"
                  }
                },
                {
                  "type": "section",
                  "text": {
                      "type": "mrkdwn",
                      "text": "*Results*: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
