name: Resuable deploy workflow

on:
  workflow_call:
    inputs:
      source:
        required: true
        type: string
      destination:
        required: true
        type: string
      force:
        default: false
        required: false
        type: boolean
      developer_name:
        required: true
        type: string
      deployment_reason:
        required: true
        type: string

env:
  AWS_DEFAULT_OUTPUT: json
  AWS_REGION: us-west-2
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  # GITHUB_TOKEN is provided by Actions and can create deployment objects, but these objects won't trigger workflows.
  # A separate token, bound to a specific developer with access to the repo, is required to create GitHub deployment
  # objects that can trigger a deployment workflow. The secret for this token (with repo_deployment scope) is created in
  # https://github.com/settings/tokens and can be managed in https://github.com/chanzuckerberg/idseq/settings/secrets.
  GH_DEPLOY_TOKEN: ${{ secrets.GH_DEPLOY_TOKEN }}
  DEBIAN_FRONTEND: noninteractive
  LC_ALL: C.UTF-8
  LANG: C.UTF-8


jobs:
  production-deploy:
    name: Deploy ${{ inputs.source }} to prod
    if: ${{ inputs.destination == 'prod' }}
    runs-on: ubuntu-latest
    permissions: # these permissions must be set for AWS auth to work!
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: ~/.cache
          key: ${{runner.os}}-cache
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          # No need to set `ruby-version`, it gets automatically set to the .ruby-version if it is not specified.
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
      - name: Configure AWS Credentials
        id: configure_aws_credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-west-2
          role-to-assume: ${{ secrets.PROD_AWS_ROLE }}
          role-session-name: czid-web-prod-deploy
      - name: Install release script dependencies
        # jq, httpie, curl, and awscli are required for the deploy_rev.sh script, but httpie is not installed by default in the ubuntu-latest image so we manually install it
        run: |
          sudo apt-get -qq update
          sudo apt-get -qq install -o=Dpkg::Use-Pty=0 --yes httpie
      - name: Deploy ${{ inputs.source }} to production
        if: ${{ !inputs.force }}
        run: bin/deploy_automation/deploy_rev.sh prod origin/${{ inputs.source }} "${{ inputs.developer_name }}" "${{ inputs.deployment_reason }}"
      - name: Force deploy ${{ inputs.source }} to production
        if: ${{ inputs.force }}
        run: bin/deploy_automation/deploy_rev.sh -f prod origin/${{ inputs.source }} "${{ inputs.developer_name }}" "${{ inputs.deployment_reason }}"

  development-deploy:
    name: Deploy ${{ inputs.source }} to ${{ inputs.destination }}
    if: ${{ inputs.destination != 'prod' }}
    runs-on: ubuntu-latest
    permissions: # these permissions must be set for AWS auth to work!
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: ~/.cache
          key: ${{runner.os}}-cache
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          # No need to set `ruby-version`, it gets automatically set to the .ruby-version if it is not specified.
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
      - name: Configure AWS Credentials
        id: configure_aws_credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-west-2
          role-to-assume: ${{ secrets.DEV_AWS_ROLE }}
          role-session-name: czid-web-dev-deploy
      - name: Install release script dependencies
        # jq, httpie, curl, and awscli are required for the deploy_rev.sh script, but httpie is not installed by default in the ubuntu-latest image so we manually install it
        # You can find the packages installed in the ubuntu-latest image here: https://github.com/actions/runner-images/blob/main/images/ubuntu/Ubuntu2404-Readme.md
        run: |
          sudo apt-get -qq update
          sudo apt-get -qq install -o=Dpkg::Use-Pty=0 --yes httpie
      - name: Deploy ${{ inputs.source }} to ${{ inputs.destination }}
        if: ${{ !inputs.force }}
        run: bin/deploy_automation/deploy_rev.sh ${{ inputs.destination }} origin/${{ inputs.source }} "${{ inputs.developer_name }}" "${{ inputs.deployment_reason }}"
      - name: Force deploy ${{ inputs.source }} to ${{ inputs.destination }}
        if: ${{ inputs.force }}
        run: bin/deploy_automation/deploy_rev.sh -f ${{ inputs.destination }} origin/${{ inputs.source }} "${{ inputs.developer_name }}" "${{ inputs.deployment_reason }}"
