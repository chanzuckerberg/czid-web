/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 159);
/******/ })
/************************************************************************/
/******/ ({

/***/ 0:
/***/ (function(module, exports) {

throw new Error("Module build failed: Error: ENOENT: no such file or directory, open '/Users/susanadelokiki/Documents/source/idseq-web/node_modules/moment/moment.js'");

/***/ }),

/***/ 1:
/***/ (function(module, exports) {

throw new Error("Module build failed: Error: ENOENT: no such file or directory, open '/Users/susanadelokiki/Documents/source/idseq-web/node_modules/react/index.js'");

/***/ }),

/***/ 12:
/***/ (function(module, exports) {

throw new Error("Module build failed: Error: ENOENT: no such file or directory, open '/Users/susanadelokiki/Documents/source/idseq-web/node_modules/react-tipsy/dist/react-tipsy.js'");

/***/ }),

/***/ 13:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(1);

var _react2 = _interopRequireDefault(_react);

var _axios = __webpack_require__(5);

var _axios2 = _interopRequireDefault(_axios);

var _reactDom = __webpack_require__(7);

var _reactDom2 = _interopRequireDefault(_reactDom);

var _moment = __webpack_require__(0);

var _moment2 = _interopRequireDefault(_moment);

var _jquery = __webpack_require__(3);

var _jquery2 = _interopRequireDefault(_jquery);

var _reactTipsy = __webpack_require__(12);

var _reactTipsy2 = _interopRequireDefault(_reactTipsy);

var _SortHelper = __webpack_require__(154);

var _SortHelper2 = _interopRequireDefault(_SortHelper);

var _strings = __webpack_require__(17);

var _strings2 = _interopRequireDefault(_strings);

var _ProjectSelection = __webpack_require__(155);

var _ProjectSelection2 = _interopRequireDefault(_ProjectSelection);

var _ReportFilter = __webpack_require__(18);

var _ReportFilter2 = _interopRequireDefault(_ReportFilter);

var _PipelineSampleReads = __webpack_require__(157);

var _PipelineSampleReads2 = _interopRequireDefault(_PipelineSampleReads);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Samples = function (_React$Component) {
  _inherits(Samples, _React$Component);

  function Samples(props, context) {
    _classCallCheck(this, Samples);

    var _this = _possibleConstructorReturn(this, (Samples.__proto__ || Object.getPrototypeOf(Samples)).call(this, props, context));

    _this.handleSearch = _this.handleSearch.bind(_this);
    _this.csrf = props.csrf;
    _this.favoriteProjects = props.favorites || [];
    _this.allProjects = props.projects || [];
    _this.defaultSortBy = 'newest';
    var currentSort = _SortHelper2.default.currentSort();
    _this.columnSorting = _this.columnSorting.bind(_this);
    _this.handleSearchChange = _this.handleSearchChange.bind(_this);
    _this.loadMore = _this.loadMore.bind(_this);
    _this.fetchResults = _this.fetchResults.bind(_this);
    _this.fetchSamples = _this.fetchSamples.bind(_this);
    _this.handleStatusFilterSelect = _this.handleStatusFilterSelect.bind(_this);
    _this.handleTissueFilterSelect = _this.handleTissueFilterSelect.bind(_this);
    _this.setUrlLocation = _this.setUrlLocation.bind(_this);
    _this.sortSamples = _this.sortSamples.bind(_this);
    _this.switchColumn = _this.switchColumn.bind(_this);
    _this.handleProjectSelection = _this.handleProjectSelection.bind(_this);
    _this.pageSize = props.pageSize || 30;
    _this.tissue_types = _PipelineSampleReads2.default.fetchTissueTypes();
    _this.state = {
      project: null,
      totalNumber: null,
      projectId: null,
      selectedProjectId: _this.fetchParams('project_id') || null,
      filterParams: _this.fetchParams('filter') || '',
      searchParams: _this.fetchParams('search') || '',
      tissueParams: _this.fetchParams('tissue') || '',
      sampleIdsParams: _this.fetchParams('ids') || [],
      allSamples: [],
      sort_by: _this.fetchParams('sort_by') || 'id,desc',
      pagesLoaded: 0,
      pageEnd: false,
      initialFetchedSamples: [],
      loading: false,
      isRequesting: false,
      displayEmpty: false,
      project_id_download_in_progress: null,
      columnsShown: ["total_reads", "nonhost_reads", "quality_control", "compression_ratio", 'host_genome', 'location', 'pipeline_status'],
      allColumns: ["total_reads", "nonhost_reads", "quality_control", "compression_ratio", 'host_genome', 'location', 'pipeline_status', 'notes', 'tissue_type', 'nucleotide_type']
    };
    _this.sortCount = 0;

    _this.COLUMN_DISPLAY_MAP = { total_reads: { display_name: "Total reads", type: "pipeline_data" },
      nonhost_reads: { display_name: "Non-host reads", type: "pipeline_data" },
      quality_control: { display_name: "Passed QC", tooltip: "Passed quality control", type: "pipeline_data" },
      compression_ratio: { display_name: "DCR", tooltip: "Duplicate compression ratio", type: "pipeline_data" },
      pipeline_status: { display_name: "Status", type: "pipeline_data" },
      tissue_type: { display_name: "Tissue type", type: "metadata" },
      nucleotide_type: { display_name: "Nucleotide type", type: "metadata" },
      location: { display_name: "Location", type: "metadata" },
      host_genome: { display_name: "Host", type: "metadata" },
      notes: { display_name: "Notes", type: "metadata" } };
    _this.handleColumnSelectChange = _this.handleColumnSelectChange.bind(_this);
    _this.columnHidden = _this.columnHidden.bind(_this);
    _this.startReportGeneration = _this.startReportGeneration.bind(_this);
    _this.checkReportDownload = _this.checkReportDownload.bind(_this);
    _this.displayReportProgress = _this.displayReportProgress.bind(_this);

    (0, _jquery2.default)(document).ready(function () {
      (0, _jquery2.default)('select').material_select();
    });
    return _this;
  }

  _createClass(Samples, [{
    key: 'initializeTooltip',
    value: function initializeTooltip() {
      // only updating the tooltip offset when the component is loaded
      (0, _jquery2.default)(function () {
        var tooltipIdentifier = (0, _jquery2.default)("[rel='tooltip']");
        tooltipIdentifier.tooltip({
          delay: 0,
          html: true,
          placement: 'top',
          offset: '0px 50px'
        });
      });
    }
  }, {
    key: 'displayReportProgress',
    value: function displayReportProgress(res) {
      var _this2 = this;

      (0, _jquery2.default)('.download-progress').html('' + res.data.status_display).css('display', 'block');
      setTimeout(function () {
        _this2.checkReportDownload();
      }, 2000);
    }
  }, {
    key: 'startReportGeneration',
    value: function startReportGeneration() {
      var _this3 = this;

      _axios2.default.get('/projects/' + this.state.selectedProjectId + '/make_project_reports_csv').then(function (res) {
        _this3.setState({
          project_id_download_in_progress: _this3.state.selectedProjectId
        });
        _this3.displayReportProgress(res);
      });
    }
  }, {
    key: 'checkReportDownload',
    value: function checkReportDownload() {
      var _this4 = this;

      _axios2.default.get('/projects/' + this.state.project_id_download_in_progress + '/project_reports_csv_status').then(function (res) {
        var download_status = res.data.status_display;
        if (download_status === 'complete') {
          location.href = '/projects/' + _this4.state.project_id_download_in_progress + '/send_project_reports_csv';
          _this4.setState({
            project_id_download_in_progress: null
          });
        } else {
          _this4.displayReportProgress(res);
        }
      });
    }
  }, {
    key: 'sortSamples',
    value: function sortSamples() {
      var _this5 = this;

      this.sortCount += 1;
      var new_sort = void 0,
          message = '';
      if (this.sortCount === 3) {
        this.sortCount = 0;
        new_sort = 'id,desc';
        message = 'Sorting samples by date created...';
      } else {
        new_sort = this.state.sort_by === 'name,asc' ? 'name,desc' : 'name,asc';
        message = new_sort === 'name,asc' ? 'Sorting samples by name (A-Z)...' : 'Sorting samples by name (Z-A)...';
      }
      this.setState({ sort_by: new_sort, pagesLoaded: 0, pageEnd: false }, function () {
        _this5.setUrlLocation();
        _ReportFilter2.default.showLoading(message);
        _this5.fetchResults(function () {
          _ReportFilter2.default.hideLoading();
        });
      });
    }
  }, {
    key: 'columnSorting',
    value: function columnSorting(e) {
      var className = e.target.className;
      var pos = className.indexOf('sort_by');
      var sort_query = className.substr(pos).split(' ')[0];
      this.setState({ sort_query: sort_query });
      _SortHelper2.default.applySort(sort_query);
    }
  }, {
    key: 'fetchParams',
    value: function fetchParams(param) {
      var urlParams = new URLSearchParams(window.location.search);
      return urlParams.get(param);
    }
  }, {
    key: 'handleSearchChange',
    value: function handleSearchChange(e) {
      var _this6 = this;

      if (e.target.value !== '') {
        this.setState({ searchParams: e.target.value });
      } else {
        this.setState({
          searchParams: '',
          pageEnd: false,
          pagesLoaded: 0
        }, function () {
          _this6.setUrlLocation();
          _this6.fetchResults();
        });
      }
    }
  }, {
    key: 'switchColumn',
    value: function switchColumn(column_name, position) {
      var columnsShown = Object.assign([], this.state.columnsShown);
      columnsShown[position] = column_name;
      this.setState({ columnsShown: columnsShown });
    }
  }, {
    key: 'appendStatusIcon',
    value: function appendStatusIcon(status) {
      switch (status) {
        case 'WAITING':
          return _react2.default.createElement('i', { className: 'waiting fa fa-arrow-up', 'aria-hidden': 'true' });
          break;
        case 'INPROGRESS':
          return _react2.default.createElement('i', { className: 'uploading fa fa-repeat', 'aria-hidden': 'true' });
          break;
        case 'POST PROCESSING':
          return _react2.default.createElement('i', { className: 'uploading fa fa-repeat', 'aria-hidden': 'true' });
          break;
        case 'HOST FILTERING':
          return _react2.default.createElement('i', { className: 'uploading fa fa-repeat', 'aria-hidden': 'true' });
          break;
        case 'ALIGNMENT':
          return _react2.default.createElement('i', { className: 'uploading fa fa-repeat', 'aria-hidden': 'true' });
          break;
        case 'FAILED':
          return _react2.default.createElement('i', { className: 'failed fa fa-times', 'aria-hidden': 'true' });
          break;
        case 'COMPLETE':
          return _react2.default.createElement('i', { className: 'complete fa fa-check', 'aria-hidden': 'true' });
          break;
        default:
          return _react2.default.createElement('i', { className: 'waiting fa fa-arrow-up', 'aria-hidden': 'true' });
      }
    }
  }, {
    key: 'formatRunTime',
    value: function formatRunTime(runtime) {
      runtime = Number(runtime);
      var h = Math.floor(runtime / 3600);
      var m = Math.floor(runtime % 3600 / 60);
      var s = Math.floor(runtime % 3600 % 60);

      var hDisplay = h > 0 ? h + (h === 1 ? " hour, " : " hours, ") : "";
      var mDisplay = m > 0 ? m + (m === 1 ? " minute, " : " minutes, ") : "";
      var sDisplay = s > 0 ? s + (s === 1 ? " second" : " seconds") : "";
      return hDisplay + mDisplay + sDisplay;
    }
  }, {
    key: 'renderPipelineOutput',
    value: function renderPipelineOutput(samples) {
      var _this7 = this;

      var BLANK_TEXT = _react2.default.createElement(
        'span',
        { className: 'blank' },
        'NA'
      );
      return samples.map(function (sample, i) {
        var dbSample = sample.db_sample;
        var derivedOutput = sample.derived_sample_output;
        var runInfo = sample.run_info;
        var uploader = sample.uploader.name;
        var statusClass = !runInfo.job_status_description ? _this7.applyChunkStatusClass(runInfo) : _this7.applyClass(runInfo.job_status_description);
        var status = !runInfo.job_status_description ? _this7.getChunkedStage(runInfo) : runInfo.job_status_description;
        var rowWithChunkStatus = _react2.default.createElement(
          'div',
          { className: statusClass + ' status' },
          _this7.appendStatusIcon(status),
          _react2.default.createElement(
            'span',
            null,
            status
          )
        );
        var data_values = { total_reads: !derivedOutput.pipeline_run ? BLANK_TEXT : (0, _strings2.default)(derivedOutput.pipeline_run.total_reads),
          nonhost_reads: !derivedOutput.summary_stats || !derivedOutput.summary_stats.remaining_reads ? BLANK_TEXT : (0, _strings2.default)(derivedOutput.summary_stats.remaining_reads),
          nonhost_reads_percent: !derivedOutput.summary_stats || !derivedOutput.summary_stats.percent_remaining ? '' : _react2.default.createElement(
            'span',
            { className: 'percent' },
            ' ',
            '(' + derivedOutput.summary_stats.percent_remaining.toFixed(2) + '%)',
            ' '
          ),
          quality_control: !derivedOutput.summary_stats || !derivedOutput.summary_stats.qc_percent ? BLANK_TEXT : derivedOutput.summary_stats.qc_percent.toFixed(2) + '%',
          compression_ratio: !derivedOutput.summary_stats || !derivedOutput.summary_stats.compression_ratio ? BLANK_TEXT : derivedOutput.summary_stats.compression_ratio.toFixed(2),
          tissue_type: dbSample && dbSample.sample_tissue ? dbSample.sample_tissue : BLANK_TEXT,
          nucleotide_type: dbSample && dbSample.sample_template ? dbSample.sample_template : BLANK_TEXT,
          location: dbSample && dbSample.sample_location ? dbSample.sample_location : BLANK_TEXT,
          host_genome: derivedOutput && derivedOutput.host_genome_name ? derivedOutput.host_genome_name : BLANK_TEXT,
          notes: dbSample && dbSample.sample_notes ? dbSample.sample_notes : BLANK_TEXT };

        return _react2.default.createElement(
          'a',
          { className: 'col s12 no-padding sample-feed', key: i, href: '/samples/' + dbSample.id },
          _react2.default.createElement(
            'div',
            null,
            _react2.default.createElement(
              'div',
              { className: 'samples-card white' },
              _react2.default.createElement(
                'div',
                { className: 'flex-container' },
                _react2.default.createElement(
                  'ul',
                  { className: 'flex-items' },
                  _react2.default.createElement(
                    'li',
                    { className: 'sample-name-info' },
                    _react2.default.createElement(
                      'div',
                      { className: 'card-label top-label' },
                      _react2.default.createElement(
                        'span',
                        { className: 'upload-date' },
                        'Uploaded ',
                        (0, _moment2.default)(dbSample.created_at).startOf('second').fromNow()
                      )
                    ),
                    _react2.default.createElement(
                      'div',
                      { className: 'card-label center-label sample-name' },
                      dbSample.name
                    ),
                    _react2.default.createElement(
                      'div',
                      { className: 'card-label author bottom-label author' },
                      !uploader || uploader === '' ? '' : _react2.default.createElement(
                        'span',
                        null,
                        'Uploaded by: ',
                        uploader
                      )
                    )
                  ),
                  _this7.state.columnsShown.map(function (column, pos) {
                    var column_data = '';
                    if (column === 'pipeline_status') {
                      column_data = _react2.default.createElement(
                        'li',
                        { key: pos },
                        _react2.default.createElement(
                          'div',
                          { className: 'card-label top-label' },
                          rowWithChunkStatus
                        ),
                        _react2.default.createElement(
                          'div',
                          { className: 'card-label center-label' },
                          runInfo.total_runtime ? _react2.default.createElement(
                            'span',
                            { className: 'time' },
                            _react2.default.createElement('i', { className: 'fa fa-clock-o', 'aria-hidden': 'true' }),
                            _react2.default.createElement(
                              'span',
                              { className: 'duration-label' },
                              _this7.formatRunTime(runInfo.total_runtime)
                            )
                          ) : null
                        )
                      );
                    } else if (column === 'nonhost_reads') {
                      column_data = _react2.default.createElement(
                        'li',
                        { key: pos },
                        _react2.default.createElement(
                          'div',
                          { className: 'card-label center center-label data-label' },
                          data_values[column],
                          ' ',
                          data_values["nonhost_reads_percent"]
                        )
                      );
                    } else {
                      column_data = _react2.default.createElement(
                        'li',
                        { key: pos },
                        _react2.default.createElement(
                          'div',
                          { className: 'card-label center center-label data-label' },
                          data_values[column]
                        )
                      );
                    }
                    return column_data;
                  })
                )
              )
            )
          )
        );
      });
    }

    //Load more samples on scroll

  }, {
    key: 'scrollDown',
    value: function scrollDown() {
      var that = this;
      (0, _jquery2.default)(window).scroll(function () {
        if ((0, _jquery2.default)(window).scrollTop() > (0, _jquery2.default)(document).height() - (0, _jquery2.default)(window).height() - 6000) {
          {
            !that.state.isRequesting && !that.state.pageEnd ? that.loadMore() : null;
          }
          return false;
        }
      });
    }

    //fetch first set of samples

  }, {
    key: 'fetchSamples',
    value: function fetchSamples() {
      var _this8 = this;

      Samples.showLoading('Fetching samples...');
      var params = this.getParams();
      _axios2.default.get('/samples?' + params).then(function (res) {
        Samples.hideLoader();
        _this8.setState(function (prevState) {
          return {
            initialFetchedSamples: res.data.samples,
            allSamples: res.data.samples,
            displayEmpty: false,
            pagesLoaded: prevState.pagesLoaded + 1,
            totalNumber: res.data.total_count,
            pageEnd: res.data.samples.length >= _this8.pageSize ? false : true
          };
        });
        if (!_this8.state.allSamples.length) {
          _this8.setState({ displayEmpty: true });
        }
      }).catch(function (err) {
        Samples.hideLoader();
        _this8.setState(function (prevState) {
          return {
            allSamples: [],
            displayEmpty: true,
            pagesLoaded: 0,
            pageEnd: prevState.pageEnd
          };
        });
      });
    }

    //fetch data used by projects page

  }, {
    key: 'fetchProjectPageData',
    value: function fetchProjectPageData() {
      this.fetchSamples();
    }

    //load more paginated samples

  }, {
    key: 'loadMore',
    value: function loadMore() {
      var _this9 = this;

      var params = this.getParams();
      this.setState({ isRequesting: true });
      _axios2.default.get('/samples?' + params).then(function (res) {
        _this9.setState(function (prevState) {
          return {
            isRequesting: false,
            allSamples: [].concat(_toConsumableArray(prevState.allSamples), _toConsumableArray(res.data.samples)),
            pagesLoaded: prevState.pagesLoaded + 1,
            pageEnd: res.data.samples.length >= _this9.pageSize ? false : true
          };
        });
      }).catch(function (err) {
        _this9.setState(function (prevState) {
          return {
            isRequesting: false,
            allSamples: [].concat(_toConsumableArray(prevState.allSamples)),
            pagesLoaded: prevState.pagesLoaded,
            pageEnd: prevState.pageEnd
          };
        });
      });
    }

    //fetch project, filter and search params

  }, {
    key: 'getParams',
    value: function getParams() {
      var params = 'filter=' + this.state.filterParams + '&tissue=' + this.state.tissueParams + '&page=' + (this.state.pagesLoaded + 1) + '&search=' + this.state.searchParams + '&sort_by=' + this.state.sort_by;
      var projectId = parseInt(this.state.selectedProjectId);

      if (projectId) {
        params += '&project_id=' + projectId;
      }
      if (this.state.sampleIdsParams.length) {
        var sampleParams = this.state.sampleIdsParams;
        params += '&ids=' + sampleParams;
      }
      return params;
    }

    //fetch results from filtering, search or switching projects

  }, {
    key: 'fetchResults',
    value: function fetchResults(cb) {
      var _this10 = this;

      Samples.showLoading('Fetching samples...');
      var params = this.getParams();
      _axios2.default.get('/samples?' + params).then(function (res) {
        Samples.hideLoader();
        _this10.setState(function (prevState) {
          return {
            initialFetchedSamples: res.data.samples,
            allSamples: res.data.samples,
            displayEmpty: false,
            totalNumber: res.data.total_count,
            pagesLoaded: prevState.pagesLoaded + 1,
            pageEnd: res.data.samples.length >= _this10.pageSize ? false : true
          };
        });
        if (!_this10.state.allSamples.length) {
          _this10.setState({ displayEmpty: true });
        }
        if (typeof cb === 'function') {
          cb();
        }
      }).catch(function (err) {
        _this10.setState({
          initialFetchedSamples: [],
          allSamples: [],
          displayEmpty: true
        });
        if (typeof cb === 'function') {
          cb();
        }
      });
    }
  }, {
    key: 'applyClass',
    value: function applyClass(status) {
      if (status === 'COMPLETE') {
        return 'complete';
      } else if (status === 'WAITING') {
        return 'waiting';
      } else if (status === 'INPROGRESS') {
        return 'uploading';
      } else if (status === 'FAILED') {
        return 'failed';
      }
    }
  }, {
    key: 'applyChunkStatusClass',
    value: function applyChunkStatusClass(runInfo) {
      var postProcess = runInfo['Post Processing'];
      var hostFiltering = runInfo['Host Filtering'];
      var alignment = runInfo['GSNAPL/RAPSEARCH alignment'];
      if (postProcess) {
        return postProcess === 'LOADED' ? 'complete' : 'uploading';
      } else if (alignment) {
        return alignment === 'FAILED' ? 'failed' : 'uploading';
      } else if (hostFiltering) {
        return hostFiltering === 'FAILED' ? 'failed' : 'uploading';
      }
    }
  }, {
    key: 'getChunkedStage',
    value: function getChunkedStage(runInfo) {
      var postProcess = runInfo['Post Processing'];
      var hostFiltering = runInfo['Host Filtering'];
      var alignment = runInfo['GSNAPL/RAPSEARCH alignment'];
      if (postProcess === 'FAILED' || alignment === 'FAILED' || hostFiltering === 'FAILED') {
        return 'FAILED';
      } else if (postProcess) {
        if (postProcess === 'LOADED') return 'COMPLETE';else return 'POST PROCESSING';
      } else if (alignment) {
        return 'ALIGNMENT';
      } else if (hostFiltering) {
        return 'HOST FILTERING';
      } else {
        return 'WAITING';
      }
    }

    //handle search when query is passed

  }, {
    key: 'handleSearch',
    value: function handleSearch(e) {
      var _this11 = this;

      if (e.target.value !== '' && e.key === 'Enter') {
        Samples.showLoading('Searching for samples that match ' + e.target.value + '...');
        this.setState({
          pagesLoaded: 0,
          pageEnd: false,
          searchParams: e.target.value
        }, function () {
          Samples.hideLoader();
          _this11.setUrlLocation();
          _this11.fetchResults();
        });
      }
    }
  }, {
    key: 'fetchProjectDetails',
    value: function fetchProjectDetails(projId) {
      var _this12 = this;

      if (!projId) {
        this.setState({
          selectedProjectId: null,
          project: null,
          pagesLoaded: 0,
          pageEnd: false
        });
        this.fetchSamples();
      } else {
        projId = parseInt(projId);
        _axios2.default.get('projects/' + projId + '.json').then(function (res) {
          _this12.setState({
            pagesLoaded: 0,
            project: res.data
          });
          _this12.fetchResults();
        }).catch(function (err) {
          _this12.setState({ project: null });
        });
      }
    }
  }, {
    key: 'viewSample',
    value: function viewSample(id) {
      location.href = '/samples/' + id;
      _satellite.track('viewsample');
    }
  }, {
    key: 'getActiveSort',
    value: function getActiveSort(className) {
      if (className) {
        var sort = _SortHelper2.default.getFilter('sort_by');
        if (sort === className) {
          return 'active';
        } else if (className === this.defaultSortBy && !sort) {
          return 'active';
        }
      }
    }
  }, {
    key: 'toggleDisplayProjects',
    value: function toggleDisplayProjects() {
      this.setState(function (prevState) {
        return { showLess: !prevState.showLess };
      });
    }
  }, {
    key: 'renderEmptyTable',
    value: function renderEmptyTable() {
      return _react2.default.createElement(
        'div',
        { className: 'center-align' },
        _react2.default.createElement(
          'i',
          { className: 'fa fa-frown-o' },
          ' No result found'
        )
      );
    }
  }, {
    key: 'findSelectedColumns',
    value: function findSelectedColumns(selO) {
      var selValues = [];
      for (var i = 0; i < selO.length; i++) {
        var column_name = selO.options[i].value;
        if (selO.options[i].selected && column_name !== "") {
          selValues.push(column_name);
        }
      }
      return selValues;
    }
  }, {
    key: 'handleColumnSelectChange',
    value: function handleColumnSelectChange(e) {
      var selected_columns = this.findSelectedColumns(e.target);
      this.setState({ columnsShown: selected_columns });
    }
  }, {
    key: 'columnHidden',
    value: function columnHidden(column) {
      return !this.state.columnsShown.includes(column);
    }
  }, {
    key: 'display_column_options',
    value: function display_column_options(column_map, data_type) {
      var column_list = Object.keys(column_map);
      return column_list.map(function (option_name, i) {
        if (column_map[option_name].type === data_type) {
          return _react2.default.createElement(
            'option',
            { key: option_name, id: option_name, value: option_name },
            column_map[option_name].display_name
          );
        }
      });
    }
  }, {
    key: 'addFavIconClass',
    value: function addFavIconClass(project) {
      return _react2.default.createElement('i', { 'data-status': 'favorite', 'data-fav': project.favorited, 'data-id': project.id, onClick: this.toggleFavorite, className: !project.favorited ? "favorite fa fa-star-o" : "favorite fa fa-star" });
    }
  }, {
    key: 'downloadTable',
    value: function downloadTable(id) {
      location.href = '/projects/' + id + '/csv';
      _satellite.track('downloadtable');
    }
  }, {
    key: 'renderTable',
    value: function renderTable(samples) {
      var _this13 = this;

      var project_id = this.state.selectedProjectId ? this.state.selectedProjectId : 'all';
      var search_field_width = project_id === 'all' ? 'col s10' : 'col s8';
      var search_field = _react2.default.createElement(
        'div',
        { className: search_field_width + ' no-padding' },
        _react2.default.createElement(
          'div',
          { className: 'white' },
          _react2.default.createElement(
            'span',
            { className: 'icon' },
            _react2.default.createElement('i', { className: 'fa fa-search', 'aria-hidden': 'true' })
          ),
          _react2.default.createElement('input', { id: 'search', value: this.state.searchParams, onChange: this.handleSearchChange, type: 'search', onKeyDown: this.handleSearch, className: 'search', placeholder: 'Search for sample' })
        )
      );
      var table_download_button = _react2.default.createElement(
        'div',
        { className: 'col s2 download-table' },
        _react2.default.createElement(
          'div',
          { className: 'white' },
          _react2.default.createElement(
            'a',
            { href: '/projects/' + project_id + '/csv', className: 'download-project center' },
            _react2.default.createElement('i', { className: 'fa fa-cloud-download' }),
            _react2.default.createElement(
              'span',
              null,
              'Download table'
            )
          )
        )
      );
      var reports_download_button_contents = this.state.project_id_download_in_progress ? _react2.default.createElement('span', { className: 'download-progress' }) : _react2.default.createElement(
        'a',
        { onClick: this.startReportGeneration, className: 'download-project center' },
        _react2.default.createElement('i', { className: 'fa fa-cloud-download' }),
        _react2.default.createElement(
          'span',
          null,
          'Download reports'
        )
      );
      var reports_download_button = _react2.default.createElement(
        'div',
        { className: 'col s2 download-table' },
        _react2.default.createElement(
          'div',
          { className: 'white' },
          reports_download_button_contents
        )
      );
      var search_box = _react2.default.createElement(
        'div',
        { className: 'row search-box' },
        search_field,
        table_download_button,
        project_id === 'all' ? null : reports_download_button
      );

      var projInfo = _react2.default.createElement(
        'div',
        { className: 'wrapper' },
        _react2.default.createElement(
          'div',
          { className: !this.state.project ? "proj-title all-proj" : "proj-title" },
          !this.state.project ? _react2.default.createElement(
            'div',
            null,
            'All projects'
          ) : this.state.project.name
        ),
        _react2.default.createElement(
          'p',
          null,
          this.state.allSamples.length === 0 ? 'No sample found' : this.state.allSamples.length === 1 ? '1 sample found' : this.state.allSamples.length + ' out of ' + this.state.totalNumber + ' samples found'
        )
      );

      var filterTissueDropDown = _react2.default.createElement(
        'div',
        { className: 'dropdown-status-filtering' },
        _react2.default.createElement(
          'li',
          null,
          _react2.default.createElement(
            'a',
            { className: 'title' },
            _react2.default.createElement(
              'b',
              null,
              'Filter tissue'
            )
          )
        ),
        this.tissue_types.map(function (tissue, i) {
          _react2.default.createElement(
            'div',
            null,
            tissue,
            'nknjn'
          );
          return _react2.default.createElement(
            'li',
            { key: i, className: 'filter-item', 'data-status': tissue, onClick: _this13.handleTissueFilterSelect },
            _react2.default.createElement(
              'a',
              { 'data-status': tissue, className: 'filter-item' },
              tissue
            ),
            _react2.default.createElement('i', { className: 'filter fa fa-check hidden' })
          );
        }),
        _react2.default.createElement('li', { className: 'divider' })
      );

      var filterStatus = _react2.default.createElement(
        'div',
        { className: 'dropdown-status-filtering' },
        _react2.default.createElement(
          'li',
          null,
          _react2.default.createElement(
            'a',
            { className: 'title' },
            _react2.default.createElement(
              'b',
              null,
              'Filter status'
            )
          )
        ),
        _react2.default.createElement(
          'li',
          { className: 'filter-item', 'data-status': 'WAITING', onClick: this.handleStatusFilterSelect },
          _react2.default.createElement(
            'a',
            { 'data-status': 'WAITING', className: 'filter-item waiting' },
            'Waiting'
          ),
          _react2.default.createElement('i', { 'data-status': 'WAITING', className: 'filter fa fa-check hidden' })
        ),
        _react2.default.createElement(
          'li',
          { className: 'filter-item', 'data-status': 'UPLOADING', onClick: this.handleStatusFilterSelect },
          _react2.default.createElement(
            'a',
            { 'data-status': 'UPLOADING', className: 'filter-item uploading' },
            'In Progress'
          ),
          _react2.default.createElement('i', { 'data-status': 'UPLOADING', className: 'filter fa fa-check hidden' })
        ),
        _react2.default.createElement(
          'li',
          { className: 'filter-item', 'data-status': 'CHECKED', onClick: this.handleStatusFilterSelect },
          _react2.default.createElement(
            'a',
            { 'data-status': 'CHECKED', className: 'filter-item complete' },
            'Complete'
          ),
          _react2.default.createElement('i', { 'data-status': 'CHECKED', className: 'filter fa fa-check hidden' })
        ),
        _react2.default.createElement(
          'li',
          { className: 'filter-item', onClick: this.handleStatusFilterSelect, 'data-status': 'FAILED' },
          _react2.default.createElement(
            'a',
            { 'data-status': 'FAILED', className: 'filter-item failed' },
            'Failed'
          ),
          _react2.default.createElement('i', { 'data-status': 'FAILED', className: 'filter fa fa-check hidden' })
        ),
        _react2.default.createElement(
          'li',
          { className: 'filter-item', 'data-status': 'ALL', onClick: this.handleStatusFilterSelect },
          _react2.default.createElement(
            'a',
            { 'data-status': 'ALL', className: 'filter-item all' },
            'All'
          ),
          _react2.default.createElement('i', { 'data-status': 'ALL', className: 'filter all fa fa-check hidden' })
        ),
        _react2.default.createElement('li', { className: 'divider' })
      );

      var tableHead = _react2.default.createElement(
        'div',
        { className: 'col s12 sample-feed-head no-padding samples-table-head' },
        _react2.default.createElement(
          'div',
          { className: 'samples-card white' },
          _react2.default.createElement(
            'div',
            { className: 'flex-container' },
            _react2.default.createElement(
              'ul',
              { className: 'flex-items' },
              _react2.default.createElement(
                'li',
                { className: 'sample-name-info' },
                _react2.default.createElement(
                  'div',
                  { className: 'card-label column-title center-label sample-name' },
                  _react2.default.createElement(
                    'div',
                    { className: 'sort-able', onClick: this.sortSamples },
                    _react2.default.createElement(
                      'span',
                      null,
                      'Name'
                    ),
                    _react2.default.createElement('i', { className: 'fa ' + (this.state.sort_by === 'name,desc' ? 'fa fa-sort-alpha-desc' : 'fa fa-sort-alpha-asc') + '\n                  ' + (this.state.sort_by === 'name,desc' || this.state.sort_by === 'name,asc' ? 'active' : 'hidden') })
                  )
                )
              ),
              this.state.columnsShown.map(function (column_name, pos) {
                return _react2.default.createElement(
                  'li',
                  { key: 'shown-' + pos },
                  _this13.COLUMN_DISPLAY_MAP[column_name].tooltip ? _react2.default.createElement(
                    _reactTipsy2.default,
                    { position: 'bottom',
                      content: _this13.COLUMN_DISPLAY_MAP[column_name].tooltip },
                    _react2.default.createElement(
                      'div',
                      { className: 'card-label column-title center-label sample-name center menu-dropdown',
                        'data-activates': 'column-dropdown-' + pos },
                      _this13.COLUMN_DISPLAY_MAP[column_name].display_name,
                      ' ',
                      _react2.default.createElement('i', { className: 'fa fa-caret-down' })
                    )
                  ) : _react2.default.createElement(
                    'div',
                    { className: 'card-label column-title center-label sample-name center menu-dropdown',
                      'data-activates': 'column-dropdown-' + pos },
                    _this13.COLUMN_DISPLAY_MAP[column_name].display_name,
                    ' ',
                    _react2.default.createElement('i', { className: 'fa fa-caret-down' })
                  ),
                  _react2.default.createElement(
                    'ul',
                    { className: 'dropdown-content column-dropdown', id: 'column-dropdown-' + pos },
                    column_name === 'pipeline_status' ? _react2.default.createElement(
                      'div',
                      null,
                      filterStatus
                    ) : column_name === 'tissue_type' ? _react2.default.createElement(
                      'div',
                      null,
                      filterTissueDropDown
                    ) : "",
                    _react2.default.createElement(
                      'li',
                      null,
                      _react2.default.createElement(
                        'a',
                        { className: 'title' },
                        _react2.default.createElement(
                          'b',
                          null,
                          'Switch column'
                        )
                      )
                    ),
                    _this13.state.allColumns.map(function (name, i) {
                      return _this13.state.columnsShown.includes(name) ? _react2.default.createElement(
                        'li',
                        { key: 'all-' + i, className: 'disabled column_name ' + (column_name === name ? 'current' : '') },
                        _this13.COLUMN_DISPLAY_MAP[name].display_name,
                        column_name === name ? _react2.default.createElement('i', { className: 'fa fa-check right' }) : null
                      ) : _react2.default.createElement(
                        'li',
                        { key: 'all-' + i, className: 'selectable column_name', onClick: function onClick() {
                            return _this13.switchColumn(name, pos);
                          } },
                        _this13.COLUMN_DISPLAY_MAP[name].display_name
                      );
                    })
                  )
                );
              })
            )
          )
        )
      );

      return _react2.default.createElement(
        'div',
        { className: 'row content-wrapper' },
        _react2.default.createElement(
          'div',
          { className: 'project-info col s12' },
          projInfo
        ),
        _react2.default.createElement(
          'div',
          { className: 'sample-container col s12' },
          search_box,
          _react2.default.createElement(
            'div',
            { className: 'sample-table-container row' },
            tableHead,
            !samples.length && this.state.displayEmpty ? this.renderEmptyTable() : this.renderPipelineOutput(samples)
          )
        ),
        !this.state.pageEnd && this.state.allSamples.length > 14 ? _react2.default.createElement(
          'div',
          { className: 'scroll' },
          _react2.default.createElement('i', { className: 'fa fa-spinner fa-spin fa-3x' })
        ) : ""
      );
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate(prevProps, prevState) {
      var prevStatus = prevState.filterParams;
      var currentStatus = this.state.filterParams;
      if (prevStatus !== currentStatus) {
        (0, _jquery2.default)('i[data-status="' + prevStatus + '"]').removeClass('active');
      } else {
        (0, _jquery2.default)('i[data-status="' + currentStatus + '"]').addClass('active');
      }
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      (0, _jquery2.default)(function () {
        var samplesHeader = (0, _jquery2.default)('.sample-table-container');
        (0, _jquery2.default)(window).scroll(function () {
          if ((0, _jquery2.default)(window).scrollTop() > samplesHeader.offset().top) {
            samplesHeader.addClass('shadow');
          } else {
            samplesHeader.removeClass('shadow');
          }
        });
        (0, _jquery2.default)('.filter').hide();
        (0, _jquery2.default)('body').addClass('background-cover');
      });
      this.initializeTooltip();
      this.fetchProjectPageData();
      this.state.selectedProjectId ? this.fetchProjectDetails(this.state.selectedProjectId) : null;
      this.scrollDown();
      // this.initializeProjectList();
      this.displayPipelineStatusFilter();
      this.initializeColumnSelect();
    }
  }, {
    key: 'initializeColumnSelect',
    value: function initializeColumnSelect() {
      (0, _jquery2.default)(document).ready(function () {
        (0, _jquery2.default)('select').material_select();
      });
      (0, _jquery2.default)(_reactDom2.default.findDOMNode(this.refs.columnSelector)).on('change', this.handleColumnSelectChange.bind(this));
    }

    // initialize filter dropdown

  }, {
    key: 'displayPipelineStatusFilter',
    value: function displayPipelineStatusFilter() {
      var textSize = 14;
      (0, _jquery2.default)('.status-dropdown, .menu-dropdown').dropdown({
        belowOrigin: true,
        stopPropagation: false,
        constrainWidth: true
      });
      (0, _jquery2.default)(".dropdown-content>li>a").css("font-size", textSize);
    }
  }, {
    key: 'displayCheckMarks',
    value: function displayCheckMarks(filter) {
      (0, _jquery2.default)('.filter').hide();
      (0, _jquery2.default)('.filter[data-status="' + filter + '"]').show();
    }

    //handle filtering when a filter is selected from list

  }, {
    key: 'handleStatusFilterSelect',
    value: function handleStatusFilterSelect(e) {
      var _this14 = this;

      var status = e.target.getAttribute('data-status');
      this.setState({
        pagesLoaded: 0,
        pageEnd: false,
        filterParams: status
      }, function () {
        _this14.setUrlLocation();
        _this14.fetchResults();
      });
    }
  }, {
    key: 'handleTissueFilterSelect',
    value: function handleTissueFilterSelect(e) {
      var _this15 = this;

      e.preventDefault();
      var status = e.target.getAttribute('data-status');
      this.setState({
        pagesLoaded: 0,
        pageEnd: false,
        tissueParams: status
      }, function () {
        _this15.setUrlLocation();
        _this15.fetchResults();
      });
    }

    //set Url based on requests

  }, {
    key: 'setUrlLocation',
    value: function setUrlLocation() {
      var projectId = parseInt(this.state.selectedProjectId);
      var params = {
        project_id: projectId ? projectId : null,
        filter: this.state.filterParams,
        tissue: this.state.tissueParams,
        search: this.state.searchParams,
        sort_by: this.state.sort_by
      };
      window.history.replaceState(null, null, '?' + _jquery2.default.param(params));
    }
  }, {
    key: 'handleProjectSelection',
    value: function handleProjectSelection(id) {
      var _this16 = this;

      this.setState({
        selectedProjectId: id,
        pagesLoaded: 0,
        pageEnd: false
      }, function () {
        _this16.setUrlLocation();
        _this16.fetchProjectDetails(id);
      });
    }
  }, {
    key: 'render',
    value: function render() {
      var project_section = _react2.default.createElement(_ProjectSelection2.default, {
        favoriteProjects: this.favoriteProjects,
        allProjects: this.allProjects,
        csrf: this.csrf,
        selectProject: this.handleProjectSelection
      });

      return _react2.default.createElement(
        'div',
        null,
        _react2.default.createElement(
          'div',
          { className: 'row content-body' },
          _react2.default.createElement(
            'div',
            { className: 'col s2 sidebar' },
            project_section
          ),
          _react2.default.createElement(
            'div',
            { className: 'col s10' },
            this.renderTable(this.state.allSamples)
          )
        )
      );
    }
  }], [{
    key: 'showLoading',
    value: function showLoading(message) {
      (0, _jquery2.default)('.page-loading .spinner-label').text(message);
      (0, _jquery2.default)('.page-loading').css('display', 'flex');
    }
  }, {
    key: 'hideLoader',
    value: function hideLoader() {
      (0, _jquery2.default)('.page-loading').css('display', 'none');
    }
  }]);

  return Samples;
}(_react2.default.Component);

exports.default = Samples;

/***/ }),

/***/ 154:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @class SortHelper
 * @desc a helper class to handle sorting on tables
*/
var SortHelper = function () {
  function SortHelper() {
    _classCallCheck(this, SortHelper);
  }

  _createClass(SortHelper, null, [{
    key: 'currentSort',

    /**
      @method currentSort
      @desc this gets the current sort from the url
      @return {Object} an object literal
    */
    value: function currentSort() {
      var sortBy = SortHelper.getFilter('sort_by');
      var currentSort = {};
      if (sortBy) {
        currentSort = {
          sortQuery: 'sort_by=' + sortBy
        };
      }
      return currentSort;
    }

    /**
      @method getFilter
      @param {String} name
      @desc this search the url parameter for the value of the specified get key
      @return {String} when it finds the value or null when it doesn't
    */

  }, {
    key: 'getFilter',
    value: function getFilter(name) {
      var url = window.location.href;
      name = name.replace(/[\[\]]/g, '\\$&');
      var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)');
      var results = regex.exec(url);
      if (!results) {
        return null;
      }
      if (!results[2]) {
        return null;
      }
      return decodeURIComponent(results[2].replace(/\+/g, ' '));
    }

    /**
      @method applySort
      @param {String} sortQuery
      @desc this method refreshes the entire page with the new query string parameters
    */

  }, {
    key: 'applySort',
    value: function applySort(sortQuery) {
      var currentUrl = window.location.href;
      var url = SortHelper.deleteUrlParam(currentUrl, 'sort_by');
      if (SortHelper.hasQuery(url)) {
        window.location = url + '&' + sortQuery;
      } else {
        window.location = url + '?' + sortQuery;
      }
    }

    /**
     * @method deleteUrlParam
     * @param {String} url
     * @param {String} parameter
     * @desc this delete a query parameter from a url
     * @return {String} the modified url
    */

  }, {
    key: 'deleteUrlParam',
    value: function deleteUrlParam(url, parameter) {
      var queryString = url.split('?');
      if (queryString.length >= 2) {
        var prefix = encodeURIComponent(parameter) + '=';
        var pars = queryString[1].split(/[&;]/g);
        var i = void 0;
        for (i = pars.length; i--; i > 0) {
          if (pars[i].lastIndexOf(prefix, 0) !== -1) {
            pars.splice(i, 1);
          }
        }
        url = '' + queryString[0] + (pars.length > 0 ? '?' + pars.join('&') : '');
      }
      return url;
    }

    /**
     * @method hasQuery
     * @param {String} url
     * @desc check if the url contain any get query
     * @return {Boolean} true if the urls has any query modifier
    */

  }, {
    key: 'hasQuery',
    value: function hasQuery(url) {
      return url.split('?').length >= 2;
    }
  }]);

  return SortHelper;
}();

exports.default = SortHelper;

/***/ }),

/***/ 155:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(1);

var _react2 = _interopRequireDefault(_react);

var _axios = __webpack_require__(5);

var _axios2 = _interopRequireDefault(_axios);

var _jquery = __webpack_require__(3);

var _jquery2 = _interopRequireDefault(_jquery);

var _Samples = __webpack_require__(13);

var _Samples2 = _interopRequireDefault(_Samples);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 @class ProjectSelection
 @desc Creates react component to handle filtering in the page
 */

var ProjectSelection = function (_React$Component) {
  _inherits(ProjectSelection, _React$Component);

  function ProjectSelection(props) {
    _classCallCheck(this, ProjectSelection);

    var _this = _possibleConstructorReturn(this, (ProjectSelection.__proto__ || Object.getPrototypeOf(ProjectSelection)).call(this, props));

    _this.csrf = props.csrf;
    _this.favoriteProjects = props.favoriteProjects;
    _this.allProjects = props.allProjects;
    _this.toggleDisplayProjects = _this.toggleDisplayProjects.bind(_this);
    _this.toggleDisplayFavProjects = _this.toggleDisplayFavProjects.bind(_this);
    _this.toggleFavorite = _this.toggleFavorite.bind(_this);
    _this.handleProjectClick = _this.handleProjectClick.bind(_this);
    _this.handleAllProjectorSamplesClick;
    _this.uploadSample = _this.uploadSample.bind(_this);

    _this.state = {
      formattedProjectList: [],
      formattedFavProjectList: [],
      favIds: [],
      showLess: true,
      showLessFavorites: true,
      selectedProjectId: _this.fetchParams('project_id') || null
    };
    return _this;
  }

  _createClass(ProjectSelection, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      this.reformatProjectList(this.favoriteProjects, this.allProjects);
    }
  }, {
    key: 'fetchParams',
    value: function fetchParams(param) {
      var urlParams = new URLSearchParams(window.location.search);
      return urlParams.get(param);
    }
  }, {
    key: 'toggleDisplayProjects',
    value: function toggleDisplayProjects() {
      this.setState(function (prevState) {
        return { showLess: !prevState.showLess };
      });
    }
  }, {
    key: 'uploadSample',
    value: function uploadSample() {
      location.href = '/samples/new';
    }
  }, {
    key: 'toggleDisplayFavProjects',
    value: function toggleDisplayFavProjects() {
      this.setState(function (prevState) {
        return { showLessFavorites: !prevState.showLessFavorites };
      });
    }
  }, {
    key: 'toggleFavorite',
    value: function toggleFavorite(e) {
      var _this2 = this;

      var favStatus = e.target.getAttribute('data-fav');
      var projectId = e.target.getAttribute('data-id');
      _Samples2.default.showLoading((favStatus == 'true' ? 'Removing from' : 'Adding to') + ' favorites...');
      _axios2.default.put('/projects/' + projectId + '/' + (favStatus == 'true' ? 'remove_favorite' : 'add_favorite') + '?', {
        authenticity_token: this.csrf
      }).then(function (res) {
        _Samples2.default.hideLoader();
        favStatus == 'true' ? _satellite.track('unfavorite') : _satellite.track('favorite');
        _this2.checkIfProjecExistInFavorites(projectId, _this2.state.formattedProjectList);
      }).catch(function (err) {
        _Samples2.default.hideLoader();
      });
    }
  }, {
    key: 'reformatProjectList',
    value: function reformatProjectList(favorites, allProjects) {
      var favProjects = [];
      var favIds = [];
      if (favorites.length) {
        favIds = favorites.map(function (e) {
          return e.id;
        });
      }
      var formattedList = allProjects.map(function (e) {
        var project = e;

        if (!project.favorited) {
          project.favorited = favIds.includes(project.id);

          if (project.favorited) {
            favProjects.push(project);
          }
        }

        return project;
      });

      this.setState({
        formattedProjectList: formattedList,
        formattedFavProjectList: favProjects,
        favIds: favIds
      });

      return formattedList;
    }

    // update

  }, {
    key: 'updateProjectsState',
    value: function updateProjectsState(id, projects) {
      var updatedList = projects.map(function (project) {
        if (project.id == id) {
          project.favorited = !project.favorited;
        }

        return project;
      });

      this.setState({ formattedProjectList: updatedList });

      return updatedList;
    }

    // check existence of projects in favorites projects list
    // if true then remove else add

  }, {
    key: 'checkIfProjecExistInFavorites',
    value: function checkIfProjecExistInFavorites(id, projects) {
      if (this.state.favIds.includes(parseInt(id))) {
        this.removeProjectFromFavorites(id);
      } else {
        this.addProjectToFavorites(id, projects);
      }
      this.updateProjectsState(id, projects);
    }

    // remove Projects from favorites list

  }, {
    key: 'removeProjectFromFavorites',
    value: function removeProjectFromFavorites(id) {
      var updatedFavouriteProjects = this.state.formattedFavProjectList.filter(function (project) {
        return project.id != id;
      });
      var removedFavouriteProject = this.state.formattedFavProjectList.filter(function (project) {
        return project.id == id;
      });

      var favIds = this.state.favIds;
      var projectIdIndex = favIds.indexOf(removedFavouriteProject[0].id);

      if (projectIdIndex > -1) {
        favIds.splice(projectIdIndex, 1);
        this.setState({
          formattedFavProjectList: updatedFavouriteProjects,
          favIds: favIds
        });
      }
    }

    // add Projects to favorites list

  }, {
    key: 'addProjectToFavorites',
    value: function addProjectToFavorites(id, projects) {
      var updatedProject = projects.filter(function (project) {
        return project.id == id;
      });

      this.setState({
        formattedFavProjectList: [].concat(_toConsumableArray(this.state.formattedFavProjectList), _toConsumableArray(updatedProject)),
        favIds: [].concat(_toConsumableArray(this.state.favIds), [updatedProject[0].id])
      });
    }
  }, {
    key: 'handleProjectClick',
    value: function handleProjectClick(e) {
      var id = e.target.getAttribute('data-id');
      var listType = e.target.getAttribute('data-type');
      if (listType == 'fav') {
        this.highlightSelectedFavoriteProject(id);
      } else {
        this.highlightSelectedProject(e, id);
      }
      this.props.selectProject(id);
    }
  }, {
    key: 'highlightSelectedProject',
    value: function highlightSelectedProject(e, id) {
      this.removeHighlight();
      this.removeHighlightedText();
      id ? (0, _jquery2.default)('.project-item[data-id="' + id + '"]').addClass('highlight') : this.highlightAllSamplesorAllProject(e);
    }
  }, {
    key: 'highlightAllSamplesorAllProject',
    value: function highlightAllSamplesorAllProject(e) {
      this.removeHighlightedText();
      var tagAttribute = e.target.getAttribute('data-title');
      if (tagAttribute === "allsamples") {
        (0, _jquery2.default)('.samples-title').addClass('highlight-text');
      } else {
        (0, _jquery2.default)('.projects-title').addClass('highlight-text');
      }
    }
  }, {
    key: 'removeHighlightedText',
    value: function removeHighlightedText() {
      (0, _jquery2.default)('.samples-title').removeClass('highlight-text');
      (0, _jquery2.default)('.projects-title').removeClass('highlight-text');
    }
  }, {
    key: 'removeHighlight',
    value: function removeHighlight() {
      (0, _jquery2.default)('.fav-item').removeClass('highlight');
      (0, _jquery2.default)('.project-item').removeClass('highlight');
    }
  }, {
    key: 'highlightSelectedFavoriteProject',
    value: function highlightSelectedFavoriteProject(id) {
      this.removeHighlight();
      this.removeHighlightedText();
      (0, _jquery2.default)('.fav-item[data-id="' + id + '"]').addClass('highlight');
    }
  }, {
    key: 'addFavIconClass',
    value: function addFavIconClass(project) {
      return _react2.default.createElement('i', { 'data-status': 'favorite', 'data-fav': project.favorited, 'data-id': project.id, onClick: this.toggleFavorite, className: !project.favorited ? "favorite fa fa-star-o" : "favorite fa fa-star" });
    }
  }, {
    key: 'renderProjectSection',
    value: function renderProjectSection() {
      var _this3 = this;

      var sortLogic = function sortLogic(a, b) {
        var nameA = a.name.toUpperCase(); // ignore upper and lowercase
        var nameB = b.name.toUpperCase(); // ignore upper and lowercase
        if (nameA < nameB) {
          return -1;
        }
        if (nameA > nameB) {
          return 1;
        }
        // names must be equal
        return 0;
      };

      var fav_section = _react2.default.createElement(
        'div',
        { className: 'row fav-row' },
        _react2.default.createElement(
          'span',
          { className: 'title' },
          'Favorite Projects'
        ),
        _react2.default.createElement('hr', null),
        _react2.default.createElement(
          'div',
          { className: 'fav-projects-wrapper' },
          !this.state.formattedFavProjectList.length ? _react2.default.createElement(
            'div',
            { className: 'none' },
            'None'
          ) : this.state.showLessFavorites ? this.state.formattedFavProjectList.sort(sortLogic).slice(0, 4).map(function (project, i) {
            return _react2.default.createElement(
              'div',
              { className: 'fav-item', 'data-id': project.id, key: i },
              _react2.default.createElement(
                'div',
                { onClick: _this3.handleProjectClick, 'data-id': project.id },
                _react2.default.createElement(
                  'span',
                  { 'data-id': project.id },
                  project.name
                )
              ),
              _this3.addFavIconClass(project)
            );
          }) : this.state.formattedFavProjectList.sort(sortLogic).map(function (project, i) {
            return _react2.default.createElement(
              'div',
              { className: 'fav-item', 'data-id': project.id, key: i },
              _react2.default.createElement(
                'div',
                { onClick: _this3.handleProjectClick, 'data-id': project.id },
                _react2.default.createElement(
                  'span',
                  { 'data-id': project.id },
                  project.name
                )
              ),
              _this3.addFavIconClass(project)
            );
          }),
          this.state.formattedFavProjectList.length > 4 ? _react2.default.createElement(
            'div',
            { className: 'more', onClick: this.toggleDisplayFavProjects },
            this.state.showLessFavorites ? 'Show More...' : 'Show Less...'
          ) : ''
        )
      );

      var all_projects_section = _react2.default.createElement(
        'div',
        { className: 'projects' },
        _react2.default.createElement(
          'span',
          { onClick: this.handleProjectClick, 'data-title': 'allprojects', className: 'title projects-title' },
          'All Projects'
        ),
        _react2.default.createElement('hr', null),
        _react2.default.createElement(
          'div',
          { className: 'projects-wrapper' },
          !this.state.formattedProjectList.length ? "None" : this.state.showLess ? this.state.formattedProjectList.sort(sortLogic).slice(0, 7).map(function (project, i) {
            return _react2.default.createElement(
              'div',
              { className: 'project-item', 'data-id': project.id, key: i },
              _react2.default.createElement(
                'div',
                { onClick: _this3.handleProjectClick, 'data-id': project.id },
                _react2.default.createElement(
                  'span',
                  { 'data-id': project.id },
                  project.name
                )
              ),
              _this3.addFavIconClass(project)
            );
          }) : this.state.formattedProjectList.sort(sortLogic).map(function (project, i) {
            return _react2.default.createElement(
              'div',
              { className: 'project-item', 'data-id': project.id, key: i },
              _react2.default.createElement(
                'div',
                { onClick: _this3.handleProjectClick, 'data-id': project.id },
                _react2.default.createElement(
                  'span',
                  { 'data-id': project.id },
                  project.name
                )
              ),
              _this3.addFavIconClass(project)
            );
          }),
          this.state.formattedProjectList.length > 7 ? _react2.default.createElement(
            'div',
            { className: 'more', onClick: this.toggleDisplayProjects },
            this.state.showLess ? 'Show More...' : 'Show Less...'
          ) : ''
        )
      );
      return _react2.default.createElement(
        'div',
        { className: 'project-wrapper' },
        _react2.default.createElement(
          'div',
          { className: 'row' },
          _react2.default.createElement(
            'div',
            { className: 'samples' },
            _react2.default.createElement(
              'p',
              { 'data-title': 'allsamples', className: 'samples-title', onClick: this.handleProjectClick },
              'All Samples'
            ),
            _react2.default.createElement(
              'span',
              { onClick: this.uploadSample },
              _react2.default.createElement('i', { className: 'fa fa-lg fa-plus-circle', 'aria-hidden': 'true' })
            )
          ),
          fav_section,
          all_projects_section
        )
      );
    }
  }, {
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        'div',
        null,
        this.renderProjectSection()
      );
    }
  }]);

  return ProjectSelection;
}(_react2.default.Component);

exports.default = ProjectSelection;

/***/ }),

/***/ 156:
/***/ (function(module, exports) {

throw new Error("Module build failed: Error: ENOENT: no such file or directory, open '/Users/susanadelokiki/Documents/source/idseq-web/node_modules/js-cookie/src/js.cookie.js'");

/***/ }),

/***/ 157:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(1);

var _react2 = _interopRequireDefault(_react);

var _reactDom = __webpack_require__(7);

var _reactDom2 = _interopRequireDefault(_reactDom);

var _moment = __webpack_require__(0);

var _moment2 = _interopRequireDefault(_moment);

var _jquery = __webpack_require__(3);

var _jquery2 = _interopRequireDefault(_jquery);

var _axios = __webpack_require__(5);

var _axios2 = _interopRequireDefault(_axios);

var _strings = __webpack_require__(17);

var _strings2 = _interopRequireDefault(_strings);

var _SubHeader = __webpack_require__(20);

var _SubHeader2 = _interopRequireDefault(_SubHeader);

var _PipelineSampleReport = __webpack_require__(158);

var _PipelineSampleReport2 = _interopRequireDefault(_PipelineSampleReport);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var PipelineSampleReads = function (_React$Component) {
  _inherits(PipelineSampleReads, _React$Component);

  function PipelineSampleReads(props) {
    _classCallCheck(this, PipelineSampleReads);

    var _this = _possibleConstructorReturn(this, (PipelineSampleReads.__proto__ || Object.getPrototypeOf(PipelineSampleReads)).call(this, props));

    _this.csrf = props.csrf;
    _this.allBackgrounds = props.all_backgrounds;
    _this.rerunPath = props.rerun_path;
    _this.sampleInfo = props.sampleInfo;
    _this.projectInfo = props.projectInfo;
    _this.sample_map = props.project_sample_ids_names;

    _this.reportPresent = props.reportPresent;
    _this.reportTime = props.reportTime;
    _this.allCategories = props.allCategories;
    _this.reportDetails = props.reportDetails;
    _this.reportPageParams = props.reportPageParams;

    _this.jobStatistics = props.jobStatistics;
    _this.summary_stats = props.summary_stats;
    _this.gotoReport = _this.gotoReport.bind(_this);
    _this.sampleId = _this.sampleInfo.id;
    _this.host_genome = props.host_genome;
    _this.pipelineStatus = props.sample_status;
    _this.pipelineRun = props.pipelineRun;
    _this.rerunPipeline = _this.rerunPipeline.bind(_this);
    _this.state = {
      rerun: false,
      failureText: 'Sample run failed'
    };
    _this.TYPE_PROMPT = "Type here...";
    _this.NUCLEOTIDE_TYPES = ['-', "DNA", "RNA"];
    _this.DROPDOWN_OPTIONS = { sample_tissue: PipelineSampleReads.fetchTissueTypes(),
      sample_template: _this.NUCLEOTIDE_TYPES };
    _this.DROPDOWN_METADATA_FIELDS = Object.keys(_this.DROPDOWN_OPTIONS);
    _this.handleDropdownChange = _this.handleDropdownChange.bind(_this);

    return _this;
  }

  _createClass(PipelineSampleReads, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      (0, _jquery2.default)('.dropdown-button').dropdown({
        belowOrigin: true
      });
    }
  }, {
    key: 'render_metadata_dropdown',
    value: function render_metadata_dropdown(label, field) {
      var _this2 = this;

      var dropdown_options = this.DROPDOWN_OPTIONS[field];
      var display_value = this.sampleInfo[field] ? this.sampleInfo[field] : '-';
      return _react2.default.createElement(
        'div',
        { className: 'row detail-row no-padding' },
        _react2.default.createElement(
          'div',
          { className: 'col s5 label' },
          label
        ),
        _react2.default.createElement(
          'div',
          { className: 'col s7 no-padding' },
          _react2.default.createElement(
            'div',
            { className: 'sample-notes' },
            _react2.default.createElement(
              'div',
              { className: 'details-value custom-select-dropdown select-dropdown', 'data-activates': field },
              _react2.default.createElement(
                'div',
                { className: 'hack' },
                display_value
              ),
              _react2.default.createElement('i', { className: 'fa fa-chevron-down right' })
            ),
            _react2.default.createElement(
              'ul',
              { id: field, className: 'dropdown-content details-dropdown' },
              dropdown_options.map(function (option_value, i) {
                return _react2.default.createElement(
                  'li',
                  { onClick: function onClick(e) {
                      _this2.handleDropdownChange(field, i, e);
                    }, ref: field,
                    key: i },
                  option_value
                );
              })
            )
          )
        )
      );
    }
  }, {
    key: 'render_metadata_textfield',
    value: function render_metadata_textfield(label, field) {
      var display_value = this.sampleInfo[field] && this.sampleInfo[field].trim() !== "" ? this.sampleInfo[field] : this.TYPE_PROMPT;
      return _react2.default.createElement(
        'div',
        { className: 'row detail-row' },
        _react2.default.createElement(
          'div',
          { className: 'col s6 no-padding' },
          label
        ),
        _react2.default.createElement(
          'div',
          { className: 'col s6 no-padding' },
          _react2.default.createElement(
            'div',
            { className: 'details-value sample-notes' },
            _react2.default.createElement(
              'pre',
              { suppressContentEditableWarning: true, contentEditable: true, id: field },
              display_value
            )
          )
        )
      );
    }
  }, {
    key: 'gotoReport',
    value: function gotoReport() {
      (0, _jquery2.default)('ul.tabs').tabs('select_tab', 'reports');
      PipelineSampleReads.setTab('pipeline_display', 'reports');
    }
  }, {
    key: 'pipelineInProgress',
    value: function pipelineInProgress() {
      if (this.pipelineRun === null) {
        return true;
      } else if (this.pipelineRun.finalized === 1) {
        return false;
      }
      return true;
    }
  }, {
    key: 'rerunPipeline',
    value: function rerunPipeline() {
      var _this3 = this;

      this.setState({
        rerun: true
      });
      _axios2.default.put(this.rerunPath + '.json', {
        authenticity_token: this.csrf
      }).then(function (response) {
        // this should set status to UPLOADING/IN PROGRESS after rerun
      }).catch(function (error) {
        _this3.setState({
          rerun: false,
          failureText: 'Failed to re-run Pipeline'
        });
      });
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      (0, _jquery2.default)('ul.tabs').tabs();
      this.listenNoteChanges();
      this.initializeSelectTag();
      (0, _jquery2.default)('.custom-select-dropdown').dropdown({
        belowOrigin: true
      });
      for (var i = 0; i < this.DROPDOWN_METADATA_FIELDS.length; i++) {
        var field = this.DROPDOWN_METADATA_FIELDS[i];
        (0, _jquery2.default)(_reactDom2.default.findDOMNode(this.refs[field])).on('change', this.handleDropdownChange);
      }
    }
  }, {
    key: 'initializeSelectTag',
    value: function initializeSelectTag() {
      (0, _jquery2.default)('select').material_select();
    }
  }, {
    key: 'handleDropdownChange',
    value: function handleDropdownChange(field, position, element) {
      var parent = (0, _jquery2.default)(element.target).parent();
      var value = this.DROPDOWN_OPTIONS[field][position];
      var prevValue = parent.prev().text().trim();
      if (prevValue !== value) {
        parent.prev().html('<div class=\'hack\'>\n        ' + value + '\n       </div>\n       <i class="fa fa-chevron-down right"/>');
        _axios2.default.post('/samples/' + this.sampleInfo.id + '/save_metadata.json', {
          field: field, value: value
        }).then(function (response) {
          if (response.data.status === 'success') {
            (0, _jquery2.default)('.note-saved-success').html('<i class=\'fa fa-check-circle\'></i> ' + response.data.message).css('display', 'inline-block').delay(1000).slideUp(200);
          } else {
            (0, _jquery2.default)('.note-save-failed').html('<i class=\'fa fa-frown-o\'></i> ' + response.data.message).css('display', 'inline-block').delay(1000).slideUp(200);
          }
        }).catch(function (error) {
          (0, _jquery2.default)('.note-save-failed').html('<i class=\'fa fa-frown-o\'></i> Something went wrong!').css('display', 'inline-block').delay(1000).slideUp(200);
        });
      }
    }
  }, {
    key: 'listenNoteChanges',
    value: function listenNoteChanges() {
      var _this4 = this;

      var currentText = '';
      (0, _jquery2.default)('.sample-notes').focusin(function (e) {
        currentText = e.target.innerText.trim();
        if (currentText === _this4.TYPE_PROMPT) {
          e.target.innerText = '';
        }
      });

      (0, _jquery2.default)('.sample-notes').focusout(function (e) {
        var newText = e.target.innerText.trim();
        var field = e.target.id;
        if (newText !== currentText) {
          _axios2.default.post('/samples/' + _this4.sampleInfo.id + '/save_metadata.json', {
            field: field,
            value: newText
          }).then(function (response) {
            if (response.data.status === 'success') {
              (0, _jquery2.default)('.note-saved-success').html('<i class=\'fa fa-check-circle\'></i> ' + response.data.message).css('display', 'inline-block').delay(1000).slideUp(200);
            } else {
              (0, _jquery2.default)('.note-save-failed').html('<i class=\'fa fa-frown-o\'></i> ' + response.data.message).css('display', 'inline-block').delay(1000).slideUp(200);
            }
          }).catch(function (error) {
            (0, _jquery2.default)('.note-save-failed').html('<i class=\'fa fa-frown-o\'></i> Something went wrong!').css('display', 'inline-block').delay(1000).slideUp(200);
          });
        };
        if (newText.trim() === '') {
          e.target.innerText = _this4.TYPE_PROMPT;
        }
      });
    }
  }, {
    key: 'render',
    value: function render() {
      var _this5 = this;

      var d_report = null;
      if (this.reportPresent) {
        d_report = _react2.default.createElement(_PipelineSampleReport2.default, {
          sample_id: this.sampleId,
          report_ts: this.reportTime,
          all_categories: this.allCategories,
          all_backgrounds: this.allBackgrounds,
          report_details: this.reportDetails,
          report_page_params: this.reportPageParams
        });
      } else {
        d_report = _react2.default.createElement(
          'div',
          { className: 'center-align text-grey text-lighten-2 no-report' },
          this.pipelineInProgress() ? _react2.default.createElement(
            'div',
            null,
            'Sample Waiting ...',
            _react2.default.createElement(
              'p',
              null,
              _react2.default.createElement('i', { className: 'fa fa-spinner fa-spin fa-3x' })
            )
          ) : _react2.default.createElement(
            'div',
            null,
            _react2.default.createElement(
              'h6',
              { className: 'failed' },
              _react2.default.createElement('i', { className: 'fa fa-frown-o' }),
              '  ',
              this.state.failureText,
              '  '
            ),
            _react2.default.createElement(
              'p',
              null,
              !this.state.rerun ? _react2.default.createElement(
                'a',
                { onClick: this.rerunPipeline, className: 'custom-button small' },
                _react2.default.createElement('i', { className: 'fa fa-repeat left' }),
                'RERUN PIPELINE'
              ) : null
            )
          )
        );
      }

      var pipeline_run = null;
      var download_section = null;
      var BLANK_TEXT = 'unknown';
      if (this.pipelineRun && this.pipelineRun.total_reads) {
        pipeline_run = _react2.default.createElement(
          'div',
          { className: 'data' },
          _react2.default.createElement(
            'div',
            { className: 'row' },
            _react2.default.createElement(
              'div',
              { className: 'col s6' },
              _react2.default.createElement(
                'div',
                { className: 'row detail-row' },
                _react2.default.createElement(
                  'div',
                  { className: 'col s6 no-padding' },
                  'Total reads'
                ),
                _react2.default.createElement(
                  'div',
                  { className: 'details-value col s6 no-padding' },
                  (0, _strings2.default)(this.pipelineRun.total_reads)
                )
              ),
              _react2.default.createElement(
                'div',
                { className: 'row detail-row' },
                _react2.default.createElement(
                  'div',
                  { className: 'col s6 no-padding' },
                  'Non-host reads'
                ),
                _react2.default.createElement(
                  'div',
                  { className: 'details-value col s6 no-padding ' + (!this.summary_stats.remaining_reads ? BLANK_TEXT : '') },
                  !this.summary_stats.remaining_reads ? BLANK_TEXT : (0, _strings2.default)(this.summary_stats.remaining_reads),
                  !this.summary_stats.percent_remaining ? '' : ' (' + this.summary_stats.percent_remaining.toFixed(2) + '%)'
                )
              ),
              _react2.default.createElement(
                'div',
                { className: 'row detail-row' },
                _react2.default.createElement(
                  'div',
                  { className: 'col s6 no-padding' },
                  'Unmapped reads'
                ),
                _react2.default.createElement(
                  'div',
                  { className: 'details-value col s6 no-padding ' + (!this.summary_stats.unmapped_reads ? BLANK_TEXT : '') },
                  !this.summary_stats.unmapped_reads ? BLANK_TEXT : (0, _strings2.default)(this.summary_stats.unmapped_reads)
                )
              )
            ),
            _react2.default.createElement(
              'div',
              { className: 'col s6' },
              _react2.default.createElement(
                'div',
                { className: 'row detail-row' },
                _react2.default.createElement(
                  'div',
                  { className: 'col s6 no-padding' },
                  'Passed quality control'
                ),
                _react2.default.createElement(
                  'div',
                  { className: 'details-value col s6 no-padding ' + (!this.summary_stats.qc_percent ? BLANK_TEXT : '') },
                  !this.summary_stats.qc_percent ? BLANK_TEXT : this.summary_stats.qc_percent.toFixed(2) + '%'
                )
              ),
              _react2.default.createElement(
                'div',
                { className: 'row detail-row' },
                _react2.default.createElement(
                  'div',
                  { className: 'col s6 no-padding' },
                  'Compression ratio'
                ),
                _react2.default.createElement(
                  'div',
                  { className: 'details-value col s6 no-padding ' + (!this.summary_stats.compression_ratio ? BLANK_TEXT : '') },
                  !this.summary_stats.compression_ratio ? BLANK_TEXT : this.summary_stats.compression_ratio.toFixed(2)
                )
              ),
              _react2.default.createElement(
                'div',
                { className: 'row detail-row' },
                _react2.default.createElement(
                  'div',
                  { className: 'col s6 no-padding' },
                  'Date processed'
                ),
                _react2.default.createElement(
                  'div',
                  { className: 'details-value col s6 no-padding ' + (!this.summary_stats.last_processed_at ? BLANK_TEXT : '') },
                  !this.summary_stats.last_processed_at ? BLANK_TEXT : (0, _moment2.default)(this.summary_stats.last_processed_at).startOf('second').fromNow()
                )
              )
            )
          )
        );

        download_section = _react2.default.createElement(
          'div',
          null,
          _react2.default.createElement(
            'a',
            { className: 'custom-button', href: '/samples/' + this.sampleInfo.id + '/nonhost_fasta' },
            _react2.default.createElement('i', { className: 'fa fa-cloud-download' }),
            'Download Non-Host Reads'
          ),
          _react2.default.createElement(
            'a',
            { className: 'custom-button', href: '/samples/' + this.sampleInfo.id + '/unidentified_fasta' },
            _react2.default.createElement('i', { className: 'fa fa-cloud-download' }),
            'Download Unmapped Reads'
          ),
          _react2.default.createElement(
            'a',
            { className: 'custom-button', href: this.sampleInfo.sample_output_folder_url },
            _react2.default.createElement('i', { className: 'fa fa-folder-open' }),
            'Navigate to Results Folder'
          )
        );
      } else {
        pipeline_run = _react2.default.createElement(
          'div',
          { className: 'center' },
          'There is no pipeline output for this sample'
        );
      }
      var sample_dropdown = '';
      if (this.sample_map && Object.keys(this.sample_map).length > 1) {
        sample_dropdown = _react2.default.createElement(
          'div',
          { className: 'dropdown-button sample-select-dropdown', 'data-activates': 'sample-list' },
          this.sampleInfo.name,
          _react2.default.createElement('i', { className: 'fa fa-chevron-down right' }),
          _react2.default.createElement(
            'ul',
            { id: 'sample-list', className: 'dropdown-content sample-dropdown-content' },
            Object.keys(this.sample_map).map(function (sample_id, i) {
              return _react2.default.createElement(
                'li',
                { key: i },
                _react2.default.createElement(
                  'a',
                  { href: '/samples/' + sample_id },
                  _this5.sample_map[sample_id]
                )
              );
            })
          )
        );
      } else {
        sample_dropdown = _react2.default.createElement(
          'span',
          null,
          this.sampleInfo.name
        );
      }

      return _react2.default.createElement(
        'div',
        null,
        _react2.default.createElement(
          _SubHeader2.default,
          null,
          _react2.default.createElement(
            'div',
            { className: 'sub-header' },
            _react2.default.createElement(
              'div',
              { className: 'title' },
              'PIPELINE'
            ),
            _react2.default.createElement(
              'div',
              { className: 'sub-title' },
              _react2.default.createElement(
                'a',
                { href: '/?project_id=' + this.projectInfo.id },
                ' ',
                this.projectInfo.name,
                ' '
              ),
              ' > ',
              sample_dropdown
            ),
            _react2.default.createElement(
              'div',
              { className: 'sub-header-navigation' },
              _react2.default.createElement(
                'div',
                { className: 'nav-content' },
                _react2.default.createElement(
                  'ul',
                  { className: 'tabs tabs-transparent' },
                  _react2.default.createElement(
                    'li',
                    { className: 'tab' },
                    _react2.default.createElement(
                      'a',
                      { href: '#details', className: '' },
                      'Details'
                    )
                  ),
                  _react2.default.createElement(
                    'li',
                    { className: 'tab' },
                    _react2.default.createElement(
                      'a',
                      { href: '#reports', className: 'active' },
                      'Report'
                    )
                  )
                )
              )
            )
          )
        ),
        _react2.default.createElement(
          'div',
          { id: 'details', className: 'tab-screen col s12' },
          _react2.default.createElement(
            'div',
            { className: 'center' },
            _react2.default.createElement('span', { className: 'note-action-feedback note-saved-success' }),
            _react2.default.createElement('span', { className: 'note-action-feedback note-save-failed' })
          ),
          _react2.default.createElement(
            'div',
            { className: 'container tab-screen-content' },
            _react2.default.createElement(
              'div',
              { className: 'row' },
              _react2.default.createElement(
                'div',
                { className: 'col s9' },
                _react2.default.createElement(
                  'div',
                  { className: 'row' },
                  _react2.default.createElement(
                    'div',
                    { className: 'col s12' },
                    _react2.default.createElement(
                      'div',
                      { className: 'content-title' },
                      'Sample Details'
                    ),
                    _react2.default.createElement(
                      'div',
                      { className: 'data' },
                      _react2.default.createElement(
                        'div',
                        { className: 'row' },
                        _react2.default.createElement(
                          'div',
                          { className: 'col s6' },
                          _react2.default.createElement(
                            'div',
                            { className: 'row detail-row' },
                            _react2.default.createElement(
                              'div',
                              { className: 'col s6 no-padding' },
                              'Host'
                            ),
                            _react2.default.createElement(
                              'div',
                              { className: 'details-value col s6 no-padding\n                            ' + (!this.host_genome ? BLANK_TEXT : '') },
                              !this.host_genome ? BLANK_TEXT : this.host_genome.name
                            )
                          ),
                          _react2.default.createElement(
                            'div',
                            { className: 'row detail-row' },
                            _react2.default.createElement(
                              'div',
                              { className: 'col s6 no-padding' },
                              'Upload date'
                            ),
                            _react2.default.createElement(
                              'div',
                              { className: 'details-value col s6 no-padding' },
                              (0, _moment2.default)(this.sampleInfo.created_at).startOf('second').fromNow()
                            )
                          ),
                          this.render_metadata_textfield("Location", "sample_location", 0)
                        ),
                        _react2.default.createElement(
                          'div',
                          { className: 'col s6' },
                          this.render_metadata_dropdown("Tissue type", "sample_tissue"),
                          this.render_metadata_dropdown("Nucleotide type", "sample_template"),
                          _react2.default.createElement(
                            'div',
                            { className: 'row detail-row no-padding' },
                            _react2.default.createElement(
                              'div',
                              { className: 'col s5 label' },
                              'Patient ID'
                            ),
                            _react2.default.createElement(
                              'div',
                              { className: 'col s7 ' },
                              _react2.default.createElement(
                                'div',
                                { className: 'details-value label sample-notes' },
                                _react2.default.createElement(
                                  'pre',
                                  { suppressContentEditableWarning: true, contentEditable: true, id: 'sample_host' },
                                  this.sampleInfo['sample_host'] && this.sampleInfo['sample_host'].trim() !== "" ? this.sampleInfo['sample_host'] : this.TYPE_PROMPT
                                )
                              )
                            )
                          )
                        )
                      ),
                      _react2.default.createElement(
                        'div',
                        { className: 'row' },
                        _react2.default.createElement(
                          'div',
                          { className: 'col s12' },
                          _react2.default.createElement(
                            'div',
                            { className: 'details-title note' },
                            'Notes'
                          ),
                          _react2.default.createElement(
                            'div',
                            { className: 'sample-notes note' },
                            _react2.default.createElement(
                              'pre',
                              { className: 'details-value', suppressContentEditableWarning: true, contentEditable: true, id: 'sample_notes' },
                              this.sampleInfo['sample_notes'] && this.sampleInfo['sample_notes'].trim() !== "" ? this.sampleInfo['sample_notes'] : this.TYPE_PROMPT
                            )
                          )
                        )
                      )
                    )
                  )
                ),
                _react2.default.createElement(
                  'div',
                  { className: 'row' },
                  _react2.default.createElement(
                    'div',
                    { className: 'col s12' },
                    _react2.default.createElement(
                      'div',
                      { className: 'content-title' },
                      'PIPELINE OUTPUT'
                    ),
                    pipeline_run
                  )
                )
              ),
              _react2.default.createElement(
                'div',
                { className: 'col s3 download-area' },
                _react2.default.createElement(
                  'div',
                  { className: 'download-title' },
                  'Downloads Reads'
                ),
                _react2.default.createElement(
                  'a',
                  { className: 'custom-button', href: this.sampleInfo.sample_input_folder_url },
                  _react2.default.createElement('i', { className: 'fa fa-folder-open' }),
                  'Go To Source Data'
                ),
                download_section
              )
            )
          )
        ),
        _react2.default.createElement(
          'div',
          { id: 'reports', className: 'reports-screen tab-screen col s12' },
          d_report
        )
      );
    }
  }], [{
    key: 'getActive',
    value: function getActive(section, tab) {
      return window.localStorage.getItem(section) === tab ? 'active' : '';
    }
  }, {
    key: 'setTab',
    value: function setTab(section, tab) {
      window.localStorage.setItem(section, tab);
    }
  }, {
    key: 'fetchTissueTypes',
    value: function fetchTissueTypes() {
      var tissue_types = ['-', "Bronchoalveolar lavage", "Cerebrospinal fluid", "Nasopharyngeal swab", "Plasma", "Serum", "Solid tissue", "Stool", "Synovial fluid", "Whole blood"];
      return tissue_types;
    }
  }]);

  return PipelineSampleReads;
}(_react2.default.Component);

exports.default = PipelineSampleReads;

/***/ }),

/***/ 158:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(1);

var _react2 = _interopRequireDefault(_react);

var _axios = __webpack_require__(5);

var _axios2 = _interopRequireDefault(_axios);

var _jsCookie = __webpack_require__(156);

var _jsCookie2 = _interopRequireDefault(_jsCookie);

var _jquery = __webpack_require__(3);

var _jquery2 = _interopRequireDefault(_jquery);

var _reactTipsy = __webpack_require__(12);

var _reactTipsy2 = _interopRequireDefault(_reactTipsy);

var _Samples = __webpack_require__(13);

var _Samples2 = _interopRequireDefault(_Samples);

var _ReportFilter = __webpack_require__(18);

var _ReportFilter2 = _interopRequireDefault(_ReportFilter);

var _strings = __webpack_require__(17);

var _strings2 = _interopRequireDefault(_strings);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var PipelineSampleReport = function (_React$Component) {
  _inherits(PipelineSampleReport, _React$Component);

  function PipelineSampleReport(props) {
    _classCallCheck(this, PipelineSampleReport);

    var _this = _possibleConstructorReturn(this, (PipelineSampleReport.__proto__ || Object.getPrototypeOf(PipelineSampleReport)).call(this, props));

    _this.report_ts = props.report_ts;
    _this.sample_id = props.sample_id;

    _this.all_categories = props.all_categories;
    _this.report_details = props.report_details;
    _this.report_page_params = props.report_page_params;
    _this.all_backgrounds = props.all_backgrounds;
    _this.max_rows_to_render = props.max_rows || 2000;
    _this.default_sort_by = _this.report_page_params.sort_by.replace('highest_', '');
    _this.sort_params = {};
    var filter_thresholds = _jsCookie2.default.get('filter_thresholds');
    var cached_cats = _jsCookie2.default.get('excluded_categories');

    _this.state = {
      taxonomy_details: [],
      search_keys_in_sample: [],
      lineage_map: {},
      genus_map: {},
      rows_passing_filters: 0,
      rows_total: 0,
      thresholded_taxons: [],
      selected_taxons: [],

      sort_by: _this.default_sort_by,
      new_filter_thresholds: filter_thresholds ? JSON.parse(filter_thresholds) : { NT_aggregatescore: 0.0 },
      /*
        NT_zscore: 0.0,
        NT_rpm: 0.0,
        NT_r: 0.0,
        NT_percentidentity: 0.0,
        NT_neglogevalue: 0.0,
        NT_percentconcordant: 0.0,
        NR_zscore: 0.0,
        NR_rpm: 0.0,
        NR_r: 0.0,
        NR_percentidentity: 0.0,
        NR_neglogevalue: 0.0,
        NR_percentconcordant: 0.0,
      }
      */
      excluded_categories: cached_cats ? JSON.parse(cached_cats) : [],
      search_taxon_id: 0,
      loading: true
    };

    _this.applySearchFilter = _this.applySearchFilter.bind(_this);
    _this.applyThresholdFilters = _this.applyThresholdFilters.bind(_this);
    _this.anyFilterSet = _this.anyFilterSet.bind(_this);
    _this.resetAllFilters = _this.resetAllFilters.bind(_this);
    _this.sortResults = _this.sortResults.bind(_this);
    _this.sortCompareFunction = _this.sortCompareFunction.bind(_this);
    _this.setSortParams = _this.setSortParams.bind(_this);
    _this.flash = _this.flash.bind(_this);

    _this.taxonPassThresholdFilter = _this.taxonPassThresholdFilter.bind(_this);
    _this.expandOrCollapseGenus = _this.expandOrCollapseGenus.bind(_this);
    _this.expandTable = _this.expandTable.bind(_this);
    _this.collapseTable = _this.collapseTable.bind(_this);
    _this.downloadFastaUrl = _this.downloadFastaUrl.bind(_this);

    _this.handleThresholdEnter = _this.handleThresholdEnter.bind(_this);
    _this.initializeTooltip();
    return _this;
  }

  _createClass(PipelineSampleReport, [{
    key: 'componentWillMount',
    value: function componentWillMount() {
      this.fetchReportData();
      this.fetchSearchList();
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      this.listenThresholdChanges();
    }
  }, {
    key: 'fetchSearchList',
    value: function fetchSearchList() {
      var _this2 = this;

      _axios2.default.get('/samples/' + this.sample_id + '/search_list?report_ts=' + this.report_ts).then(function (res) {
        var search_list = res.data.search_list;
        search_list.splice(0, 0, ['All', 0]);
        _this2.setState({
          lineage_map: res.data.lineage_map,
          search_keys_in_sample: search_list
        });
      });
    }
  }, {
    key: 'fetchReportData',
    value: function fetchReportData() {
      var _this3 = this;

      _Samples2.default.showLoading('Loading results...');
      var params = '?' + window.location.search.replace('?', '') + '&report_ts=' + this.report_ts;
      var cached_background_id = _jsCookie2.default.get('background_id');
      if (cached_background_id) {
        params = params.indexOf('background_id=') < 0 ? params + '&background_id=' + cached_background_id : params;
      }
      _axios2.default.get('/samples/' + this.sample_id + '/report_info' + params).then(function (res) {
        _Samples2.default.hideLoader();
        var genus_map = {};
        for (var i = 0; i < res.data.taxonomy_details[2].length; i++) {
          var taxon = res.data.taxonomy_details[2][i];
          if (taxon.genus_taxid == taxon.tax_id) {
            genus_map[taxon.genus_taxid] = taxon;
          }
        }

        _this3.setState({
          rows_passing_filters: res.data.taxonomy_details[0],
          rows_total: res.data.taxonomy_details[1],
          taxonomy_details: res.data.taxonomy_details[2],
          genus_map: genus_map
        });
        _this3.applyThresholdFilters(res.data.taxonomy_details[2], false);
      });
    }
  }, {
    key: 'anyFilterSet',
    value: function anyFilterSet() {
      if (this.state.search_taxon_id > 0 || this.state.excluded_categories.length > 0 || Object.keys(this.state.new_filter_thresholds).length > 0) {
        return true;
      }
      return false;
    }
  }, {
    key: 'resetAllFilters',
    value: function resetAllFilters() {
      this.setState({
        new_filter_thresholds: {},
        excluded_categories: [],
        search_taxon_id: 0,
        thresholded_taxons: this.state.taxonomy_details,
        selected_taxons: this.state.taxonomy_details,
        rows_passing_filters: this.state.taxonomy_details.length
      });
      _jsCookie2.default.set('filter_thresholds', '{}');
      _jsCookie2.default.set('excluded_categories', '[]');
      (0, _jquery2.default)('.metric-thresholds').val('');
      this.flash();
    }
  }, {
    key: 'applySearchFilter',
    value: function applySearchFilter(searchTaxonId, excludedCategories, input_taxons) {
      var selected_taxons = [];
      var thresholded_taxons = input_taxons || this.state.thresholded_taxons;
      if (searchTaxonId > 0) {
        // ignore all the thresholds
        var genus_taxon = {};
        var matched_taxons = [];
        for (var _i = 0; _i < this.state.taxonomy_details.length; _i++) {
          var taxon = this.state.taxonomy_details[_i];
          if (taxon.genus_taxid == taxon.tax_id) {
            if (matched_taxons.length > 0) {
              selected_taxons.push(genus_taxon);
              selected_taxons = selected_taxons.concat(matched_taxons);
            }
            genus_taxon = taxon;
            matched_taxons = [];
          } else {
            // species
            var match_keys = this.state.lineage_map[taxon.tax_id.toString()];
            if (match_keys && match_keys.indexOf(searchTaxonId) > -1) {
              matched_taxons.push(taxon);
            }
          }
        }
        if (matched_taxons.length > 0) {
          selected_taxons.push(genus_taxon);
          selected_taxons = selected_taxons.concat(matched_taxons);
        }
      } else if (excludedCategories.length > 0) {
        for (var i = 0; i < thresholded_taxons.length; i++) {
          var _taxon = thresholded_taxons[i];
          if (excludedCategories.indexOf(_taxon.category_name) < 0) {
            // not in the excluded categories
            selected_taxons.push(_taxon);
          } else if (_taxon.category_name == 'Uncategorized' && parseInt(_taxon.tax_id) == -200) {
            // the 'All taxa without genus classification' taxon
            var uncat_taxon = _taxon;
            var filtered_children = [];
            i++;
            _taxon = thresholded_taxons[i];
            while (_taxon && _taxon.genus_taxid == -200) {
              if (excludedCategories.indexOf(_taxon.category_name) < 0) {
                filtered_children.push(_taxon);
              }
              i++;
              _taxon = thresholded_taxons[i];
            }
            if (filtered_children.length > 0) {
              selected_taxons.push(uncat_taxon);
              selected_taxons = selected_taxons.concat(filtered_children);
            }
            i--;
          }
        }
      } else {
        selected_taxons = thresholded_taxons;
      }

      // console.log(excludedCategories)
      this.setState({
        loading: false,
        excluded_categories: excludedCategories,
        search_taxon_id: searchTaxonId,
        thresholded_taxons: thresholded_taxons,
        selected_taxons: selected_taxons,
        rows_passing_filters: selected_taxons.length
      });
    }
  }, {
    key: 'flash',
    value: function flash() {
      (0, _jquery2.default)('.filter-message').removeClass('flash');
      var el = document.getElementById('filter-message');
      if (el) {
        el.offsetHeight; /* trigger reflow */
      }
      (0, _jquery2.default)('.filter-message').addClass('flash');
    }
  }, {
    key: 'initializeTooltip',
    value: function initializeTooltip() {
      // only updating the tooltip offset when the component is loaded
      (0, _jquery2.default)(function () {
        var tooltipIdentifier = (0, _jquery2.default)("[rel='tooltip']");
        tooltipIdentifier.tooltip({
          delay: 0,
          html: true,
          placement: 'top',
          offset: '0px 50px'
        });
        (0, _jquery2.default)('.sort-controls').hover(function () {
          var selectTooltip = (0, _jquery2.default)('.tooltip');
          var leftOffset = parseInt(selectTooltip.css('left'));
          if (!isNaN(leftOffset)) {
            selectTooltip.css('left', leftOffset - 15);
          }
        });
      });
    }

    // applySort needs to be bound at time of use, not in constructor above
    // TODO(yf): fix this

  }, {
    key: 'applySort',
    value: function applySort(sort_by) {
      console.log(sort_by);
      if (sort_by.toLowerCase() != this.state.sort_by) {
        this.state.sort_by = sort_by.toLowerCase();
        this.sortResults();
      }
    }
  }, {
    key: 'sortCompareFunction',
    value: function sortCompareFunction(a, b) {
      var _sortParams$primary = _slicedToArray(this.sortParams.primary, 2),
          ptype = _sortParams$primary[0],
          pmetric = _sortParams$primary[1];

      var _sortParams$secondary = _slicedToArray(this.sortParams.secondary, 2),
          stype = _sortParams$secondary[0],
          smetric = _sortParams$secondary[1];

      var genus_a = this.state.genus_map[a.genus_taxid];
      var genus_b = this.state.genus_map[b.genus_taxid];

      var genus_a_p_val = parseFloat(genus_a[ptype][pmetric]);
      var genus_a_s_val = parseFloat(genus_a[stype][smetric]);
      var a_p_val = parseFloat(a[ptype][pmetric]);
      var a_s_val = parseFloat(a[stype][smetric]);

      var genus_b_p_val = parseFloat(genus_b[ptype][pmetric]);
      var genus_b_s_val = parseFloat(genus_b[stype][smetric]);
      var b_p_val = parseFloat(b[ptype][pmetric]);
      var b_s_val = parseFloat(b[stype][smetric]);
      // compared at genus level descending and then species level descending
      //
      //
      if (a.genus_taxid == b.genus_taxid) {
        // same genus
        if (a.tax_level > b.tax_level) {
          return -1;
        } else if (a.tax_level < b.tax_level) {
          return 1;
        }
        if (a_p_val > b_p_val) {
          return -1;
        } else if (a_p_val < b_p_val) {
          return 1;
        }
        if (a_s_val > b_s_val) {
          return -1;
        } else if (a_s_val < b_s_val) {
          return 1;
        }
        return 0;
      }
      if (genus_a_p_val > genus_b_p_val) {
        return -1;
      } else if (genus_a_p_val < genus_b_p_val) {
        return 1;
      }
      if (genus_a_s_val > genus_b_s_val) {
        return -1;
      } else if (genus_a_s_val < genus_b_s_val) {
        return 1;
      }
      if (a.genus_taxid < b.genus_taxid) {
        return -1;
      } else if (a.genus_taxid > b.genus_taxid) {
        return 1;
      }
    }
  }, {
    key: 'setSortParams',
    value: function setSortParams() {
      var primary_sort = this.state.sort_by.split('_');
      primary_sort[0] = primary_sort[0].toUpperCase();
      var secondary_sort = this.default_sort_by.split('_');
      secondary_sort[0] = secondary_sort[0].toUpperCase();
      this.sortParams = {
        primary: primary_sort,
        secondary: secondary_sort
      };
    }
  }, {
    key: 'sortResults',
    value: function sortResults() {
      this.setSortParams();
      var selected_taxons = this.state.selected_taxons;
      selected_taxons = selected_taxons.sort(this.sortCompareFunction);
      this.setState({
        selecte_taxons: selected_taxons
      });
      this.state.thresholded_taxons = this.state.thresholded_taxons.sort(this.sortCompareFunction);
      this.state.taxonomy_details = this.state.taxonomy_details.sort(this.sortCompareFunction);
    }
  }, {
    key: 'setFilterThreshold',
    value: function setFilterThreshold(e) {
      var threshold_name = e.target.id;
      var val = parseFloat(e.target.value.trim());
      if (isNaN(val)) {
        delete this.state.new_filter_thresholds[threshold_name];
      } else {
        this.state.new_filter_thresholds[threshold_name] = val;
      }
      _jsCookie2.default.set('filter_thresholds', JSON.stringify(this.state.new_filter_thresholds));
    }
  }, {
    key: 'taxonPassThresholdFilter',
    value: function taxonPassThresholdFilter(taxon) {
      // console.log(taxon)
      if (Object.keys(taxon).length <= 0) {
        return false;
      }
      for (var filter_key in this.state.new_filter_thresholds) {
        var threshold = this.state.new_filter_thresholds[filter_key];
        var key_parts = filter_key.split('_');
        var val = (taxon[key_parts[0]] || {})[key_parts[1]];
        if (val < threshold) {
          // console.log([val, threshold, filter_key])
          return false;
        }
      }
      return true;
    }
  }, {
    key: 'applyThresholdFilters',
    value: function applyThresholdFilters(candidate_taxons) {
      var play_animation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

      var thresholded_taxons = [];
      var genus_taxon = {};
      var matched_taxons = [];
      for (var i = 0; i < candidate_taxons.length; i++) {
        var taxon = candidate_taxons[i];
        if (taxon.genus_taxid == taxon.tax_id) {
          // genus
          if (matched_taxons.length > 0) {
            thresholded_taxons.push(genus_taxon);
            thresholded_taxons = thresholded_taxons.concat(matched_taxons);
          } else if (this.taxonPassThresholdFilter(genus_taxon)) {
            thresholded_taxons.push(genus_taxon);
          }
          genus_taxon = taxon;
          matched_taxons = [];
        } else {
          // species
          if (this.taxonPassThresholdFilter(taxon)) {
            matched_taxons.push(taxon);
          }
        }
      }

      if (matched_taxons.length > 0) {
        thresholded_taxons.push(genus_taxon);
        thresholded_taxons = thresholded_taxons.concat(matched_taxons);
      } else if (this.taxonPassThresholdFilter(genus_taxon)) {
        thresholded_taxons.push(genus_taxon);
      }

      this.applySearchFilter(0, this.state.excluded_categories, thresholded_taxons);

      if (play_animation) {
        this.flash();
      }
    }
  }, {
    key: 'handleThresholdEnter',
    value: function handleThresholdEnter(event) {
      if (event.keyCode == 13) {
        this.applyThresholdFilters(this.state.taxonomy_details);
      }
    }
  }, {
    key: 'listenThresholdChanges',
    value: function listenThresholdChanges() {
      var _this4 = this;

      (0, _jquery2.default)('.metric-thresholds').focusout(function (e) {
        _this4.applyThresholdFilters(_this4.state.taxonomy_details);
      });
    }

    // Remove this after fix sorting

  }, {
    key: 'refreshPage',
    value: function refreshPage(overrides) {
      var new_params = Object.assign({}, this.report_page_params, overrides);
      window.location = location.protocol + '//' + location.host + location.pathname + '?' + _jquery2.default.param(new_params);
    }
  }, {
    key: 'thresholdInputColumn',
    value: function thresholdInputColumn(metric_token) {
      return _react2.default.createElement('input', {
        className: 'browser-default metric-thresholds',
        onChange: this.setFilterThreshold.bind(this),
        onKeyDown: this.handleThresholdEnter,
        name: 'group2',
        defaultValue: this.state.new_filter_thresholds[metric_token],
        id: metric_token,
        type: 'number'
      });
    }

    // path to NCBI

  }, {
    key: 'gotoNCBI',
    value: function gotoNCBI(e) {
      var taxId = e.target.getAttribute('data-tax-id');
      var ncbiLink = 'https://www.ncbi.nlm.nih.gov/Taxonomy/Browser/wwwtax.cgi?mode=Info&id=' + taxId;
      window.open(ncbiLink, '_blank');
    }

    // download Fasta

  }, {
    key: 'downloadFastaUrl',
    value: function downloadFastaUrl(e) {
      var taxLevel = e.target.getAttribute('data-tax-level');
      var taxId = e.target.getAttribute('data-tax-id');
      location.href = '/samples/' + this.sample_id + '/fasta/' + taxLevel + '/' + taxId + '/NT_or_NR';
    }
  }, {
    key: 'displayTags',
    value: function displayTags(taxInfo, reportDetails) {
      return _react2.default.createElement(
        'span',
        { className: 'link-tag' },
        taxInfo.tax_id > 0 ? _react2.default.createElement('i', { 'data-tax-id': taxInfo.tax_id, onClick: this.gotoNCBI, className: 'fa fa-link cloud', 'aria-hidden': 'true' }) : null,
        reportDetails.taxon_fasta_flag ? _react2.default.createElement('i', {
          'data-tax-level': taxInfo.tax_level,
          'data-tax-id': taxInfo.tax_id,
          onClick: this.downloadFastaUrl,
          className: 'fa fa-download cloud',
          'aria-hidden': 'true'
        }) : null
      );
    }
  }, {
    key: 'category_to_adjective',
    value: function category_to_adjective(category) {
      var category_lowercase = category.toLowerCase();
      switch (category_lowercase) {
        case 'bacteria':
          return 'bacterial';
        case 'archaea':
          return 'archaeal';
        case 'eukaryota':
          return 'eukaryotic';
        case 'viruses':
          return 'viral';
        case 'viroids':
          return 'viroidal';
        case 'uncategorized':
          return 'uncategorized';
      }
      return category_lowercase;
    }
  }, {
    key: 'render_name',
    value: function render_name(tax_info, report_details) {
      var foo = _react2.default.createElement(
        'i',
        null,
        tax_info.name
      );
      if (tax_info.tax_id > 0) {
        if (report_details.taxon_fasta_flag) {
          foo = _react2.default.createElement(
            'span',
            { className: 'link' },
            _react2.default.createElement(
              'a',
              null,
              tax_info.name
            )
          );
        } else {
          foo = _react2.default.createElement(
            'span',
            null,
            tax_info.name
          );
        }
      }
      if (tax_info.tax_level == 1) {
        // indent species rows
        foo = _react2.default.createElement(
          'div',
          { className: 'hover-wrapper' },
          _react2.default.createElement(
            'div',
            { className: 'species-name' },
            foo,
            this.displayTags(tax_info, report_details)
          )
        );
      } else {
        // emphasize genus, soften category and species count
        var category_name = tax_info.tax_id == -200 ? '' : tax_info.category_name;
        var fake_or_real = tax_info.genus_taxid < 0 ? 'fake-genus' : 'real-genus';
        var right_arrow_initial_visibility = '';
        var down_arrow_initial_visibility = 'hidden';
        var plus_or_minus = _react2.default.createElement(
          'span',
          null,
          _react2.default.createElement(
            'span',
            { className: 'report-arrow-down report-arrow ' + tax_info.tax_id + ' ' + fake_or_real + ' ' + down_arrow_initial_visibility },
            _react2.default.createElement('i', { className: 'fa fa-angle-down ' + tax_info.tax_id, onClick: this.expandOrCollapseGenus })
          ),
          _react2.default.createElement(
            'span',
            { className: 'report-arrow-right report-arrow ' + tax_info.tax_id + ' ' + fake_or_real + ' ' + right_arrow_initial_visibility },
            _react2.default.createElement('i', { className: 'fa fa-angle-right ' + tax_info.tax_id, onClick: this.expandOrCollapseGenus })
          )
        );
        foo = _react2.default.createElement(
          'div',
          { className: 'hover-wrapper' },
          _react2.default.createElement(
            'div',
            { className: 'genus-name' },
            ' ',
            plus_or_minus,
            ' ',
            foo
          ),
          _react2.default.createElement(
            'i',
            { className: 'count-info' },
            '(',
            tax_info.species_count,
            ' ',
            this.category_to_adjective(category_name),
            ' species)'
          ),
          this.displayTags(tax_info, report_details)
        );
      }
      return foo;
    }
  }, {
    key: 'render_number',
    value: function render_number(x, emphasize, num_decimals) {
      var is_blank = x == 0 || x == -100;
      var y = Number(x);
      y = y.toFixed(num_decimals);
      y = (0, _strings2.default)(y);
      if (emphasize) {
        y = _react2.default.createElement(
          'b',
          null,
          y
        );
      }
      var className = is_blank ? 'report-number-blank' : 'report-number';
      return _react2.default.createElement(
        'td',
        { className: className },
        y
      );
    }
  }, {
    key: 'render_sort_arrow',
    value: function render_sort_arrow(column, desired_sort_direction, arrow_direction) {
      var desired_sort = column.toLowerCase();
      var className = 'fa fa-caret-' + arrow_direction;
      var current_sort = this.state.sort_by;
      if (current_sort == desired_sort) {
        className = 'active ' + className;
      }
      return _react2.default.createElement('i', {
        onClick: this.applySort.bind(this, column),
        className: className,
        key: desired_sort
      });
    }
  }, {
    key: 'render_column_header',
    value: function render_column_header(visible_type, visible_metric, column_name, tooltip_message) {
      var style = { textAlign: 'left', cursor: 'pointer' };
      var report_column_threshold = this.thresholdInputColumn(column_name);
      return _react2.default.createElement(
        'th',
        { style: style },
        _react2.default.createElement(
          _reactTipsy2.default,
          { content: tooltip_message, placement: 'top' },
          _react2.default.createElement(
            'div',
            { className: 'sort-controls center left' },
            this.render_sort_arrow(column_name, 'highest', 'down'),
            visible_type + ' ',
            visible_metric
          )
        ),
        _react2.default.createElement(
          _reactTipsy2.default,
          { content: 'Threshold', placement: 'bottom' },
          report_column_threshold
        )
      );
    }
  }, {
    key: 'row_class',
    value: function row_class(tax_info) {
      if (tax_info.tax_level == 2) {
        if (tax_info.tax_id < 0) {
          return 'report-row-genus ' + tax_info.genus_taxid + ' fake-genus';
        }
        return 'report-row-genus ' + tax_info.genus_taxid + ' real-genus';
      }
      var initial_visibility = 'hidden';
      if (tax_info.genus_taxid < 0) {
        return 'report-row-species ' + tax_info.genus_taxid + ' fake-genus ' + initial_visibility;
      }
      return 'report-row-species ' + tax_info.genus_taxid + ' real-genus ' + initial_visibility;
    }
  }, {
    key: 'expandOrCollapseGenus',
    value: function expandOrCollapseGenus(e) {
      // className as set in render_name() is like 'fa fa-angle-right ${taxId}'
      var className = e.target.attributes.class.nodeValue;
      var attr = className.split(' ');
      var taxId = attr[2];
      (0, _jquery2.default)('.report-row-species.' + taxId).toggleClass('hidden');
      (0, _jquery2.default)('.report-arrow.' + taxId).toggleClass('hidden');
    }
  }, {
    key: 'expandTable',
    value: function expandTable(e) {
      // expand all real genera
      (0, _jquery2.default)('.report-row-species.real-genus').removeClass('hidden');
      (0, _jquery2.default)('.report-arrow-down.real-genus').removeClass('hidden');
      (0, _jquery2.default)('.report-arrow-right.real-genus').addClass('hidden');
      (0, _jquery2.default)('.table-arrow').toggleClass('hidden');
    }
  }, {
    key: 'collapseTable',
    value: function collapseTable(e) {
      // collapse all genera (real or negative)
      (0, _jquery2.default)('.report-row-species').addClass('hidden');
      (0, _jquery2.default)('.report-arrow-down').addClass('hidden');
      (0, _jquery2.default)('.report-arrow-right').removeClass('hidden');
      (0, _jquery2.default)('.table-arrow').toggleClass('hidden');
    }

    // Download report in csv

  }, {
    key: 'downloadReport',
    value: function downloadReport(id) {
      location.href = '/reports/' + id + '/csv';
      _satellite.track('downloadreport');
    }
  }, {
    key: 'render',
    value: function render() {
      var _this5 = this;

      var parts = this.report_page_params.sort_by.split('_');
      var sort_column = parts[1] + '_' + parts[2];
      var t0 = Date.now();

      var filter_stats = this.state.rows_passing_filters + ' rows passing filters, out of ' + this.state.rows_total + ' total rows.';
      var disable_filter = this.anyFilterSet() ? _react2.default.createElement(
        'span',
        { className: 'disable', onClick: function onClick(e) {
            return _this5.refs.report_filter.resetAllFilters();
          } },
        _react2.default.createElement(
          'b',
          null,
          ' Disable all filters'
        )
      ) : null;
      var filter_row_stats = this.state.loading ? null : _react2.default.createElement(
        'div',
        { id: 'filter-message', className: 'filter-message' },
        _react2.default.createElement(
          'span',
          { className: 'count' },
          filter_stats,
          ' ',
          disable_filter
        )
      );
      var report_filter = _react2.default.createElement(_ReportFilter2.default, {
        ref: 'report_filter',
        all_categories: this.all_categories,
        all_backgrounds: this.all_backgrounds,
        search_keys_in_sample: this.state.search_keys_in_sample,
        background_model: this.report_details.background_model,
        report_title: this.report_details.sample_info.name,
        report_page_params: this.report_page_params,
        applyExcludedCategories: this.applyExcludedCategories,
        applySearchFilter: this.applySearchFilter,
        flash: this.flash,
        filter_row_stats: filter_row_stats,
        enableFilters: this.enableFilters,
        resetAllFilters: this.resetAllFilters
      });
      var download_button = _react2.default.createElement(
        'a',
        { href: '/samples/' + this.sample_id + '/report_csv?background_id=' + this.report_details.background_model.id, className: 'download-report right' },
        _react2.default.createElement('div', { className: 'fa fa-cloud-download' }),
        _react2.default.createElement(
          'div',
          null,
          'Download report'
        )
      );
      var right_arrow_initial_visibility = '';
      var result = _react2.default.createElement(
        'div',
        null,
        _react2.default.createElement(
          'div',
          { id: 'reports', className: 'reports-screen tab-screen col s12' },
          _react2.default.createElement(
            'div',
            { className: 'tab-screen-content' },
            _react2.default.createElement(
              'div',
              { className: 'row reports-container' },
              _react2.default.createElement(
                'div',
                { className: 'col s2 reports-sidebar' },
                report_filter
              ),
              _react2.default.createElement(
                'div',
                { className: 'col s10 reports-section' },
                _react2.default.createElement(
                  'div',
                  { className: 'reports-count' },
                  download_button,
                  filter_row_stats
                ),
                _react2.default.createElement(
                  'div',
                  { className: 'reports-main' },
                  _react2.default.createElement(
                    'table',
                    { id: 'report-table', className: 'bordered report-table' },
                    _react2.default.createElement(
                      'thead',
                      null,
                      _react2.default.createElement(
                        'tr',
                        null,
                        _react2.default.createElement(
                          'th',
                          null,
                          _react2.default.createElement(
                            'span',
                            { className: 'table-arrow ' + right_arrow_initial_visibility },
                            _react2.default.createElement('i', { className: 'fa fa-angle-right', onClick: this.expandTable })
                          ),
                          _react2.default.createElement(
                            'span',
                            { className: 'table-arrow hidden' },
                            _react2.default.createElement('i', { className: 'fa fa-angle-down', onClick: this.collapseTable })
                          ),
                          'Taxonomy'
                        ),
                        this.render_column_header('', 'Score', 'NT_aggregatescore', 'Aggregate score'),
                        this.render_column_header('NT', 'Z', 'NT_zscore', 'Z-score relative to background model for alignments to NCBI NT'),
                        this.render_column_header('NT', 'rPM', 'NT_rpm', 'Number of reads aligning to the taxon in the NCBI NT database per million total input reads'),
                        this.render_column_header('NT', 'r', 'NT_r', 'Number of reads aligning to the taxon in the NCBI NT database'),
                        this.render_column_header('NT', '%id', 'NT_percentidentity', 'Average percent-identity of alignments to NCBI NT'),
                        this.render_column_header('NT', 'log(1/E)', 'NT_neglogevalue', 'Average log-10-transformed expect value for alignments to NCBI NT'),
                        this.render_column_header('NT', '%conc', 'NT_percentconcordant', 'Percentage of aligned reads belonging to a concordantly mappped pair (NCBI NT)'),
                        this.render_column_header('NR', 'Z', 'NR_zscore', 'Z-score relative to background model for alignments to NCBI NR'),
                        this.render_column_header('NR', 'rPM', 'NR_rpm', 'Number of reads aligning to the taxon in the NCBI NR database per million total input reads'),
                        this.render_column_header('NR', 'r', 'NR_r', 'Number of reads aligning to the taxon in the NCBI NR database'),
                        this.render_column_header('NR', '%id', 'NR_percentidentity', 'Average percent-identity of alignments to NCBI NR'),
                        this.render_column_header('NR', 'log(1/E)', 'NR_neglogevalue', 'Average log-10-transformed expect value for alignments to NCBI NR'),
                        this.render_column_header('NR', '%conc', 'NR_percentconcordant', 'Percentage of aligned reads belonging to a concordantly mappped pair (NCBI NR)')
                      )
                    ),
                    _react2.default.createElement(
                      'tbody',
                      null,
                      this.state.selected_taxons.slice(0, this.max_rows_to_render).map(function (tax_info, i) {
                        return _react2.default.createElement(
                          'tr',
                          { key: tax_info.tax_id, className: _this5.row_class(tax_info) },
                          _react2.default.createElement(
                            'td',
                            null,
                            _this5.render_name(tax_info, _this5.report_details)
                          ),
                          _this5.render_number(tax_info.NT.aggregatescore, sort_column == 'nt_aggregatescore', 0),
                          _this5.render_number(tax_info.NT.zscore, sort_column == 'nt_zscore', 1),
                          _this5.render_number(tax_info.NT.rpm, sort_column == 'nt_rpm', 1),
                          _this5.render_number(tax_info.NT.r, sort_column == 'nt_r', 0),
                          _this5.render_number(tax_info.NT.percentidentity, sort_column == 'nt_percentidentity', 1),
                          _this5.render_number(tax_info.NT.neglogevalue, sort_column == 'nt_neglogevalue', 0),
                          _this5.render_number(tax_info.NT.percentconcordant, sort_column == 'nt_percentconcordant', 1),
                          _this5.render_number(tax_info.NR.zscore, sort_column == 'nr_zscore', 1),
                          _this5.render_number(tax_info.NR.rpm, sort_column == 'nr_rpm', 1),
                          _this5.render_number(tax_info.NR.r, sort_column == 'nr_r', 0),
                          _this5.render_number(tax_info.NR.percentidentity, sort_column == 'nr_percentidentity', 1),
                          _this5.render_number(tax_info.NR.neglogevalue, sort_column == 'nr_neglogevalue', 0),
                          _this5.render_number(tax_info.NR.percentconcordant, sort_column == 'nr_percentconcordant', 1)
                        );
                      })
                    )
                  )
                )
              )
            )
          )
        )
      );
      var t1 = Date.now();
      // console.log(`Table render took ${t1 - t0} milliseconds.`);
      return result;
    }
  }]);

  return PipelineSampleReport;
}(_react2.default.Component);

exports.default = PipelineSampleReport;

/***/ }),

/***/ 159:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _react = __webpack_require__(1);

var _react2 = _interopRequireDefault(_react);

var _reactDom = __webpack_require__(7);

var _reactDom2 = _interopRequireDefault(_reactDom);

__webpack_require__(170);

__webpack_require__(173);

__webpack_require__(174);

__webpack_require__(175);

__webpack_require__(176);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var context = __webpack_require__(177);
var foundComponents = {};
var contextKeys = context.keys();
contextKeys.forEach(function (key) {
  var a = null;
  if (typeof context(key) === 'function') {
    a = context(key);
  } else if (_typeof(context(key)) === 'object') {
    a = context(key).default;
  }
  if (a && a.name) {
    foundComponents[a.name] = a;
  }
});
/* eslint camelcase: 0 */ // Turn off camelcase rule
var react_component = function react_component(componentName, props, target) {
  var matchedComponent = foundComponents[componentName];
  if (matchedComponent) {
    _reactDom2.default.render(_react2.default.createElement(matchedComponent, props, null), document.getElementById(target));
  }
};

window.react_component = react_component;

/***/ }),

/***/ 17:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
/**
  @function numberWithCommas
  @param {Number} x
  @return {String} comma separated numbers
*/
function numberWithCommas(x) {
  if (!x) {
    return x;
  }
  x = x.toString();
  var pattern = /(-?\d+)(\d{3})/;
  while (pattern.test(x)) {
    x = x.replace(pattern, '$1,$2');
  }
  return x;
}

exports.default = numberWithCommas;

/***/ }),

/***/ 170:
/***/ (function(module, exports) {

throw new Error("Module build failed: Error: ENOENT: no such file or directory, open '/Users/susanadelokiki/Documents/source/idseq-web/node_modules/materialize-css/dist/js/materialize.js'");

/***/ }),

/***/ 173:
/***/ (function(module, exports) {

throw new Error("Module build failed: ModuleBuildError: Module build failed: Error: ENOENT: no such file or directory, open '/Users/susanadelokiki/Documents/source/idseq-web/node_modules/materialize-css/dist/css/materialize.css'\n    at runLoaders (/Users/susanadelokiki/Documents/source/idseq-web/node_modules/webpack/lib/NormalModule.js:195:19)\n    at /Users/susanadelokiki/Documents/source/idseq-web/node_modules/loader-runner/lib/LoaderRunner.js:364:11\n    at /Users/susanadelokiki/Documents/source/idseq-web/node_modules/loader-runner/lib/LoaderRunner.js:200:19\n    at /Users/susanadelokiki/Documents/source/idseq-web/node_modules/enhanced-resolve/lib/CachedInputFileSystem.js:70:14\n    at _combinedTickCallback (internal/process/next_tick.js:67:7)\n    at process._tickCallback (internal/process/next_tick.js:98:9)");

/***/ }),

/***/ 174:
/***/ (function(module, exports) {

throw new Error("Module build failed: ModuleBuildError: Module build failed: Error: ENOENT: no such file or directory, open '/Users/susanadelokiki/Documents/source/idseq-web/node_modules/react-tipsy/dist/react-tipsy.css'\n    at runLoaders (/Users/susanadelokiki/Documents/source/idseq-web/node_modules/webpack/lib/NormalModule.js:195:19)\n    at /Users/susanadelokiki/Documents/source/idseq-web/node_modules/loader-runner/lib/LoaderRunner.js:364:11\n    at /Users/susanadelokiki/Documents/source/idseq-web/node_modules/loader-runner/lib/LoaderRunner.js:200:19\n    at /Users/susanadelokiki/Documents/source/idseq-web/node_modules/enhanced-resolve/lib/CachedInputFileSystem.js:70:14\n    at _combinedTickCallback (internal/process/next_tick.js:67:7)\n    at process._tickCallback (internal/process/next_tick.js:98:9)");

/***/ }),

/***/ 175:
/***/ (function(module, exports) {

throw new Error("Module build failed: ModuleBuildError: Module build failed: Error: ENOENT: no such file or directory, open '/Users/susanadelokiki/Documents/source/idseq-web/node_modules/font-awesome/scss/font-awesome.scss'\n    at runLoaders (/Users/susanadelokiki/Documents/source/idseq-web/node_modules/webpack/lib/NormalModule.js:195:19)\n    at /Users/susanadelokiki/Documents/source/idseq-web/node_modules/loader-runner/lib/LoaderRunner.js:364:11\n    at /Users/susanadelokiki/Documents/source/idseq-web/node_modules/loader-runner/lib/LoaderRunner.js:200:19\n    at /Users/susanadelokiki/Documents/source/idseq-web/node_modules/enhanced-resolve/lib/CachedInputFileSystem.js:70:14\n    at _combinedTickCallback (internal/process/next_tick.js:67:7)\n    at process._tickCallback (internal/process/next_tick.js:98:9)");

/***/ }),

/***/ 176:
/***/ (function(module, exports) {

throw new Error("Module build failed: ModuleBuildError: Module build failed: Error: ENOENT: no such file or directory, open '/Users/susanadelokiki/Documents/source/idseq-web/node_modules/svgo/lib/svgo/../../.svgo.yml'\n    at Object.fs.openSync (fs.js:558:18)\n    at Object.fs.readFileSync (fs.js:468:33)\n    at module.exports (/Users/susanadelokiki/Documents/source/idseq-web/node_modules/svgo/lib/svgo/config.js:31:48)\n    at new module.exports (/Users/susanadelokiki/Documents/source/idseq-web/node_modules/svgo/lib/svgo.js:21:19)\n    at /Users/susanadelokiki/Documents/source/idseq-web/node_modules/postcss-svgo/dist/index.js:95:16\n    at Object.creator [as postcssSvgo] (/Users/susanadelokiki/Documents/source/idseq-web/node_modules/postcss/lib/postcss.js:150:35)\n    at /Users/susanadelokiki/Documents/source/idseq-web/node_modules/cssnano/dist/index.js:295:40\n    at Array.forEach (native)\n    at /Users/susanadelokiki/Documents/source/idseq-web/node_modules/cssnano/dist/index.js:282:29\n    at creator (/Users/susanadelokiki/Documents/source/idseq-web/node_modules/postcss/lib/postcss.js:150:35)\n    at processCss (/Users/susanadelokiki/Documents/source/idseq-web/node_modules/css-loader/lib/processCss.js:197:16)\n    at Object.module.exports (/Users/susanadelokiki/Documents/source/idseq-web/node_modules/css-loader/lib/loader.js:40:2)\n    at runLoaders (/Users/susanadelokiki/Documents/source/idseq-web/node_modules/webpack/lib/NormalModule.js:195:19)\n    at /Users/susanadelokiki/Documents/source/idseq-web/node_modules/loader-runner/lib/LoaderRunner.js:364:11\n    at /Users/susanadelokiki/Documents/source/idseq-web/node_modules/loader-runner/lib/LoaderRunner.js:230:18\n    at runSyncOrAsync (/Users/susanadelokiki/Documents/source/idseq-web/node_modules/loader-runner/lib/LoaderRunner.js:143:3)\n    at iterateNormalLoaders (/Users/susanadelokiki/Documents/source/idseq-web/node_modules/loader-runner/lib/LoaderRunner.js:229:2)\n    at iterateNormalLoaders (/Users/susanadelokiki/Documents/source/idseq-web/node_modules/loader-runner/lib/LoaderRunner.js:218:10)\n    at /Users/susanadelokiki/Documents/source/idseq-web/node_modules/loader-runner/lib/LoaderRunner.js:233:3\n    at context.callback (/Users/susanadelokiki/Documents/source/idseq-web/node_modules/loader-runner/lib/LoaderRunner.js:111:13)\n    at Object.asyncSassJobQueue.push [as callback] (/Users/susanadelokiki/Documents/source/idseq-web/node_modules/sass-loader/lib/loader.js:79:9)\n    at Object.<anonymous> (/Users/susanadelokiki/Documents/source/idseq-web/node_modules/async/dist/async.js:2257:31)\n    at Object.callback (/Users/susanadelokiki/Documents/source/idseq-web/node_modules/async/dist/async.js:958:16)\n    at options.success (/Users/susanadelokiki/Documents/source/idseq-web/node_modules/node-sass/lib/index.js:308:32)");

/***/ }),

/***/ 177:
/***/ (function(module, exports, __webpack_require__) {

var map = {
	"./BulkUploadImport.jsx": 178,
	"./CreateUser.jsx": 197,
	"./Forbidden.jsx": 198,
	"./Header.jsx": 199,
	"./Home.jsx": 200,
	"./IconComponent.js": 34,
	"./Login.jsx": 209,
	"./PipelineSampleReads.jsx": 157,
	"./PipelineSampleReport.jsx": 158,
	"./ProjectSelection.jsx": 155,
	"./ProjectVisualization.jsx": 210,
	"./ReportFilter.jsx": 18,
	"./SampleUpload.jsx": 33,
	"./Samples.jsx": 13,
	"./SortHelper.jsx": 154,
	"./SubHeader.jsx": 20
};
function webpackContext(req) {
	return __webpack_require__(webpackContextResolve(req));
};
function webpackContextResolve(req) {
	var id = map[req];
	if(!(id + 1)) // check for number or string
		throw new Error("Cannot find module '" + req + "'.");
	return id;
};
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = 177;

/***/ }),

/***/ 178:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(1);

var _react2 = _interopRequireDefault(_react);

var _reactDom = __webpack_require__(7);

var _reactDom2 = _interopRequireDefault(_reactDom);

var _axios = __webpack_require__(5);

var _axios2 = _interopRequireDefault(_axios);

var _jquery = __webpack_require__(3);

var _jquery2 = _interopRequireDefault(_jquery);

var _reactTipsy = __webpack_require__(12);

var _reactTipsy2 = _interopRequireDefault(_reactTipsy);

var _SampleUpload = __webpack_require__(33);

var _SampleUpload2 = _interopRequireDefault(_SampleUpload);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var BulkUploadImport = function (_React$Component) {
  _inherits(BulkUploadImport, _React$Component);

  function BulkUploadImport(props, context) {
    _classCallCheck(this, BulkUploadImport);

    var _this = _possibleConstructorReturn(this, (BulkUploadImport.__proto__ || Object.getPrototypeOf(BulkUploadImport)).call(this, props, context));

    _this.hostGenomes = props.host_genomes || [];
    _this.hostName = _this.hostGenomes.length ? _this.hostGenomes[0].name : '';
    _this.hostId = _this.hostGenomes.length ? _this.hostGenomes[0].id : null;
    _this.handleImportSubmit = _this.handleImportSubmit.bind(_this);
    _this.handleUploadSubmit = _this.handleUploadSubmit.bind(_this);
    _this.csrf = props.csrf;
    _this.handleProjectSubmit = _this.handleProjectSubmit.bind(_this);
    _this.clearError = _this.clearError.bind(_this);
    _this.handleProjectChange = _this.handleProjectChange.bind(_this);
    _this.handleProjectChangeForSample = _this.handleProjectChangeForSample.bind(_this);
    _this.handleHostChange = _this.handleHostChange.bind(_this);
    _this.handleHostChangeForSample = _this.handleHostChangeForSample.bind(_this);
    _this.handleBulkPathChange = _this.handleBulkPathChange.bind(_this);
    _this.selectSample = _this.selectSample.bind(_this);
    _this.toggleNewProjectInput = _this.toggleNewProjectInput.bind(_this);
    _this.adminGenomes = _this.hostGenomes.map(function (g) {
      return g.name.toLowerCase().indexOf('test') >= 0 ? g.name : '';
    });
    _this.userDetails = props.loggedin_user;
    _this.state = {
      submitting: false,
      allProjects: props.projects || [],
      hostGenomes: _this.hostGenomes || [],
      invalid: false,
      errorMessage: '',
      imported: false,
      success: false,
      successMessage: '',
      hostName: _this.hostName,
      hostId: _this.hostId,
      project: 'Select a Project',
      projectId: null,
      selectedBulkPath: '',
      samples: [],
      selectedSampleIndices: [],
      createdSampleIds: [],
      allChecked: false,
      disableProjectSelect: false,
      errors: {},
      serverErrors: null
    };
    return _this;
  }

  _createClass(BulkUploadImport, [{
    key: 'componentDidUpdate',
    value: function componentDidUpdate() {
      (0, _jquery2.default)('.custom-select-dropdown').dropdown({
        belowOrigin: true
      });
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      (0, _jquery2.default)('body').addClass('background-cover');
      this.initializeSelectTag();
      (0, _jquery2.default)(_reactDom2.default.findDOMNode(this.refs.projectSelect)).on('change', this.handleProjectChange);
      (0, _jquery2.default)(_reactDom2.default.findDOMNode(this.refs.hostSelect)).on('change', this.handleHostChange);
      this.initializeSelectTag();
      this.initializeSelectAll();
    }
  }, {
    key: 'toggleNewProjectInput',
    value: function toggleNewProjectInput(e) {
      var _this2 = this;

      (0, _jquery2.default)('.new-project-input').slideToggle();
      (0, _jquery2.default)('.new-project-button').toggleClass('active');
      this.setState({
        disableProjectSelect: !this.state.disableProjectSelect
      }, function () {
        _this2.initializeSelectTag();
      });
    }
  }, {
    key: 'selectSample',
    value: function selectSample(e) {
      this.setState({
        allChecked: false
      });
      // current array of options
      var sampleList = this.state.selectedSampleIndices;

      var index = void 0;

      // check if the check box is checked or unchecked
      if (e.target.checked) {
        // add the numerical value of the checkbox to options array
        sampleList.push(+e.target.id);
      } else {
        // or remove the value from the unchecked checkbox from the array
        index = sampleList.indexOf(+e.target.id);
        sampleList.splice(index, 1);
      }

      // update the state with the new array of options
      this.setState({ selectedSampleIndices: sampleList });
    }
  }, {
    key: 'initializeSelectAll',
    value: function initializeSelectAll() {
      var _this3 = this;

      (0, _jquery2.default)(".checkAll").click(function (e) {
        var checkedStatus = e.target.checked;
        _this3.setState({
          allChecked: checkedStatus
        }, function () {
          (0, _jquery2.default)('input:checkbox').not(_this3).prop('checked', _this3.state.allChecked);
          (0, _jquery2.default)(".sample-box").each(function (id, element) {
            var sampleList = _this3.state.selectedSampleIndices;
            if (_this3.state.allChecked) {
              if (sampleList.indexOf(id) === -1) {
                sampleList.push(+id);
              }
            } else {
              sampleList = [];
            }
            _this3.setState({ selectedSampleIndices: sampleList });
          });
        });
      });
    }
  }, {
    key: 'handleUploadSubmit',
    value: function handleUploadSubmit(e) {
      var _this4 = this;

      e.preventDefault();
      (0, _jquery2.default)('html, body').stop().animate({ scrollTop: 0 }, 200, 'swing', function () {
        _this4.clearError();
        if (!_this4.isUploadFormInvalid()) {
          _this4.setState({
            submitting: true
          });
          _this4.bulkUploadSubmit();
        }
      });
    }
  }, {
    key: 'handleImportSubmit',
    value: function handleImportSubmit(e) {
      e.preventDefault();
      this.clearError();
      if (!this.isImportFormInvalid()) {
        this.setState({
          submitting: true
        });
        this.bulkUploadImport();
      }
    }
  }, {
    key: 'initializeSelectTag',
    value: function initializeSelectTag() {
      (0, _jquery2.default)('select').material_select();
    }
  }, {
    key: 'clearError',
    value: function clearError() {
      this.setState({
        invalid: false,
        success: false
      });
    }
  }, {
    key: 'gotoPage',
    value: function gotoPage(path) {
      location.href = '' + path;
    }
  }, {
    key: 'handleProjectSubmit',
    value: function handleProjectSubmit(e) {
      if (e && e.preventDefault) {
        e.preventDefault();
      }
      this.clearError();
      if (!this.isProjectInvalid()) {
        this.addProject();
      }
    }
  }, {
    key: 'addProject',
    value: function addProject() {
      var _this5 = this;

      var that = this;
      _axios2.default.post('/projects.json', {
        project: {
          name: this.refs.new_project.value
        },
        authenticity_token: this.csrf
      }).then(function (response) {
        var newProjectList = that.state.allProjects.slice();
        newProjectList.push(response.data);
        that.setState({
          allProjects: newProjectList,
          project: response.data.name,
          projectId: response.data.id,
          success: true,
          successMessage: 'Project added successfully'
        }, function () {
          _this5.refs.new_project.value = '';
          that.initializeSelectTag();
        });
      }).catch(function (error) {
        that.setState({
          invalid: true,
          errorMessage: 'Project exists already or is invalid'
        });
      });
    }
  }, {
    key: 'isProjectInvalid',
    value: function isProjectInvalid() {
      if (this.refs.new_project.value === '' && this.state.project === 'Select a project') {
        this.setState({
          invalid: true,
          errorMessage: 'Please enter valid project name'
        });
        return true;
      } else {
        return false;
      }
    }
  }, {
    key: 'bulkUploadImport',
    value: function bulkUploadImport() {
      var that = this;
      _axios2.default.get('/samples/bulk_import.json', {
        params: {
          project_id: this.state.projectId,
          host_genome_id: this.state.hostId,
          bulk_path: this.state.selectedBulkPath,
          authenticity_token: this.csrf
        }
      }).then(function (response) {
        that.setState({
          submitting: false,
          success: true,
          successMessage: 'Samples imported. Pick the ones you want to submit.',
          samples: response.data.samples,
          imported: true
        });
        that.initializeSelectTag();
        that.initializeSelectAll();
      }).catch(function (error) {
        that.setState({
          submitting: false,
          invalid: true,
          errorMessage: error.response.data.status || 'Something went wrong',
          serverErrors: error.response.data
        });
      });
    }
  }, {
    key: 'bulkUploadSubmit',
    value: function bulkUploadSubmit() {
      var _this6 = this;

      var that = this;
      var samples = [];
      this.state.selectedSampleIndices.map(function (idx) {
        samples.push(_this6.state.samples[idx]);
      });
      _axios2.default.post('/samples/bulk_upload.json', {
        samples: samples
      }).then(function (response) {
        that.setState({
          success: true,
          successMessage: 'Samples created. Redirecting...',
          createdSampleIds: response.data.sample_ids
        });
        setTimeout(function () {
          that.setState({
            submitting: false
          });
          that.gotoPage('/?ids=' + that.state.createdSampleIds.join(','));
        }, 2000);
      }).catch(function (error) {
        that.setState({
          submitting: false,
          invalid: true,
          errorMessage: error.response.data.status || 'Unable to process sample(s), ' + 'ensure sample is not a duplicate in the selected project',
          serverErrors: error.response.data
        });
      });
    }
  }, {
    key: 'filePathValid',
    value: function filePathValid(str) {
      var regexPrefix = /s3:\/\//;
      if (str.match(regexPrefix)) {
        return true;
      } else {
        return false;
      }
    }
  }, {
    key: 'isImportFormInvalid',
    value: function isImportFormInvalid() {
      var errors = {};
      if (this.state.project) {
        if (this.state.project.toLowerCase() === 'select a project') {
          errors.project = 'Please select a project';
        }
      } else {
        errors.project = 'Please select a project';
      }
      if (this.refs.bulk_path) {
        if (this.refs.bulk_path.value === '') {
          errors.bulk_path = 'Please fill in the S3 bulk path';
        } else if (!this.filePathValid(this.refs.bulk_path.value)) {
          errors.bulk_path = 'S3 bulk path is invalid';
        }
      } else {
        errors.bulk_path = 'Please fill in the S3 bulk path';
      }
      var errorsLength = Object.keys(errors).length;
      this.setState({
        invalid: errorsLength > 0,
        errors: errors
      });
      return errorsLength;
    }
  }, {
    key: 'isUploadFormInvalid',
    value: function isUploadFormInvalid() {
      if (!this.state.selectedSampleIndices.length) {
        this.setState({
          invalid: true,
          errorMessage: 'Please select desired samples'
        });
        return true;
      }
      return false;
    }
  }, {
    key: 'handleProjectChange',
    value: function handleProjectChange(e) {
      var projectId = void 0;
      if (e.target.selectedIndex > 0) {
        projectId = this.state.allProjects[e.target.selectedIndex - 1].id;
      }
      this.setState({
        project: e.target.value.trim(),
        projectId: projectId
      });
      this.clearError();
    }
  }, {
    key: 'handleProjectChangeForSample',
    value: function handleProjectChangeForSample(samplesId, projectId, element) {
      var selectedSampleElement = (0, _jquery2.default)(element.target);
      selectedSampleElement.parent().prev().html(selectedSampleElement.text() + ' <i class=\'fa fa-caret-down right\' />');
      // updating the label for slected project
      var samples = this.state.samples;
      samples[samplesId].project_id = this.state.allProjects[projectId].id;
      this.setState({
        samples: samples
      });
      this.clearError();
    }
  }, {
    key: 'handleHostChangeForSample',
    value: function handleHostChangeForSample(samplesId, hostGenomeId, element) {
      var selectedSampleElement = (0, _jquery2.default)(element.target);
      selectedSampleElement.parent().prev().html('\n      <div>\n        <div class=\'genome-icon\'>\n          ' + (_SampleUpload2.default.resolveGenomeIcon(selectedSampleElement.text(), '#59bcd6') || selectedSampleElement.text()) + '\n        </div>\n        <i class=\'fa fa-caret-down\' />\n      </div>\n      ');
      var samples = this.state.samples;
      samples[samplesId].host_genome_id = this.state.hostGenomes[hostGenomeId].id;
      this.setState({
        samples: samples
      });
      this.clearError();
    }
  }, {
    key: 'displayError',
    value: function displayError(failedStatus, serverError, formattedError) {
      if (failedStatus) {
        return serverError instanceof Array ? serverError.map(function (error, i) {
          return _react2.default.createElement(
            'p',
            { key: i },
            error
          );
        }) : _react2.default.createElement(
          'p',
          null,
          formattedError
        );
      } else {
        return null;
      }
    }
  }, {
    key: 'handleHostChange',
    value: function handleHostChange(hostId, hostName) {
      this.setState({ hostName: hostName, hostId: hostId });
      this.clearError();
    }
  }, {
    key: 'handleBulkPathChange',
    value: function handleBulkPathChange(e) {
      this.setState({
        selectedBulkPath: e.target.value.trim()
      });
    }
  }, {
    key: 'renderBulkUploadSubmitForm',
    value: function renderBulkUploadSubmitForm() {
      var _this7 = this;

      return _react2.default.createElement(
        'div',
        { id: 'samplesUploader', className: 'row' },
        _react2.default.createElement(
          'div',
          { className: 'col s8 offset-s2 upload-form-container' },
          _react2.default.createElement(
            'div',
            { className: 'content' },
            _react2.default.createElement(
              'div',
              null,
              _react2.default.createElement(
                'div',
                { className: 'form-title' },
                'Batch Upload'
              ),
              _react2.default.createElement(
                'div',
                { className: 'upload-info' },
                'Select which files you want to run through the pipeline.'
              ),
              _react2.default.createElement(
                'form',
                { className: 'bulkSumbitForm', ref: 'form', onSubmit: this.handleUploadSubmit },
                this.state.success ? _react2.default.createElement(
                  'div',
                  { className: 'form-feedback success-message' },
                  _react2.default.createElement('i', { className: 'fa fa-check-circle-o' }),
                  ' ',
                  _react2.default.createElement(
                    'span',
                    null,
                    this.state.successMessage
                  )
                ) : null,
                this.state.invalid ? _react2.default.createElement(
                  'div',
                  { className: 'form-feedback error-message' },
                  this.displayError(this.state.invalid, this.state.serverErrors, this.state.errorMessage)
                ) : null,
                _react2.default.createElement(
                  'div',
                  { className: 'fields' },
                  _react2.default.createElement(
                    'div',
                    { className: 'row' },
                    _react2.default.createElement(
                      'div',
                      { className: 'row header' },
                      _react2.default.createElement(
                        'div',
                        { className: 'col s5 no-padding' },
                        _react2.default.createElement('input', { type: 'checkbox',
                          checked: this.state.allChecked, id: 'checkAll',
                          className: 'filled-in checkAll', onChange: this.initializeSelectAll()
                        }),
                        _react2.default.createElement(
                          'label',
                          { htmlFor: 'checkAll' },
                          'Sample Name'
                        )
                      ),
                      _react2.default.createElement(
                        'div',
                        { className: 'col s3 no-padding' },
                        'Host'
                      ),
                      _react2.default.createElement(
                        'div',
                        { className: 'col s4 no-padding' },
                        'Project'
                      )
                    ),
                    _react2.default.createElement('div', { className: 'divider' }),
                    _react2.default.createElement('br', null),
                    this.state.samples.map(function (sample, i) {
                      return _react2.default.createElement(
                        'div',
                        { className: 'row field-row sample-row', key: i },
                        _react2.default.createElement(
                          'p',
                          { className: 'col s5 sample-names no-padding' },
                          _react2.default.createElement('input', { ref: 'samples_list', type: 'checkbox', id: i, className: 'filled-in sample-box', value: _this7.state.selectedSampleIndices.indexOf(i) < 0 ? 0 : 1, onChange: _this7.selectSample }),
                          _react2.default.createElement(
                            'label',
                            { htmlFor: i },
                            ' ',
                            sample.name
                          )
                        ),
                        _react2.default.createElement(
                          'div',
                          { className: 'col s3 no-padding' },
                          _react2.default.createElement(
                            'div',
                            { className: 'custom-select-dropdown select-dropdown genome-select', 'data-activates': 'genome-dropdown' + i },
                            _react2.default.createElement(
                              'div',
                              null,
                              _react2.default.createElement('div', { className: 'genome-icon', dangerouslySetInnerHTML: { __html: _SampleUpload2.default.resolveGenomeIcon(_this7.state.hostName, '#59bcd6') } }),
                              _react2.default.createElement('i', { className: 'fa fa-caret-down' })
                            )
                          ),
                          _react2.default.createElement(
                            'ul',
                            { id: 'genome-dropdown' + i, className: 'dropdown-content genomes' },
                            _this7.state.hostGenomes.map(function (host_genome, j) {
                              if (_this7.adminGenomes.indexOf(host_genome.name) < 0 || _this7.userDetails.admin) {
                                return _react2.default.createElement(
                                  'li',
                                  { onClick: function onClick(e) {
                                      _this7.handleHostChangeForSample(i, j, e);
                                    }, ref: 'genome',
                                    key: j, value: host_genome.id },
                                  host_genome.name
                                );
                              }
                            }),
                            !_this7.state.hostGenomes.length ? _react2.default.createElement(
                              'li',
                              null,
                              'No host genomes to display'
                            ) : ''
                          )
                        ),
                        _react2.default.createElement(
                          'div',
                          { className: 'col s4 no-padding' },
                          _react2.default.createElement(
                            'div',
                            { className: 'custom-select-dropdown', 'data-activates': 'project-dropdown' + i },
                            _this7.state.project,
                            _react2.default.createElement('i', { className: 'fa fa-caret-down right' })
                          ),
                          _react2.default.createElement(
                            'ul',
                            { id: 'project-dropdown' + i, className: 'dropdown-content' },
                            _this7.state.allProjects.length ? _this7.state.allProjects.map(function (project, j) {
                              return _react2.default.createElement(
                                'li',
                                { onClick: function onClick(e) {
                                    _this7.handleProjectChangeForSample(i, j, e);
                                  }, ref: 'project', key: j, value: project.id },
                                project.name
                              );
                            }) : _react2.default.createElement(
                              'li',
                              null,
                              'No projects to display'
                            )
                          )
                        ),
                        _react2.default.createElement('div', { className: 'col s12' })
                      );
                    })
                  ),
                  _react2.default.createElement(
                    'div',
                    { className: 'field' },
                    _react2.default.createElement(
                      'div',
                      { className: 'row' },
                      _react2.default.createElement(
                        'div',
                        { className: 'col no-padding s12' },
                        this.state.submitting ? _react2.default.createElement(
                          'button',
                          { type: 'button', disabled: true, className: 'new-button blue-button upload-samples-button' },
                          _react2.default.createElement('i', { className: 'fa fa-spinner fa-spin fa-lg' })
                        ) : _react2.default.createElement(
                          'button',
                          { type: 'submit', onClick: this.handleUploadSubmit, className: 'new-button blue-button upload-samples-button' },
                          'Run samples'
                        ),
                        _react2.default.createElement(
                          'button',
                          { type: 'button', onClick: function onClick() {
                              return window.history.back();
                            }, className: 'new-button skyblue-button' },
                          'Cancel'
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      );
    }
  }, {
    key: 'renderBulkUploadImportForm',
    value: function renderBulkUploadImportForm() {
      var _this8 = this;

      return _react2.default.createElement(
        'div',
        { id: 'samplesUploader', className: 'row' },
        _react2.default.createElement(
          'div',
          { className: 'col s6 offset-s3 upload-form-container' },
          _react2.default.createElement(
            'div',
            { className: 'content' },
            _react2.default.createElement(
              'div',
              null,
              _react2.default.createElement(
                'div',
                { className: 'form-title' },
                'Batch Upload'
              ),
              _react2.default.createElement(
                'div',
                { className: 'upload-info' },
                'Upload multiple files at one time to be processed through the IDseq pipeline.'
              )
            ),
            _react2.default.createElement(
              'div',
              null,
              _react2.default.createElement(
                'p',
                { className: 'upload-question' },
                'Only want to upload one sample? ',
                _react2.default.createElement(
                  'a',
                  { href: '/samples/new' },
                  'Click here.'
                ),
                _react2.default.createElement('br', null),
                'Rather use our CLI? ',
                _react2.default.createElement(
                  'a',
                  { href: 'https://github.com/chanzuckerberg/idseq-web/blob/master/README.md#submit-a-sample', target: '_blank' },
                  'Read documentation here.'
                )
              )
            ),
            this.state.success ? _react2.default.createElement(
              'div',
              { className: 'form-feedback success-message' },
              _react2.default.createElement('i', { className: 'fa fa-check-circle-o' }),
              ' ',
              _react2.default.createElement(
                'span',
                null,
                this.state.successMessage
              )
            ) : null,
            this.state.invalid ? _react2.default.createElement(
              'div',
              { className: 'form-feedback error-message' },
              this.state.errorMessage
            ) : null,
            _react2.default.createElement(
              'form',
              { ref: 'form', onSubmit: this.handleUpload },
              _react2.default.createElement(
                'div',
                { className: 'fields' },
                _react2.default.createElement(
                  'div',
                  { className: 'field' },
                  _react2.default.createElement(
                    'div',
                    { className: 'row' },
                    _react2.default.createElement(
                      'div',
                      { className: 'col field-title no-padding s12' },
                      'Project'
                    )
                  ),
                  _react2.default.createElement(
                    'div',
                    { className: 'row input-row' },
                    _react2.default.createElement(
                      _reactTipsy2.default,
                      { content: 'Name of experiment or project', position: 'top' },
                      _react2.default.createElement(
                        'div',
                        { className: 'col project-list no-padding s8', 'data-delay': '50' },
                        _react2.default.createElement(
                          'select',
                          {
                            ref: 'projectSelect',
                            disabled: this.state.disableProjectSelect ? 'disabled' : '', className: 'projectSelect', id: 'sample', onChange: this.handleProjectChange, value: this.state.project },
                          _react2.default.createElement(
                            'option',
                            { disabled: true, defaultValue: true },
                            this.state.project
                          ),
                          this.state.allProjects.length ? this.state.allProjects.map(function (project, i) {
                            return _react2.default.createElement(
                              'option',
                              { ref: 'project', key: i, id: project.id },
                              project.name
                            );
                          }) : _react2.default.createElement(
                            'option',
                            null,
                            'No projects to display'
                          )
                        ),
                        this.state.errors.project ? _react2.default.createElement(
                          'div',
                          { className: 'field-error' },
                          this.state.errors.project
                        ) : null
                      )
                    ),
                    _react2.default.createElement(
                      'div',
                      { className: 'col no-padding s4' },
                      _react2.default.createElement(
                        _reactTipsy2.default,
                        { content: 'Add a new desired experiment or project name',
                          placement: 'right' },
                        _react2.default.createElement(
                          'button',
                          {
                            type: 'button', onClick: this.toggleNewProjectInput,
                            className: 'new-project-button new-button skyblue-button',
                            'data-delay': '50' },
                          _react2.default.createElement('i', { className: 'fa fa-plus' }),
                          _react2.default.createElement(
                            'span',
                            null,
                            'New project'
                          )
                        )
                      )
                    ),
                    _react2.default.createElement(
                      'div',
                      { className: 'col no-padding s12 new-project-input hidden' },
                      _react2.default.createElement('input', { type: 'text', onBlur: function onBlur(e) {
                          if (e.target.value.trim().length) {
                            _this8.handleProjectSubmit();
                          }
                          (0, _jquery2.default)('.new-project-button').click();
                        }, ref: 'new_project', onFocus: this.clearError, className: 'browser-default', placeholder: 'Input new project name' }),
                      this.state.errors.new_project ? _react2.default.createElement(
                        'div',
                        { className: 'field-error' },
                        this.state.errors.new_project
                      ) : null
                    )
                  )
                ),
                _react2.default.createElement(
                  'div',
                  { className: 'field' },
                  _react2.default.createElement(
                    'div',
                    { className: 'row' },
                    _react2.default.createElement(
                      _reactTipsy2.default,
                      { content: 'This would be subtracted by the pipeline',
                        placement: 'top' },
                      _react2.default.createElement(
                        'div',
                        { className: 'col field-title no-padding s5',
                          'data-delay': '50' },
                        'Select host genome'
                      )
                    ),
                    this.userDetails.admin ? _react2.default.createElement(
                      'div',
                      { className: 'col s7 right-align no-padding right admin-genomes' },
                      this.state.hostGenomes.map(function (g) {
                        if (_this8.adminGenomes.indexOf(g.name) > 0 && _this8.userDetails.admin) {
                          return _react2.default.createElement(
                            'div',
                            { key: g.id,
                              className: (_this8.state.hostName === g.name ? 'active' : '') + ' genome-label',
                              id: g.name, onClick: function onClick() {
                                return _this8.handleHostChange(g.id, g.name);
                              } },
                            g.name
                          );
                        }
                      })
                    ) : null
                  ),
                  _react2.default.createElement(
                    'div',
                    { className: 'row input-row' },
                    _react2.default.createElement(
                      'div',
                      { className: 'col center no-padding s12' },
                      _react2.default.createElement(
                        'ul',
                        { className: 'host-selector' },
                        this.state.hostGenomes.map(function (g) {
                          return _SampleUpload2.default.resolveGenomeIcon(g.name) ? _react2.default.createElement(
                            'li',
                            {
                              key: g.id, className: (_this8.state.hostName === g.name ? 'active' : '') + ' ',
                              id: g.name, onClick: function onClick() {
                                return _this8.handleHostChange(g.id, g.name);
                              } },
                            _this8.state.hostName === g.name ? _react2.default.createElement('div', { className: 'img-container', dangerouslySetInnerHTML: { __html: _SampleUpload2.default.resolveGenomeIcon(g.name, '#59bcd6') } }) : _react2.default.createElement('div', { className: 'img-container', dangerouslySetInnerHTML: { __html: _SampleUpload2.default.resolveGenomeIcon(g.name, '#95A1Ab') } }),
                            _react2.default.createElement(
                              'div',
                              { className: 'genome-label' },
                              g.name
                            )
                          ) : null;
                        }),
                        this.state.hostGenomes.length ? '' : _react2.default.createElement(
                          'div',
                          null,
                          _react2.default.createElement(
                            'small',
                            null,
                            'No host genome found!'
                          )
                        )
                      ),
                      this.state.errors.hostName ? _react2.default.createElement(
                        'div',
                        { className: 'field-error' },
                        this.state.errors.hostName
                      ) : null
                    )
                  )
                ),
                _react2.default.createElement(
                  'div',
                  { className: 'field' },
                  _react2.default.createElement(
                    'div',
                    { className: 'row' },
                    _react2.default.createElement(
                      'div',
                      { className: 'col no-padding s12' },
                      _react2.default.createElement(
                        'div',
                        { className: 'field-title' },
                        _react2.default.createElement(
                          'div',
                          { className: 'read-count-label' },
                          'Path to Samples Folder'
                        ),
                        _react2.default.createElement(
                          'div',
                          { className: 'example-link' },
                          'Example: s3://czbiohub-seqbot/fastqs/171018_NB501961_0022_AHL2TVBGX3/rawdata'
                        )
                      )
                    )
                  ),
                  _react2.default.createElement(
                    'div',
                    { className: 'row input-row' },
                    _react2.default.createElement(
                      'div',
                      { className: 'col no-padding s12' },
                      _react2.default.createElement('input', { onChange: this.handleBulkPathChange, onFocus: this.clearError,
                        type: 'text', ref: 'bulk_path', className: 'browser-default',
                        placeholder: 's3://aws/path-to-sample-folder' }),
                      this.state.errors.bulk_path ? _react2.default.createElement(
                        'div',
                        { className: 'field-error' },
                        this.state.errors.bulk_path
                      ) : null
                    )
                  )
                ),
                _react2.default.createElement(
                  'div',
                  { className: 'field' },
                  _react2.default.createElement(
                    'div',
                    { className: 'row' },
                    _react2.default.createElement(
                      'div',
                      { className: 'col no-padding s12' },
                      this.state.submitting ? _react2.default.createElement(
                        'button',
                        { type: 'button', disabled: true, className: 'new-button blue-button upload-samples-button' },
                        _react2.default.createElement('i', { className: 'fa fa-spinner fa-spin fa-lg' })
                      ) : _react2.default.createElement(
                        'button',
                        { type: 'submit', onClick: this.handleImportSubmit, className: 'new-button blue-button upload-samples-button' },
                        'Upload samples'
                      ),
                      _react2.default.createElement(
                        'button',
                        { type: 'button', onClick: function onClick() {
                            return window.history.back();
                          }, className: 'new-button skyblue-button' },
                        'Cancel'
                      )
                    )
                  )
                )
              )
            )
          )
        )
      );
    }
  }, {
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        'div',
        null,
        this.state.imported ? this.renderBulkUploadSubmitForm() : null,
        !this.state.imported ? this.renderBulkUploadImportForm() : null
      );
    }
  }]);

  return BulkUploadImport;
}(_react2.default.Component);

exports.default = BulkUploadImport;

/***/ }),

/***/ 18:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(1);

var _react2 = _interopRequireDefault(_react);

var _reactDom = __webpack_require__(7);

var _reactDom2 = _interopRequireDefault(_reactDom);

var _propTypes = __webpack_require__(19);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _jsCookie = __webpack_require__(156);

var _jsCookie2 = _interopRequireDefault(_jsCookie);

var _reactAutocomplete = __webpack_require__(204);

var _reactAutocomplete2 = _interopRequireDefault(_reactAutocomplete);

var _jquery = __webpack_require__(3);

var _jquery2 = _interopRequireDefault(_jquery);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 @class ReportFilter
 @desc Creates react component to handle filtering in the page
 */
var ReportFilter = function (_React$Component) {
  _inherits(ReportFilter, _React$Component);

  function ReportFilter(props) {
    _classCallCheck(this, ReportFilter);

    var _this = _possibleConstructorReturn(this, (ReportFilter.__proto__ || Object.getPrototypeOf(ReportFilter)).call(this, props));

    _this.sample_id = props.sample_id;
    _this.background_model = props.background_model || 'N/A';
    _this.backgroundModels = props.all_backgrounds || [];
    _this.all_categories = props.all_categories || [];
    _this.applyExcludedCategories = _this.applyExcludedCategories.bind(_this);
    _this.searchSelectedTaxon = _this.searchSelectedTaxon.bind(_this);
    _this.handleSearch = _this.handleSearch.bind(_this);
    _this.resetAllFilters = _this.resetAllFilters.bind(_this);

    _this.handleBackgroundModelChange = _this.handleBackgroundModelChange.bind(_this);
    var cached_cats = _jsCookie2.default.get('excluded_categories');
    _this.state = {
      searchKey: '',
      searchId: 0,
      excluded_categories: cached_cats ? JSON.parse(cached_cats) : [],
      backgroundName: _jsCookie2.default.get('background_name') || _this.background_model.name,
      backgroundParams: _jsCookie2.default.get('background_id') || _this.background_model.id,
      search_items: props.search_keys_in_sample
    };
    return _this;
  }

  _createClass(ReportFilter, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(newProps) {
      this.setState({ search_items: newProps.search_keys_in_sample });
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      this.initializeSelectTag();
      (0, _jquery2.default)(_reactDom2.default.findDOMNode(this.refs.background)).on('change', this.handleBackgroundModelChange);
      // a polyfill for firefox, but disbaled for now
      // $(window).resize(() => {
      //   this.resizeFilterHeight();
      // });
    }
  }, {
    key: 'initializeSelectTag',
    value: function initializeSelectTag() {
      (0, _jquery2.default)('select').material_select();
    }
  }, {
    key: 'handleSearch',
    value: function handleSearch(e) {
      this.setState({
        searchKey: e.target.value
      });
    }

    // only for background model

  }, {
    key: 'refreshPage',
    value: function refreshPage(overrides) {
      ReportFilter.showLoading('Fetching results for new background...');
      var new_params = Object.assign({}, this.props.report_page_params, overrides);
      window.location = location.protocol + '//' + location.host + location.pathname + '?' + _jquery2.default.param(new_params);
    }
  }, {
    key: 'handleBackgroundModelChange',
    value: function handleBackgroundModelChange(e) {
      var _this2 = this;

      var backgroundName = e.target.value;
      var backgroundParams = this.backgroundModels[e.target.selectedIndex].id;
      this.setState({ backgroundName: backgroundName, backgroundParams: backgroundParams }, function () {
        _jsCookie2.default.set('background_name', backgroundName);
        _jsCookie2.default.set('background_id', backgroundParams);
        _this2.refreshPage({ background_id: backgroundParams });
      });
    }
  }, {
    key: 'resizeFilterHeight',
    value: function resizeFilterHeight() {
      var height = window.innerHeight;
      var subHeader = (0, _jquery2.default)('.sub-header-component').height();
      var headerHeight = (0, _jquery2.default)('.site-header').height();
      var newHeight = height;
      // $('.reports-sidebar').css('min-height', newHeight);
    }
  }, {
    key: 'applyExcludedCategories',
    value: function applyExcludedCategories(e) {
      var _this3 = this;

      //ReportFilter.showLoading('Applying category filter...');
      var excluded_categories = this.state.excluded_categories;
      if (e.target.checked) {
        var ridx = excluded_categories.indexOf(e.target.value);
        if (ridx > -1) {
          excluded_categories.splice(ridx, 1);
        }
      } else {
        excluded_categories.push(e.target.value);
      }
      this.setState({
        excluded_categories: excluded_categories,
        searchId: 0,
        searchKey: ''
      }, function () {
        _jsCookie2.default.set('excluded_categories', JSON.stringify(excluded_categories));
        _this3.applySearchFilter(0, excluded_categories);
        _this3.flash();
      });
    }
  }, {
    key: 'flash',
    value: function flash() {
      this.props.flash();
    }
  }, {
    key: 'resetAllFilters',
    value: function resetAllFilters() {
      this.setState({
        excluded_categories: [],
        searchId: 0,
        searchKey: ''
      });
      this.props.resetAllFilters();
    }
  }, {
    key: 'searchSelectedTaxon',
    value: function searchSelectedTaxon(value, item) {
      var _this4 = this;

      //ReportFilter.showLoading(`Filtering for '${value}'...`);
      var searchId = item[1];
      this.setState({
        searchId: searchId,
        excluded_categories: [],
        searchKey: item[0]
      }, function () {
        _this4.applySearchFilter(searchId, []);
      });
    }
  }, {
    key: 'applySearchFilter',
    value: function applySearchFilter(searchId, excluded_categories) {
      this.props.applySearchFilter(searchId, excluded_categories);
      this.flash();
    }
  }, {
    key: 'render',
    value: function render() {
      var _this5 = this;

      var align_right = { 'textAlign': 'right' };
      var category_filter = _react2.default.createElement(
        'div',
        { className: 'filter-controls' },
        _react2.default.createElement(
          'div',
          { className: 'category-title' },
          'CATEGORIES'
        ),
        _react2.default.createElement(
          'div',
          { className: 'categories' },
          this.all_categories.map(function (category, i) {
            return _react2.default.createElement(
              'p',
              { key: i },
              _react2.default.createElement('input', { type: 'checkbox', className: 'filled-in cat-filter', id: category.name, value: category.name, onClick: _this5.applyExcludedCategories, onChange: function onChange(e) {}, checked: _this5.state.excluded_categories.indexOf(category.name) < 0 }),
              _react2.default.createElement(
                'label',
                { htmlFor: category.name },
                category.name
              )
            );
          }),
          this.all_categories.length < 1 ? _react2.default.createElement(
            'p',
            null,
            'None found'
          ) : ''
        )
      );
      var genus_search = _react2.default.createElement(
        'div',
        { className: 'filter-controls' },
        _react2.default.createElement(
          'div',
          { className: 'row' },
          _react2.default.createElement(
            'div',
            { className: 'input-field col s12 genus-search-row' },
            _react2.default.createElement(
              'div',
              { className: 'genus-name-label' },
              'SEARCH'
            ),
            _react2.default.createElement(
              'div',
              { className: 'filter-values genus-autocomplete-container' },
              _react2.default.createElement(_reactAutocomplete2.default, {
                inputProps: { placeholder: 'species, genus, family, etc' },
                items: this.state.search_items,
                shouldItemRender: function shouldItemRender(item, value) {
                  return item[0] == 'All' || value.length > 2 && item[0].toLowerCase().indexOf(value.toLowerCase()) > -1;
                },
                getItemValue: function getItemValue(item) {
                  return item[0];
                },
                renderItem: function renderItem(item, highlighted) {
                  return _react2.default.createElement(
                    'div',
                    {
                      key: item[1],
                      style: { backgroundColor: highlighted ? '#eee' : 'transparent' }
                    },
                    item[0]
                  );
                },
                value: this.state.searchKey,
                onChange: this.handleSearch,
                onSelect: this.searchSelectedTaxon
              })
            )
          )
        )
      );
      return _react2.default.createElement(
        'div',
        null,
        _react2.default.createElement(
          'div',
          { className: 'sidebar-title' },
          'Report filters'
        ),
        _react2.default.createElement(
          'div',
          { className: 'sidebar-tabs' },
          _react2.default.createElement(
            'div',
            { className: 'row' },
            _react2.default.createElement(
              'div',
              { className: 'col s12 sidebar-full-container' },
              _react2.default.createElement(
                'div',
                { id: 'reports-pane', className: 'pane col s12' },
                _react2.default.createElement(
                  'div',
                  { className: 'sidebar-pane' },
                  _react2.default.createElement(
                    'div',
                    { className: 'report-data background-model' },
                    _react2.default.createElement(
                      'div',
                      { className: 'report-title' },
                      'Select background model'
                    ),
                    _react2.default.createElement(
                      'div',
                      { className: 'input-field' },
                      _react2.default.createElement('i', { className: 'fa fa-angle-down right' }),
                      _react2.default.createElement(
                        'select',
                        { ref: 'background', name: 'background', className: '', id: 'background',
                          onChange: this.handleBackgroundModelChange,
                          defaultValue: this.state.backgroundName },
                        this.backgroundModels.length ? this.backgroundModels.map(function (background, i) {
                          return _react2.default.createElement(
                            'option',
                            { ref: 'background', key: i },
                            background.name
                          );
                        }) : _react2.default.createElement(
                          'option',
                          null,
                          'No background models to display'
                        )
                      )
                    )
                  )
                )
              ),
              _react2.default.createElement(
                'div',
                { id: 'filters-pane', className: 'pane col s12' },
                category_filter,
                genus_search,
                this.props.filter_row_stats
              )
            )
          )
        )
      );
    }
  }], [{
    key: 'showLoading',
    value: function showLoading(message) {
      (0, _jquery2.default)('.page-loading .spinner-label').text(message);
      (0, _jquery2.default)('body').css('overflow', 'hidden');
      (0, _jquery2.default)('.page-loading').css('display', 'flex');
    }
  }, {
    key: 'hideLoading',
    value: function hideLoading() {
      (0, _jquery2.default)('.page-loading .spinner-label').text();
      (0, _jquery2.default)('body').css('overflow', 'scroll');
      (0, _jquery2.default)('.page-loading').css('display', 'none');
    }
  }]);

  return ReportFilter;
}(_react2.default.Component);

exports.default = ReportFilter;

/***/ }),

/***/ 19:
/***/ (function(module, exports) {

throw new Error("Module build failed: Error: ENOENT: no such file or directory, open '/Users/susanadelokiki/Documents/source/idseq-web/node_modules/prop-types/index.js'");

/***/ }),

/***/ 197:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(1);

var _react2 = _interopRequireDefault(_react);

var _axios = __webpack_require__(5);

var _axios2 = _interopRequireDefault(_axios);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var CreateUser = function (_React$Component) {
  _inherits(CreateUser, _React$Component);

  function CreateUser(props, context) {
    _classCallCheck(this, CreateUser);

    var _this = _possibleConstructorReturn(this, (CreateUser.__proto__ || Object.getPrototypeOf(CreateUser)).call(this, props, context));

    _this.csrf = props.csrf;
    _this.user = props.selectedUser || null;
    _this.handleCreate = _this.handleCreate.bind(_this);
    _this.handleUpdate = _this.handleUpdate.bind(_this);
    _this.handleEmailChange = _this.handleEmailChange.bind(_this);
    _this.handleNameChange = _this.handleNameChange.bind(_this);
    _this.handlePasswordChange = _this.handlePasswordChange.bind(_this);
    _this.handlePConfirmChange = _this.handlePConfirmChange.bind(_this);
    _this.clearError = _this.clearError.bind(_this);
    _this.gotoPage = _this.gotoPage.bind(_this);
    _this.toggleCheckBox = _this.toggleCheckBox.bind(_this);
    _this.selectedUser = {
      email: _this.user ? _this.user.email : '',
      name: _this.user ? _this.user.name : '',
      password: '',
      id: _this.user ? _this.user.id : null,
      password_confirmation: '',
      adminStatus: _this.user ? _this.user.admin : null
    };
    _this.state = {
      submitting: false,
      isAdmin: _this.selectedUser.adminStatus ? true : false,
      success: false,
      showFailed: false,
      errorMessage: '',
      successMessage: '',
      serverErrors: [],
      email: _this.selectedUser.email || '',
      name: _this.selectedUser.name || '',
      password: _this.selectedUser.password || '',
      pConfirm: _this.selectedUser.password_confirmation || '',
      adminstatus: _this.selectedUser.adminStatus,
      id: _this.selectedUser.id
    };
    return _this;
  }

  _createClass(CreateUser, [{
    key: 'handleCreate',
    value: function handleCreate(e) {
      e.preventDefault();
      if (!this.isCreateFormInvalid()) {
        this.setState({
          submitting: true
        });
        this.createUser();
      }
    }
  }, {
    key: 'handleUpdate',
    value: function handleUpdate(e) {
      e.preventDefault();
      if (!this.isUpdateFormValid()) {
        this.setState({
          submitting: true
        });
        this.updateUser();
      }
    }
  }, {
    key: 'gotoPage',
    value: function gotoPage(path) {
      location.href = '' + path;
    }
  }, {
    key: 'clearError',
    value: function clearError() {
      this.setState({ showFailed: false });
    }
  }, {
    key: 'toggleCheckBox',
    value: function toggleCheckBox(e) {
      this.setState({
        isAdmin: e.target.value == "true" ? false : true,
        adminstatus: e.target.value == "true" ? false : true
      });
    }
  }, {
    key: 'handlePasswordChange',
    value: function handlePasswordChange(e) {
      this.setState({
        password: e.target.value
      });
    }
  }, {
    key: 'handlePConfirmChange',
    value: function handlePConfirmChange(e) {
      this.setState({
        pConfirm: e.target.value
      });
    }
  }, {
    key: 'handleEmailChange',
    value: function handleEmailChange(e) {
      this.setState({
        email: e.target.value
      });
    }
  }, {
    key: 'handleNameChange',
    value: function handleNameChange(e) {
      this.setState({
        name: e.target.value
      });
    }
  }, {
    key: 'isCreateFormInvalid',
    value: function isCreateFormInvalid() {
      if (this.state.email === '' && this.state.password === '' && this.state.password_confirmation === '') {
        this.setState({
          showFailed: true,
          errorMessage: 'Please fill all fields'
        });
        return true;
      } else if (this.state.password === '') {
        this.setState({
          showFailed: true,
          errorMessage: 'Please enter password'
        });
        return true;
      } else if (this.state.password_confirmation === '') {
        this.setState({
          showFailed: true,
          errorMessage: 'Please re-enter password'
        });
        return true;
      } else {
        return false;
      }
    }
  }, {
    key: 'isUpdateFormValid',
    value: function isUpdateFormValid() {
      if (this.state.email === '') {
        this.setState({
          showFailed: true,
          errorMessage: 'Please enter valid email address'
        });
        return true;
      } else {
        return false;
      }
    }
  }, {
    key: 'createUser',
    value: function createUser() {
      var that = this;
      _axios2.default.post('/users.json', {
        user: {
          name: this.state.name,
          email: this.state.email,
          password: this.state.password,
          password_confirmation: this.state.password_confirmation,
          role: this.state.isAdmin ? 1 : 0
        }
      }, { headers: { 'X-CSRF-TOKEN': this.csrf } }).then(function (res) {
        that.setState({
          submitting: false,
          success: true,
          successMessage: 'User created successfully'
        }, function () {
          that.gotoPage('/users');
        });
      }).catch(function (err) {
        that.setState({
          submitting: false,
          showFailed: true,
          serverErrors: err.response.data
        });
      });
    }
  }, {
    key: 'updateUser',
    value: function updateUser() {
      var that = this;
      _axios2.default.patch('/users/' + this.state.id + '.json', {
        user: {
          name: this.state.name,
          email: this.state.email,
          password: this.state.password,
          password_confirmation: this.state.pConfirm,
          role: this.state.adminstatus ? 1 : 0
        }
      }, { headers: { 'X-CSRF-TOKEN': this.csrf } }).then(function (res) {
        that.setState({
          success: true,
          submitting: false,
          successMessage: 'User updated successfully'
        }, function () {
          that.gotoPage('/users');
        });
      }).catch(function (err) {
        that.setState({
          showFailed: true,
          submitting: false,
          serverErrors: err.response.data
        });
      });
    }
  }, {
    key: 'displayError',
    value: function displayError(failedStatus, serverError, formattedError) {
      if (failedStatus) {
        return serverError.length ? serverError.map(function (error, i) {
          return _react2.default.createElement(
            'p',
            { className: 'error center-align', key: i },
            error
          );
        }) : _react2.default.createElement(
          'span',
          null,
          formattedError
        );
      } else {
        return null;
      }
    }
  }, {
    key: 'renderUserForm',
    value: function renderUserForm(submitFunc, funcName) {
      return _react2.default.createElement(
        'div',
        { className: 'user-form' },
        _react2.default.createElement(
          'div',
          { className: 'row' },
          _react2.default.createElement(
            'form',
            { ref: 'form', className: 'new_user', id: 'new_user', onSubmit: submitFunc },
            _react2.default.createElement(
              'div',
              { className: 'row title' },
              _react2.default.createElement(
                'p',
                { className: 'col s8 signup' },
                ' ',
                funcName,
                ' User'
              )
            ),
            this.state.success ? _react2.default.createElement(
              'div',
              { className: 'success-info' },
              _react2.default.createElement('i', { className: 'fa fa-success' }),
              _react2.default.createElement(
                'span',
                null,
                this.state.successMessage
              )
            ) : null,
            _react2.default.createElement(
              'div',
              { className: this.state.showFailed ? 'error-info' : '' },
              this.displayError(this.state.showFailed, this.state.serverErrors, this.state.errorMessage)
            ),
            _react2.default.createElement(
              'div',
              { className: 'row content-wrapper' },
              _react2.default.createElement(
                'div',
                { className: 'input-field' },
                _react2.default.createElement('i', { className: 'fa fa-envelope', 'aria-hidden': 'true' }),
                _react2.default.createElement('input', { type: 'email', onChange: this.handleEmailChange, className: '', onFocus: this.clearError, value: this.state.email }),
                _react2.default.createElement(
                  'label',
                  { htmlFor: 'user_email' },
                  'Email'
                )
              ),
              _react2.default.createElement(
                'div',
                { className: 'input-field' },
                _react2.default.createElement('i', { className: 'fa fa-envelope', 'aria-hidden': 'true' }),
                _react2.default.createElement('input', { type: 'text', onChange: this.handleNameChange, className: '', onFocus: this.clearError, value: this.state.name }),
                _react2.default.createElement(
                  'label',
                  { htmlFor: 'user_name' },
                  'Name'
                )
              ),
              _react2.default.createElement(
                'div',
                { className: 'input-field' },
                _react2.default.createElement('i', { className: 'fa fa-key', 'aria-hidden': 'true' }),
                _react2.default.createElement('input', { type: 'password', onChange: this.handlePasswordChange, className: '', onFocus: this.clearError, value: this.state.password }),
                _react2.default.createElement(
                  'label',
                  { htmlFor: 'user_password' },
                  'Password'
                )
              ),
              _react2.default.createElement(
                'div',
                { className: 'input-field' },
                _react2.default.createElement('i', { className: 'fa fa-check-circle', 'aria-hidden': 'true' }),
                _react2.default.createElement('input', { type: 'password', onChange: this.handlePConfirmChange, className: '', onFocus: this.clearError, value: this.state.pConfirm }),
                _react2.default.createElement(
                  'label',
                  { htmlFor: 'user_password_confirmation' },
                  'Confirm Password'
                )
              ),
              _react2.default.createElement(
                'p',
                null,
                _react2.default.createElement('input', { type: 'checkbox', id: 'admin', className: 'filled-in', checked: this.state.isAdmin ? "checked" : "", onChange: this.toggleCheckBox, value: this.state.isAdmin }),
                _react2.default.createElement(
                  'label',
                  { htmlFor: 'admin' },
                  'Admin'
                )
              )
            ),
            _react2.default.createElement('input', { className: 'hidden', type: 'submit' }),
            this.state.submitting ? _react2.default.createElement(
              'div',
              { className: 'center login-wrapper disabled' },
              ' ',
              _react2.default.createElement('i', { className: 'fa fa-spinner fa-spin fa-lg' }),
              ' '
            ) : _react2.default.createElement(
              'div',
              { onClick: submitFunc, className: 'center login-wrapper' },
              'Submit'
            )
          )
        )
      );
    }
  }, {
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        'div',
        null,
        this.props.selectedUser ? this.renderUserForm(this.handleUpdate, 'Update') : this.renderUserForm(this.handleCreate, 'Create'),
        _react2.default.createElement(
          'div',
          { className: 'bottom' },
          _react2.default.createElement(
            'span',
            { className: 'back', onClick: this.props.selectedUser ? this.gotoPage.bind(this, '/users') : this.gotoPage.bind(this, '/') },
            'Back'
          ),
          '|',
          _react2.default.createElement(
            'span',
            { className: 'home', onClick: this.gotoPage.bind(this, '/') },
            'Home'
          )
        )
      );
    }
  }]);

  return CreateUser;
}(_react2.default.Component);

exports.default = CreateUser;

/***/ }),

/***/ 198:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(1);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ForbiddenPage = function (_React$Component) {
  _inherits(ForbiddenPage, _React$Component);

  function ForbiddenPage(props, context) {
    _classCallCheck(this, ForbiddenPage);

    return _possibleConstructorReturn(this, (ForbiddenPage.__proto__ || Object.getPrototypeOf(ForbiddenPage)).call(this, props, context));
  }

  _createClass(ForbiddenPage, [{
    key: "render",
    value: function render() {
      return _react2.default.createElement(
        "div",
        { className: "access" },
        "Access Denied"
      );
    }
  }]);

  return ForbiddenPage;
}(_react2.default.Component);

exports.default = ForbiddenPage;

/***/ }),

/***/ 199:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(1);

var _react2 = _interopRequireDefault(_react);

var _jquery = __webpack_require__(3);

var _jquery2 = _interopRequireDefault(_jquery);

var _axios = __webpack_require__(5);

var _axios2 = _interopRequireDefault(_axios);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Header = function (_React$Component) {
  _inherits(Header, _React$Component);

  function Header(props, context) {
    _classCallCheck(this, Header);

    var _this = _possibleConstructorReturn(this, (Header.__proto__ || Object.getPrototypeOf(Header)).call(this, props, context));

    _this.userSignedIn = _this.props.userSignedIn;
    _this.userDetails = _this.props.userDetails || null;
    _this.location = window.location.pathname;
    _this.sendMail = _this.sendMail.bind(_this);
    _this.signOut = _this.signOut.bind(_this);
    return _this;
  }

  _createClass(Header, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      this.displayProfileMenu();
    }
  }, {
    key: 'displayProfileMenu',
    value: function displayProfileMenu() {
      (0, _jquery2.default)('.profile-dropdown').dropdown({
        belowOrigin: true,
        stopPropagation: false
      });
    }
  }, {
    key: 'gotoPage',
    value: function gotoPage(path) {
      location.href = '' + path;
    }
  }, {
    key: 'signOut',
    value: function signOut() {
      var _this2 = this;

      (0, _axios2.default)(this.props.signoutEndpoint + '.json', { method: "DELETE", withCredentials: true }).then(function (res) {
        _this2.gotoPage(_this2.props.signInEndpoint);
      });
    }
  }, {
    key: 'sendMail',
    value: function sendMail() {
      var link = "mailto:regger@chanzuckerberg.com?Subject=Report%20Feedback";
      window.location.href = link;
    }
  }, {
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        'div',
        null,
        _react2.default.createElement(
          'div',
          { className: 'page-loading' },
          _react2.default.createElement(
            'div',
            { className: 'btn disabled' },
            _react2.default.createElement('i', { className: 'fa fa-spinner fa-spin' }),
            _react2.default.createElement('span', { className: 'spinner-label' })
          )
        ),
        _react2.default.createElement(
          'div',
          { className: 'site-header' },
          _react2.default.createElement(
            'ul',
            { id: 'dropdown1', className: 'dropdown-content' },
            _react2.default.createElement(
              'li',
              { onClick: this.gotoPage.bind(this, '/samples/new') },
              _react2.default.createElement(
                'a',
                { href: '#!' },
                'New sample'
              )
            ),
            this.userDetails && this.userDetails.admin ? _react2.default.createElement(
              'li',
              { onClick: this.gotoPage.bind(this, '/users/new') },
              _react2.default.createElement(
                'a',
                { href: '#!' },
                'Create user'
              )
            ) : null,
            _react2.default.createElement(
              'li',
              { onClick: this.sendMail },
              _react2.default.createElement(
                'a',
                { href: '#!' },
                'Report Feedback'
              )
            ),
            _react2.default.createElement('li', { className: 'divider' }),
            _react2.default.createElement(
              'li',
              { onClick: this.signOut },
              _react2.default.createElement(
                'a',
                { href: '#' },
                'Logout'
              )
            )
          ),
          _react2.default.createElement(
            'div',
            null,
            _react2.default.createElement(
              'div',
              { className: '' },
              _react2.default.createElement(
                'a',
                { href: '/', className: 'left brand-details' },
                _react2.default.createElement(
                  'div',
                  { className: 'brand-short' },
                  'ID.seq'
                ),
                _react2.default.createElement(
                  'div',
                  { className: 'brand-long' },
                  'Infectious Disease Platform'
                )
              ),
              _react2.default.createElement(
                'div',
                { className: this.userSignedIn ? "right hide-on-med-and-down header-right-nav" : "right hide-on-med-and-down header-right-nav menu" },
                this.userSignedIn ? _react2.default.createElement(
                  'div',
                  { className: 'profile-header-dropdown' },
                  _react2.default.createElement(
                    'a',
                    { className: 'dropdown-button profile-dropdown', 'data-activates': 'dropdown1' },
                    this.userDetails.email,
                    ' ',
                    _react2.default.createElement('i', { className: 'fa fa-angle-down' })
                  )
                ) : this.location === '/users/sign_in' ? null : _react2.default.createElement(
                  'div',
                  { className: 'login' },
                  _react2.default.createElement(
                    'span',
                    { onClick: this.gotoPage.bind(this, '/users/sign_in') },
                    'Login'
                  )
                )
              )
            )
          )
        )
      );
    }
  }]);

  return Header;
}(_react2.default.Component);

exports.default = Header;

/***/ }),

/***/ 20:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = __webpack_require__(1);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(19);

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var SubHeader = function SubHeader(props) {
  var children = props.children;

  return _react2.default.createElement(
    'div',
    { className: 'sub-header-component' },
    _react2.default.createElement(
      'div',
      { className: 'container' },
      _react2.default.createElement(
        'div',
        { className: 'content' },
        children
      )
    )
  );
};

SubHeader.propTypes = {
  children: _propTypes2.default.element
};

SubHeader.defaultProps = {
  children: _propTypes2.default.element
};

exports.default = SubHeader;

/***/ }),

/***/ 200:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(1);

var _react2 = _interopRequireDefault(_react);

var _Samples = __webpack_require__(13);

var _Samples2 = _interopRequireDefault(_Samples);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Home = function (_React$Component) {
  _inherits(Home, _React$Component);

  function Home() {
    _classCallCheck(this, Home);

    return _possibleConstructorReturn(this, (Home.__proto__ || Object.getPrototypeOf(Home)).apply(this, arguments));
  }

  _createClass(Home, [{
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        'div',
        null,
        _react2.default.createElement(_Samples2.default, this.props)
      );
    }
  }]);

  return Home;
}(_react2.default.Component);

exports.default = Home;

/***/ }),

/***/ 204:
/***/ (function(module, exports) {

throw new Error("Module build failed: Error: ENOENT: no such file or directory, open '/Users/susanadelokiki/Documents/source/idseq-web/node_modules/react-autocomplete/build/lib/Autocomplete.js'");

/***/ }),

/***/ 209:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(1);

var _react2 = _interopRequireDefault(_react);

var _axios = __webpack_require__(5);

var _axios2 = _interopRequireDefault(_axios);

var _jquery = __webpack_require__(3);

var _jquery2 = _interopRequireDefault(_jquery);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Login = function (_React$Component) {
  _inherits(Login, _React$Component);

  function Login(props, context) {
    _classCallCheck(this, Login);

    var _this = _possibleConstructorReturn(this, (Login.__proto__ || Object.getPrototypeOf(Login)).call(this, props, context));

    _this.csrf = props.csrf;
    _this.handleSubmit = _this.handleSubmit.bind(_this);
    _this.toggleCheckBox = _this.toggleCheckBox.bind(_this);
    _this.clearError = _this.clearError.bind(_this);
    _this.gotoPage = _this.gotoPage.bind(_this);
    _this.sendMail = _this.sendMail.bind(_this);
    _this.state = {
      isChecked: false,
      success: false,
      showFailedLogin: false,
      errorMessage: '',
      successMessage: ''
    };
    return _this;
  }

  _createClass(Login, [{
    key: 'handleSubmit',
    value: function handleSubmit(e) {
      e.preventDefault();
      this.clearError();
      if (!this.isFormInValid()) {
        this.login();
      }
    }
  }, {
    key: 'clearError',
    value: function clearError() {
      this.setState({
        showFailedLogin: false,
        success: false
      });
    }
  }, {
    key: 'gotoPage',
    value: function gotoPage(path) {
      location.href = '' + path;
    }
  }, {
    key: 'login',
    value: function login() {
      var that = this;
      _axios2.default.post(this.props.endpoint + '.json', {
        user: {
          email: this.refs.email.value,
          password: this.refs.password.value,
          remember_me: this.refs.remember_me.value
        },
        authenticity_token: this.csrf
      }).then(function (response) {
        that.setState({
          success: true,
          successMessage: 'User signed in'
        }, function () {
          that.gotoPage('/');
        });
      }).catch(function (error) {
        that.setState({
          showFailedLogin: true,
          errorMessage: 'Invalid Email and Password'
        });
      });
    }
  }, {
    key: 'isFormInValid',
    value: function isFormInValid() {
      if (this.refs.email.value === '' && this.refs.password.value === '') {
        this.setState({
          showFailedLogin: true,
          errorMessage: 'Please enter email and password'
        });
        return true;
      } else if (this.refs.email.value === '') {
        this.setState({
          showFailedLogin: true,
          errorMessage: 'Please enter email'
        });
        return true;
      } else if (this.refs.password.value === '') {
        this.setState({
          showFailedLogin: true,
          errorMessage: 'Please enter password'
        });
        return true;
      } else {
        return false;
      }
    }
  }, {
    key: 'toggleCheckBox',
    value: function toggleCheckBox() {
      var checkboxValue = (0, _jquery2.default)('#remember_me').prop('checked');
      this.setState({
        isChecked: checkboxValue
      });
      this.state.isChecked = !this.state.isChecked;
    }
  }, {
    key: 'sendMail',
    value: function sendMail() {
      var link = "mailto:regger@chanzuckerberg.com?Subject=Request%20IDseq%20Access";
      window.location.href = link;
    }
  }, {
    key: 'renderLogin',
    value: function renderLogin() {
      return _react2.default.createElement(
        'div',
        { className: 'login-form' },
        _react2.default.createElement(
          'div',
          { className: 'row' },
          _react2.default.createElement(
            'form',
            { ref: 'form', className: 'new_user', id: 'new_user', onSubmit: this.handleSubmit },
            _react2.default.createElement(
              'div',
              { className: 'row title' },
              _react2.default.createElement(
                'p',
                { className: 'col s6 signup' },
                'Login'
              )
            ),
            _react2.default.createElement(
              'div',
              { className: 'mail' },
              _react2.default.createElement(
                'p',
                null,
                'To request access to IDseq, please email us',
                _react2.default.createElement(
                  'span',
                  { onClick: this.sendMail },
                  ' here'
                )
              )
            ),
            this.state.success ? _react2.default.createElement(
              'div',
              { className: 'success-info' },
              _react2.default.createElement('i', { className: 'fa fa-success' }),
              _react2.default.createElement(
                'span',
                null,
                this.state.successMessage
              )
            ) : null,
            this.state.showFailedLogin ? _react2.default.createElement(
              'div',
              { className: 'error-info' },
              _react2.default.createElement('i', { className: 'fa fa-error' }),
              _react2.default.createElement(
                'span',
                null,
                this.state.errorMessage
              )
            ) : null,
            _react2.default.createElement(
              'div',
              { className: 'row content-wrapper' },
              _react2.default.createElement(
                'div',
                { className: 'input-field' },
                _react2.default.createElement('i', { className: 'sample fa fa-envelope', 'aria-hidden': 'true' }),
                _react2.default.createElement('input', { ref: 'email', type: 'email', className: '', onFocus: this.clearError }),
                _react2.default.createElement(
                  'label',
                  { htmlFor: 'user_email' },
                  'Email'
                )
              ),
              _react2.default.createElement(
                'div',
                { className: 'input-field' },
                _react2.default.createElement('i', { className: 'sample fa fa-key', 'aria-hidden': 'true' }),
                _react2.default.createElement('input', { ref: 'password', type: 'password', className: '', onFocus: this.clearError }),
                _react2.default.createElement(
                  'label',
                  { htmlFor: 'user_password' },
                  'Password'
                )
              ),
              _react2.default.createElement(
                'div',
                { className: '' },
                _react2.default.createElement('input', { ref: 'remember_me', type: 'checkbox', name: 'switch', className: 'filled-in', id: 'remember_me', onChange: this.toggleCheckBox, value: this.state.isChecked ? 1 : 0 }),
                _react2.default.createElement(
                  'label',
                  { htmlFor: 'remember_me' },
                  'Remember me'
                )
              )
            ),
            _react2.default.createElement('input', { className: 'hidden', type: 'submit' }),
            _react2.default.createElement(
              'div',
              { onClick: this.handleSubmit, className: 'center-align login-wrapper' },
              'Submit'
            )
          )
        )
      );
    }
  }, {
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        'div',
        null,
        this.renderLogin()
      );
    }
  }]);

  return Login;
}(_react2.default.Component);

exports.default = Login;

/***/ }),

/***/ 210:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(1);

var _react2 = _interopRequireDefault(_react);

var _SubHeader = __webpack_require__(20);

var _SubHeader2 = _interopRequireDefault(_SubHeader);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @class ProjectVisualization
 * @desc a component to visualize sample and their species taxonomy distribution
 */
var ProjectVisualization = function (_React$Component) {
  _inherits(ProjectVisualization, _React$Component);

  function ProjectVisualization(props) {
    _classCallCheck(this, ProjectVisualization);

    var _this = _possibleConstructorReturn(this, (ProjectVisualization.__proto__ || Object.getPrototypeOf(ProjectVisualization)).call(this, props));

    _this.projectName = props.project_name;
    _this.csvRecords = props.csv_records;
    _this.totalRecords = _this.csvRecords.length;
    return _this;
  }

  _createClass(ProjectVisualization, [{
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        'div',
        { id: 'project-visualization' },
        _react2.default.createElement(
          _SubHeader2.default,
          null,
          _react2.default.createElement(
            'div',
            { className: 'sub-header' },
            _react2.default.createElement(
              'div',
              { className: 'title' },
              'Project Visualization'
            ),
            _react2.default.createElement(
              'div',
              { className: 'sub-title' },
              'Track pathogen distribution across ',
              this.projectName,
              ' samples'
            )
          )
        ),
        _react2.default.createElement(
          'div',
          { className: 'row visualization-content' },
          _react2.default.createElement(
            'div',
            { className: 'col s2', id: 'visualization-sidebar' },
            _react2.default.createElement(
              'div',
              { className: 'select-pathogens genus card' },
              _react2.default.createElement(
                'div',
                { className: 'selected-pathogens' },
                _react2.default.createElement(
                  'div',
                  { className: 'title grey-text' },
                  'All Processed Samples',
                  this.totalRecords ? _react2.default.createElement(
                    'small',
                    null,
                    '(',
                    this.totalRecords,
                    ')'
                  ) : ''
                ),
                _react2.default.createElement(
                  'ul',
                  null,
                  this.csvRecords.map(function (sample, i) {
                    return _react2.default.createElement(
                      'li',
                      { key: i },
                      _react2.default.createElement(
                        'div',
                        { className: 'pathogen-label samples' },
                        _react2.default.createElement(
                          'div',
                          { className: 'grey-text text-lighten-1' },
                          sample.name
                        )
                      )
                    );
                  }),
                  !this.totalRecords ? _react2.default.createElement(
                    'div',
                    { className: 'text-grey text-lighten-1 center' },
                    '-no processed samples-'
                  ) : ''
                )
              )
            )
          ),
          _react2.default.createElement(
            'div',
            { className: 'col s10 graphs' },
            _react2.default.createElement(
              'div',
              { className: 'card' },
              _react2.default.createElement(
                'div',
                { className: 'card-action top' },
                _react2.default.createElement(
                  'a',
                  { href: '#' },
                  'Heatmap'
                )
              ),
              _react2.default.createElement(
                'div',
                { className: 'card-content' },
                _react2.default.createElement(
                  'div',
                  { className: 'row' },
                  _react2.default.createElement(
                    'div',
                    { className: 'col s9 center', id: 'heat-map' },
                    _react2.default.createElement(
                      'div',
                      { className: 'scroll-heatmap center' },
                      _react2.default.createElement('svg', { id: 'heat-map-canvas' })
                    )
                  ),
                  _react2.default.createElement(
                    'div',
                    { className: 'col s3' },
                    _react2.default.createElement(
                      'div',
                      { className: 'color-scale-info' },
                      _react2.default.createElement('svg', { id: 'color-scale' })
                    )
                  )
                )
              )
            )
          )
        )
      );
    }
  }]);

  return ProjectVisualization;
}(_react2.default.Component);

exports.default = ProjectVisualization;

/***/ }),

/***/ 3:
/***/ (function(module, exports) {

throw new Error("Module build failed: Error: ENOENT: no such file or directory, open '/Users/susanadelokiki/Documents/source/idseq-web/node_modules/jquery/dist/jquery.js'");

/***/ }),

/***/ 33:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(1);

var _react2 = _interopRequireDefault(_react);

var _reactDom = __webpack_require__(7);

var _reactDom2 = _interopRequireDefault(_reactDom);

var _axios = __webpack_require__(5);

var _axios2 = _interopRequireDefault(_axios);

var _jquery = __webpack_require__(3);

var _jquery2 = _interopRequireDefault(_jquery);

var _reactTipsy = __webpack_require__(12);

var _reactTipsy2 = _interopRequireDefault(_reactTipsy);

var _IconComponent = __webpack_require__(34);

var _IconComponent2 = _interopRequireDefault(_IconComponent);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var SampleUpload = function (_React$Component) {
  _inherits(SampleUpload, _React$Component);

  function SampleUpload(props, context) {
    _classCallCheck(this, SampleUpload);

    var _this = _possibleConstructorReturn(this, (SampleUpload.__proto__ || Object.getPrototypeOf(SampleUpload)).call(this, props, context));

    _this.handleUpload = _this.handleUpload.bind(_this);
    _this.handleUpdate = _this.handleUpdate.bind(_this);
    _this.csrf = props.csrf;
    _this.project = props.projectInfo ? props.projectInfo : null;
    _this.handleProjectSubmit = _this.handleProjectSubmit.bind(_this);
    _this.clearError = _this.clearError.bind(_this);
    _this.handleNameChange = _this.handleNameChange.bind(_this);
    _this.handleProjectChange = _this.handleProjectChange.bind(_this);
    _this.handleHostChange = _this.handleHostChange.bind(_this);
    _this.handleQueueChange = _this.handleQueueChange.bind(_this);
    _this.handleMemoryChange = _this.handleMemoryChange.bind(_this);
    _this.handleResultChange = _this.handleResultChange.bind(_this);
    _this.toggleNewProjectInput = _this.toggleNewProjectInput.bind(_this);
    _this.projects = props.projects || [];
    _this.project = props.projectInfo || '';
    _this.hostGenomes = props.host_genomes || [];
    _this.sample = props.selectedSample || '';
    _this.userDetails = props.loggedin_user;
    _this.updateSampleName = _this.updateSampleName.bind(_this);
    var selectedHostGenomeName = _this.hostGenomes[0] && _this.hostGenomes[0].name ? _this.hostGenomes[0].name : '';
    var selectedHostGenomeId = _this.hostGenomes[0] && _this.hostGenomes[0].id ? _this.hostGenomes[0].id : '';
    var adminGenomes = _this.hostGenomes.filter(function (g) {
      return g.name.toLowerCase().indexOf('test') >= 0;
    });
    _this.selected = {
      name: _this.sample.name || '',
      hostGenome: _this.sample ? _this.sample.host_genome_name : selectedHostGenomeName,
      hostGenomeId: _this.sample ? _this.sample.host_genome_id : selectedHostGenomeId,
      project: _this.project ? _this.project.name : 'Select a project',
      projectId: _this.project ? _this.project.id : null,
      resultPath: _this.sample ? _this.sample.s3_preload_result_path : '',
      jobQueue: _this.sample ? _this.sample.job_queue : '',
      memory: _this.sample ? _this.sample.sample_memory : '',
      id: _this.sample.id || '',
      inputFiles: props.inputFiles && props.inputFiles.length ? props.inputFiles : [],
      status: _this.sample.status
    };
    _this.firstInput = _this.selected.inputFiles.length && _this.selected.inputFiles[0] ? _this.selected.inputFiles[0].source === null ? '' : _this.selected.inputFiles[0].source : '';
    _this.secondInput = _this.selected.inputFiles.length && _this.selected.inputFiles[1] ? _this.selected.inputFiles[1].source === null ? '' : _this.selected.inputFiles[1].source : '';
    _this.toggleCheckBox = _this.toggleCheckBox.bind(_this);
    _this.state = {
      submitting: false,
      allProjects: _this.projects || [],
      hostGenomes: _this.hostGenomes || [],
      invalid: false,
      errorMessage: '',
      success: false,
      successMessage: '',
      serverErrors: [],
      selectedName: _this.selected.name || '',
      selectedHostGenome: _this.selected.hostGenome || '',
      selectedHostGenomeId: _this.selected.hostGenomeId || null,
      selectedProject: _this.selected.project || '',
      selectedPId: _this.selected.projectId || null,
      selectedResultPath: _this.selected.resultPath || '',
      selectedJobQueue: _this.selected.jobQueue || '',
      selectedMemory: _this.selected.memory || '',
      id: _this.selected.id,
      errors: {},
      adminGenomes: adminGenomes,
      sampleName: '',
      disableProjectSelect: false,
      omit_subsampling_checked: false
    };
    return _this;
  }

  _createClass(SampleUpload, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      (0, _jquery2.default)('body').addClass('background-cover');
      (0, _jquery2.default)('.tooltipped').tooltip({ delay: 50 });
      this.initializeSelectTag();
      (0, _jquery2.default)(_reactDom2.default.findDOMNode(this.refs.projectSelect)).on('change', this.handleProjectChange);
      (0, _jquery2.default)(_reactDom2.default.findDOMNode(this.refs.hostSelect)).on('change', this.handleHostChange);
      this.initializeTooltip();
    }
  }, {
    key: 'initializeTooltip',
    value: function initializeTooltip() {
      // only updating the tooltip offset when the component is loaded
      (0, _jquery2.default)(function () {
        var tooltipIdentifier = (0, _jquery2.default)("[rel='tooltip']");
        tooltipIdentifier.tooltip({
          delay: 0,
          html: true,
          placement: 'top',
          offset: '0px 50px'
        });
      });
    }
  }, {
    key: 'handleUpload',
    value: function handleUpload(e) {
      e.preventDefault();
      this.clearError();
      if (!this.isFormInvalid()) {
        this.createSample();
      }
    }
  }, {
    key: 'handleUpdate',
    value: function handleUpdate(e) {
      e.preventDefault();
      e.target.disabled = true;
      this.clearError();
      if (!this.isUpdateFormInvalid()) {
        this.updateSample();
      }
    }
  }, {
    key: 'initializeSelectTag',
    value: function initializeSelectTag() {
      (0, _jquery2.default)('select').material_select();
    }
  }, {
    key: 'clearError',
    value: function clearError() {
      this.setState({
        invalid: false,
        success: false
      });
    }
  }, {
    key: 'gotoPage',
    value: function gotoPage(path) {
      location.href = '' + path;
    }
  }, {
    key: 'toggleCheckBox',
    value: function toggleCheckBox(e) {
      this.setState({
        omit_subsampling_checked: e.target.value == "true" ? false : true
      });
    }
  }, {
    key: 'handleProjectSubmit',
    value: function handleProjectSubmit(e) {
      if (e && e.preventDefault) {
        e.preventDefault();
      }
      this.clearError();
      if (!this.isProjectInvalid()) {
        this.addProject();
      }
    }
  }, {
    key: 'addProject',
    value: function addProject() {
      var _this2 = this;

      var that = this;
      _axios2.default.post('/projects.json', {
        project: {
          name: this.refs.new_project.value
        },
        authenticity_token: this.csrf
      }).then(function (response) {
        var newProjectList = that.state.allProjects.slice();
        newProjectList.push(response.data);
        that.setState({
          allProjects: newProjectList,
          selectedProject: response.data.name,
          selectedPId: response.data.id,
          success: true,
          successMessage: 'Project added successfully'
        }, function () {
          _this2.refs.new_project.value = '';
          that.initializeSelectTag();
        });
      }).catch(function (error) {
        that.setState({
          invalid: true,
          errors: { 'selectedProject': 'Project already exists or is invalid' }
        });
      });
    }
  }, {
    key: 'isProjectInvalid',
    value: function isProjectInvalid() {
      if (this.refs.new_project.value === '' && this.state.selectedProject === 'Select a project') {
        this.setState({
          invalid: true,
          errorMessage: 'Please enter valid project name'
        });
        return true;
      } else {
        return false;
      }
    }
  }, {
    key: 'createSample',
    value: function createSample() {
      var _this3 = this;

      this.setState({
        submitting: true
      });
      _axios2.default.post('/samples.json', {
        sample: {
          name: this.state.sampleName,
          project_name: this.state.selectedProject.trim(),
          project_id: this.state.selectedPId,
          input_files_attributes: [{ source_type: 's3', source: this.refs.first_file_source.value.trim() }, { source_type: 's3', source: this.refs.second_file_source.value.trim() }],
          s3_preload_result_path: this.userDetails.admin ? this.refs.s3_preload_result_path.value.trim() : '',
          job_queue: this.state.selectedJobQueue,
          sample_memory: this.state.selectedMemory,
          host_genome_id: this.state.selectedHostGenomeId,
          subsample: this.state.omit_subsampling_checked ? 0 : 1,
          status: 'created'
        },
        authenticity_token: this.csrf
      }).then(function (response) {
        _satellite.track('uploadsample');
        _this3.setState({
          success: true,
          submitting: false,
          successMessage: 'Sample created successfully'
        });
        setTimeout(function () {
          _this3.gotoPage('/samples/' + response.data.id);
        }, 2000);
      }).catch(function (error) {
        _this3.setState({
          invalid: true,
          submitting: false,
          serverErrors: error.response.data,
          errorMessage: 'Something went wrong'
        });
      });
    }
  }, {
    key: 'updateSample',
    value: function updateSample() {
      var that = this;
      that.setState({
        submitting: true
      });
      _axios2.default.put('/samples/' + this.state.id + '.json', {
        sample: {
          name: this.state.selectedName,
          project: this.state.selectedProject,
          project_id: this.state.selectedPId,
          s3_preload_result_path: this.state.selectedResultPath,
          job_queue: this.state.selectedJobQueue,
          sample_memory: this.state.selectedMemory,
          host_genome_id: this.state.selectedHostGenomeId
        },
        authenticity_token: this.csrf
      }).then(function (response) {
        that.setState({
          success: true,
          submitting: false,
          successMessage: 'Sample updated successfully'
        });
        setTimeout(function () {
          that.gotoPage('/samples/' + that.state.id);
        }, 2000);
      }).catch(function (error) {
        that.setState({
          submitting: false,
          invalid: true,
          serverErrors: error.response.data,
          errorMessage: 'Failed to upload sample'
        });
      });
    }
  }, {
    key: 'filePathValid',
    value: function filePathValid(str) {
      var regexPrefix = /s3:\/\//;
      var regexSuffix = /(\.fastq|\.fastq.gz|\.fasta|\.fasta.gz)/igm;
      return str.match(regexPrefix) && str.match(regexSuffix);
    }
  }, {
    key: 'isUpdateFormInvalid',
    value: function isUpdateFormInvalid() {
      if (this.state.selectedName === '' && this.state.selectedProject === 'Select a Project' && this.state.selectedHostGenome === '') {
        this.setState({
          invalid: true,
          errorMessage: 'Please fill in name, host genome and select a project'
        });
        return true;
      } else if (this.state.selectedName === '') {
        this.setState({
          invalid: true,
          errorMessage: 'Please fill in Sample name'
        });
        return true;
      } else if (this.state.selectedProject === 'Select a Project') {
        this.setState({
          invalid: true,
          errorMessage: 'Please select a project'
        });
        return true;
      } else if (this.state.selectedHostGenome === '') {
        this.setState({
          invalid: true,
          errorMessage: 'Please select a host genome'
        });
        return true;
      } else {
        return false;
      }
    }
  }, {
    key: 'baseName',
    value: function baseName(str) {
      var base = new String(str).substring(str.lastIndexOf('/') + 1);
      if (base.lastIndexOf(".") != -1) {
        base = base.substring(0, base.lastIndexOf("."));
      }
      return base;
    }
  }, {
    key: 'isFormInvalid',
    value: function isFormInvalid() {
      var errors = {};

      if (this.state.sampleName) {
        if (this.state.sampleName.toLowerCase() === '') {
          errors.sampleName = 'Please enter a sample name';
        }
      } else {
        errors.sampleName = 'Please enter a sample name';
      }

      if (this.state.selectedProject) {
        if (this.state.selectedProject.toLowerCase() === 'select a project') {
          errors.selectedProject = 'Please select a project';
        }
      } else {
        errors.selectedProject = 'Please select a project';
      }

      if (this.state.selectedHostGenome) {
        if (this.state.selectedHostGenome === '') {
          errors.selectedHostGenome = 'Please select a host genome';
        }
      } else {
        errors.selectedHostGenome = 'Please select a host genome';
      }

      if (this.refs.first_file_source) {
        var firstFileSourceValue = this.refs.first_file_source.value.trim();
        if (!this.filePathValid(firstFileSourceValue)) {
          errors.first_file_source = 'Error: invalid file path';
        }
      } else {
        errors.first_file_source = 'Error: invalid file path';
      }

      if (this.refs.second_file_source) {
        var secondFileSourceValue = this.refs.second_file_source.value.trim();
        if (secondFileSourceValue !== '' && !this.filePathValid(secondFileSourceValue)) {
          errors.second_file_source = 'Error: invalid file path';
        }
      }

      if (this.userDetails.admin) {
        // running validations for admin inputs
        if (this.refs.s3_preload_result_path) {
          var preloadPath = this.refs.s3_preload_result_path.value.trim();
          if (preloadPath !== '' && preloadPath.indexOf('s3://') < 0) {
            errors.s3_preload_result_path = 'Error: invalid file path';
          }
        }
        if (this.state.selectedMemory !== '') {
          var memorySize = parseInt(this.state.selectedMemory, 10);
          if (isNaN(memorySize) || memorySize < 1) {
            errors.memory = 'Memory size is not valid';
          }
        }
      }
      var errorLength = Object.keys(errors).length;
      if (errorLength) {
        this.setState({ invalid: true, errors: errors });
      } else {
        this.setState({ invalid: false, errors: errors });
      }
      return errorLength;
    }
  }, {
    key: 'handleProjectChange',
    value: function handleProjectChange(e) {
      if (e.target.value.trim().toLowerCase() !== 'select a project') {
        var selectedIndex = e.target.selectedIndex - 1; // because the first item is Select a project
        this.setState({
          selectedProject: e.target.value.trim(),
          selectedPId: this.state.allProjects[selectedIndex].id,
          errors: Object.assign({}, this.state.errors, { selectedProject: null })
        });
      }
      this.clearError();
    }
  }, {
    key: 'handleHostChange',
    value: function handleHostChange(hostId, hostName) {
      this.setState({
        selectedHostGenome: hostName,
        selectedHostGenomeId: hostId
      });
      this.clearError();
    }
  }, {
    key: 'handleQueueChange',
    value: function handleQueueChange(e) {
      this.setState({
        selectedJobQueue: e.target.value.trim()
      });
      this.clearError();
    }
  }, {
    key: 'handleMemoryChange',
    value: function handleMemoryChange(e) {
      this.setState({
        selectedMemory: e.target.value.trim()
      });
      this.clearError();
    }
  }, {
    key: 'handleNameChange',
    value: function handleNameChange(e) {
      this.setState({
        selectedName: e.target.value.trim()
      });
    }
  }, {
    key: 'handleResultChange',
    value: function handleResultChange(e) {
      this.setState({
        selectedResultPath: e.target.value.trim()
      });
    }
  }, {
    key: 'displayError',
    value: function displayError(failedStatus, serverError, formattedError) {
      if (failedStatus) {
        return serverError instanceof Array ? serverError.map(function (error, i) {
          return _react2.default.createElement(
            'p',
            { key: i },
            error
          );
        }) : _react2.default.createElement(
          'p',
          null,
          formattedError
        );
      } else {
        return null;
      }
    }
  }, {
    key: 'toggleNewProjectInput',
    value: function toggleNewProjectInput(e) {
      var _this4 = this;

      (0, _jquery2.default)('.new-project-input').slideToggle();
      (0, _jquery2.default)('.new-project-button').toggleClass('active');
      this.setState({
        disableProjectSelect: !this.state.disableProjectSelect
      }, function () {
        _this4.initializeSelectTag();
      });
    }
  }, {
    key: 'updateSampleName',
    value: function updateSampleName(e, sampleField) {
      if (e) {
        var value = e.target.value.trim();
        if (value.length && value.indexOf('/')) {
          if (!this.refs.sample_name.value.trim().length) {
            var base = this.baseName(value);
            var fastqLabel = /.fastq*$|.fasta*$|.gz*$/igm;
            var readLabel = /_R1.*$|_R2.*$/ig;
            base = base.replace(fastqLabel, '').replace(readLabel, '');
            this.refs.sample_name.value = base;
            this.setState({ sampleName: base });
          }
        }
      } else if (sampleField) {
        this.setState({ sampleName: sampleField });
      }
    }
  }, {
    key: 'renderUpdateForm',
    value: function renderUpdateForm() {
      return _react2.default.createElement(
        'div',
        { className: 'form-wrapper' },
        _react2.default.createElement(
          'form',
          { ref: 'form', onSubmit: this.handleUpdate },
          _react2.default.createElement(
            'div',
            { className: 'row title' },
            _react2.default.createElement(
              'p',
              { className: 'col s6 signup' },
              'Sample Update'
            )
          ),
          this.state.success ? _react2.default.createElement(
            'div',
            { className: 'success-info' },
            _react2.default.createElement('i', { className: 'fa fa-success' }),
            _react2.default.createElement(
              'span',
              null,
              this.state.successMessage
            )
          ) : null,
          _react2.default.createElement(
            'div',
            { className: this.state.invalid ? 'error-info' : '' },
            this.displayError(this.state.invalid, this.state.serverErrors, this.state.errorMessage)
          ),
          _react2.default.createElement(
            'div',
            { className: 'row content-wrapper' },
            _react2.default.createElement(
              'div',
              { className: 'row field-row' },
              _react2.default.createElement(
                'div',
                { className: 'col s6 input-field name' },
                _react2.default.createElement('input', { ref: 'name', type: 'text', className: '', onFocus: this.clearError, onChange: this.handleNameChange, value: this.state.selectedName })
              ),
              _react2.default.createElement(
                'div',
                { className: 'col s6 input-field genome-list' },
                _react2.default.createElement(
                  'select',
                  { ref: 'hostSelect', name: 'host', className: '', id: 'host', onChange: this.handleHostChange, value: this.state.selectedHostGenome },
                  this.state.hostGenomes.length ? this.state.hostGenomes.map(function (host, i) {
                    return _react2.default.createElement(
                      'option',
                      { ref: 'host', key: i, id: host.id },
                      host.name
                    );
                  }) : _react2.default.createElement(
                    'option',
                    null,
                    'No host genomes to display'
                  )
                ),
                _react2.default.createElement(
                  'label',
                  null,
                  'Host genomes'
                )
              )
            ),
            _react2.default.createElement(
              'div',
              { className: 'row field-row' },
              _react2.default.createElement(
                'div',
                { className: 'input-field col s6 project-list' },
                _react2.default.createElement(
                  'select',
                  { ref: 'projectSelect', className: '', onChange: this.handleProjectChange, value: this.state.selectedProject, id: 'sample' },
                  _react2.default.createElement(
                    'option',
                    { disabled: true, defaultValue: true },
                    this.state.selectedProject
                  ),
                  this.state.allProjects.length ? this.state.allProjects.map(function (project, i) {
                    return _react2.default.createElement(
                      'option',
                      { ref: 'project', key: i, id: project.id },
                      project.name
                    );
                  }) : _react2.default.createElement(
                    'option',
                    null,
                    'No projects to display'
                  )
                ),
                _react2.default.createElement(
                  'label',
                  null,
                  'Project list'
                )
              ),
              _react2.default.createElement(
                'div',
                { className: 'input-field col s6' },
                _react2.default.createElement(
                  'div',
                  { className: 'row' },
                  _react2.default.createElement('input', { className: 'col s11 project-input', ref: 'new_project', type: 'text', onFocus: this.clearError, placeholder: 'Add a project if desired project is not on the list' }),
                  _react2.default.createElement('input', { className: 'col s1 add-icon', value: '\uF067', type: 'button', onClick: this.handleProjectSubmit })
                ),
                _react2.default.createElement(
                  'label',
                  { htmlFor: 'new_project' },
                  'Project'
                )
              )
            ),
            _react2.default.createElement(
              'div',
              { className: 'field-row input-field align' },
              _react2.default.createElement('i', { className: 'sample fa fa-link', 'aria-hidden': 'true' }),
              _react2.default.createElement('input', { ref: 'first_file_source', type: 'text', className: 'no-edit', onFocus: this.clearError, placeholder: 'Required', value: this.firstInput, readOnly: true }),
              _react2.default.createElement(
                'label',
                { htmlFor: 'sample_first_file_source' },
                'Read 1 fastq s3 path'
              )
            ),
            _react2.default.createElement(
              'div',
              { className: 'field-row input-field align' },
              _react2.default.createElement('i', { className: 'sample fa fa-link', 'aria-hidden': 'true' }),
              _react2.default.createElement('input', { ref: 'second_file_source', type: 'text', className: 'no-edit', onFocus: this.clearError, placeholder: 'Required', value: this.secondInput, readOnly: true }),
              _react2.default.createElement(
                'label',
                { htmlFor: 'sample_second_file_source' },
                'Read 2 fastq s3 path'
              )
            ),
            _react2.default.createElement(
              'div',
              { className: 'row field-row' },
              _react2.default.createElement(
                'div',
                { className: this.userDetails.admin ? "col s4 input-field" : "col s12 input-field" },
                _react2.default.createElement('i', { className: 'sample fa fa-folder', 'aria-hidden': 'true' }),
                _react2.default.createElement('input', { ref: 's3_preload_result_path', type: 'text', className: 'no-edit', onChange: this.handleResultChange, onFocus: this.clearError, readOnly: true, placeholder: 'Optional', value: this.state.selectedResultPath }),
                _react2.default.createElement(
                  'label',
                  { htmlFor: 'sample_s3_preload_result_path' },
                  'Preload results path (s3 only)'
                )
              ),
              this.userDetails.admin ? _react2.default.createElement(
                'div',
                { className: 'col s4 input-field' },
                _react2.default.createElement('i', { className: 'sample fa fa-file', 'aria-hidden': 'true' }),
                _react2.default.createElement('input', { ref: 'job_queue', type: 'text', className: '', onFocus: this.clearError, placeholder: 'Optional', value: this.state.selectedJobQueue, onChange: this.handleQueueChange }),
                _react2.default.createElement(
                  'label',
                  { htmlFor: 'sample_job_queue' },
                  'Job queue'
                )
              ) : null,
              this.userDetails.admin ? _react2.default.createElement(
                'div',
                { className: 'col s4 input-field' },
                _react2.default.createElement('i', { className: 'sample fa fa-file', 'aria-hidden': 'true' }),
                _react2.default.createElement('input', { ref: 'memory', type: 'text', className: '', value: this.state.selectedMemory, onFocus: this.clearError, placeholder: 'Optional', onChange: this.handleMemoryChange }),
                _react2.default.createElement(
                  'label',
                  { htmlFor: 'sample_memory' },
                  'Sample memory (in mbs)'
                )
              ) : null
            )
          ),
          _react2.default.createElement('input', { className: 'hidden', type: 'submit' }),
          this.state.submitting ? _react2.default.createElement(
            'div',
            { className: 'center login-wrapper disabled' },
            ' ',
            _react2.default.createElement('i', { className: 'fa fa-spinner fa-spin fa-lg' }),
            ' '
          ) : _react2.default.createElement(
            'div',
            { onClick: this.handleUpdate, className: 'center login-wrapper' },
            'Submit'
          )
        )
      );
    }
  }, {
    key: 'renderSampleForm',
    value: function renderSampleForm() {
      var _this5 = this;

      return _react2.default.createElement(
        'div',
        { id: 'samplesUploader', className: 'row' },
        _react2.default.createElement(
          'div',
          { className: 'col s4 valign-wrapper offset-s4 upload-form-container' },
          _react2.default.createElement(
            'div',
            { className: 'content' },
            _react2.default.createElement(
              'div',
              null,
              _react2.default.createElement(
                'div',
                { className: 'form-title' },
                'Single Upload'
              ),
              _react2.default.createElement(
                'div',
                { className: 'upload-info' },
                'Upload a single sample to be processed through the IDseq pipeline.'
              )
            ),
            _react2.default.createElement(
              'div',
              null,
              _react2.default.createElement(
                'p',
                { className: 'upload-question' },
                'Want to upload multiple samples at once? ',
                _react2.default.createElement(
                  'a',
                  { href: '/samples/bulk_new' },
                  'Click here.'
                ),
                _react2.default.createElement('br', null),
                'Rather use our CLI? ',
                _react2.default.createElement(
                  'a',
                  { href: 'https://github.com/chanzuckerberg/idseq-web/blob/master/README.md#submit-a-sample', target: '_blank' },
                  'Read documentation here.'
                )
              )
            ),
            this.state.success ? _react2.default.createElement(
              'div',
              { className: 'form-feedback success-message' },
              _react2.default.createElement('i', { className: 'fa fa-check-circle-o' }),
              ' ',
              _react2.default.createElement(
                'span',
                null,
                this.state.successMessage
              )
            ) : null,
            this.state.invalid ? _react2.default.createElement(
              'div',
              { className: 'form-feedback error-message' },
              this.displayError(this.state.invalid, this.state.serverErrors, this.state.errorMessage)
            ) : null,
            _react2.default.createElement(
              'form',
              { ref: 'form', onSubmit: this.handleUpload },
              _react2.default.createElement(
                'div',
                { className: 'fields' },
                _react2.default.createElement(
                  'div',
                  { className: 'field' },
                  _react2.default.createElement(
                    'div',
                    { className: 'row' },
                    _react2.default.createElement(
                      'div',
                      { className: 'col field-title no-padding s12' },
                      'Project'
                    )
                  ),
                  _react2.default.createElement(
                    'div',
                    { className: 'row input-row' },
                    _react2.default.createElement(
                      _reactTipsy2.default,
                      { content: 'Name of experiment or project', placement: 'top' },
                      _react2.default.createElement(
                        'div',
                        { className: 'col project-list no-padding s8' },
                        _react2.default.createElement(
                          'select',
                          { ref: 'projectSelect', disabled: this.state.disableProjectSelect ? 'disabled' : '', className: 'projectSelect', id: 'sample', onChange: this.handleProjectChange, value: this.state.selectedProject },
                          _react2.default.createElement(
                            'option',
                            { disabled: true, defaultValue: true },
                            this.state.selectedProject
                          ),
                          this.state.allProjects.length ? this.state.allProjects.map(function (project, i) {
                            return _react2.default.createElement(
                              'option',
                              { ref: 'project', key: i, id: project.id },
                              project.name
                            );
                          }) : _react2.default.createElement(
                            'option',
                            null,
                            'No projects to display'
                          )
                        ),
                        this.state.errors.selectedProject ? _react2.default.createElement(
                          'div',
                          { className: 'field-error' },
                          this.state.errors.selectedProject
                        ) : null
                      )
                    ),
                    _react2.default.createElement(
                      'div',
                      { className: 'col no-padding s4' },
                      _react2.default.createElement(
                        _reactTipsy2.default,
                        { content: 'Add a new desired experiment or project name',
                          placement: 'right' },
                        _react2.default.createElement(
                          'button',
                          { type: 'button',
                            onClick: this.toggleNewProjectInput,
                            className: 'new-project-button new-button skyblue-button' },
                          _react2.default.createElement('i', { className: 'fa fa-plus' }),
                          _react2.default.createElement(
                            'span',
                            null,
                            'New project'
                          )
                        )
                      )
                    ),
                    _react2.default.createElement(
                      'div',
                      { className: 'col no-padding s12 new-project-input hidden' },
                      _react2.default.createElement('input', { type: 'text', onBlur: function onBlur(e) {
                          if (e.target.value.trim().length) {
                            _this5.handleProjectSubmit();
                          }
                          (0, _jquery2.default)('.new-project-button').click();
                        }, ref: 'new_project', onFocus: this.clearError, className: 'browser-default', placeholder: 'Input new project name' }),
                      this.state.errors.new_project ? _react2.default.createElement(
                        'div',
                        { className: 'field-error' },
                        this.state.errors.new_project
                      ) : null
                    )
                  )
                ),
                _react2.default.createElement(
                  'div',
                  { className: 'field' },
                  _react2.default.createElement(
                    'div',
                    { className: 'row' },
                    _react2.default.createElement(
                      _reactTipsy2.default,
                      { content: 'This would be subtracted by the pipeline',
                        placement: 'top' },
                      _react2.default.createElement(
                        'div',
                        { className: 'col field-title no-padding s5',
                          'data-delay': '50' },
                        'Select host genome'
                      )
                    ),
                    this.userDetails.admin ? _react2.default.createElement(
                      'div',
                      { className: 'col s7 right-align no-padding right admin-genomes' },
                      this.state.adminGenomes.map(function (g) {
                        return _react2.default.createElement(
                          'div',
                          { key: g.id,
                            className: (_this5.state.selectedHostGenome === g.name ? 'active' : '') + ' genome-label',
                            id: g.name, onClick: function onClick() {
                              return _this5.handleHostChange(g.id, g.name);
                            } },
                          g.name
                        );
                      })
                    ) : null
                  ),
                  _react2.default.createElement(
                    'div',
                    { className: 'row input-row' },
                    _react2.default.createElement(
                      'div',
                      { className: 'col center no-padding s12' },
                      _react2.default.createElement(
                        'ul',
                        { className: 'host-selector' },
                        this.state.hostGenomes.map(function (g) {
                          return SampleUpload.resolveGenomeIcon(g.name) ? _react2.default.createElement(
                            'li',
                            {
                              key: g.id, className: (_this5.state.selectedHostGenome === g.name ? 'active' : '') + ' ',
                              id: g.name, onClick: function onClick() {
                                return _this5.handleHostChange(g.id, g.name);
                              } },
                            _this5.state.selectedHostGenome === g.name ? _react2.default.createElement('div', { className: 'img-container', dangerouslySetInnerHTML: { __html: SampleUpload.resolveGenomeIcon(g.name, '#59bcd6') } }) : _react2.default.createElement('div', { className: 'img-container', dangerouslySetInnerHTML: { __html: SampleUpload.resolveGenomeIcon(g.name, '#95A1Ab') } }),
                            _react2.default.createElement(
                              'div',
                              { className: 'genome-label' },
                              g.name
                            )
                          ) : null;
                        }),
                        this.state.hostGenomes.length ? '' : _react2.default.createElement(
                          'div',
                          null,
                          _react2.default.createElement(
                            'small',
                            null,
                            'No host genome found!'
                          )
                        )
                      ),
                      this.state.errors.selectedHostGenome ? _react2.default.createElement(
                        'div',
                        { className: 'field-error' },
                        this.state.errors.selectedHostGenome
                      ) : null
                    )
                  )
                ),
                _react2.default.createElement(
                  'div',
                  { className: 'field' },
                  _react2.default.createElement(
                    'div',
                    { className: 'row' },
                    _react2.default.createElement(
                      'div',
                      { className: 'col no-padding s12' },
                      _react2.default.createElement(
                        'div',
                        { className: 'field-title' },
                        _react2.default.createElement(
                          'div',
                          { className: 'read-count-label' },
                          'Read 1'
                        ),
                        _react2.default.createElement(
                          'div',
                          { className: 'validation-info' },
                          'Accepted formats: fastq, fastq.gz, fasta, fasta.gz'
                        ),
                        _react2.default.createElement(
                          'div',
                          { className: 'example-link' },
                          'Example: s3://czbiohub-infectious-disease/RR004/RR004_water_2_S23/RR004_water_2_S23_R1_001.fastq.gz'
                        )
                      )
                    )
                  ),
                  _react2.default.createElement(
                    'div',
                    { className: 'row input-row' },
                    _react2.default.createElement(
                      'div',
                      { className: 'col no-padding s12' },
                      _react2.default.createElement('input', { type: 'text', ref: 'first_file_source', onKeyUp: this.updateSampleName, onBlur: this.clearError, className: 'browser-default', placeholder: 'aws/path-to-sample' }),
                      this.state.errors.first_file_source ? _react2.default.createElement(
                        'div',
                        { className: 'field-error' },
                        this.state.errors.first_file_source
                      ) : null
                    )
                  )
                ),
                _react2.default.createElement(
                  'div',
                  { className: 'field' },
                  _react2.default.createElement(
                    'div',
                    { className: 'row' },
                    _react2.default.createElement(
                      'div',
                      { className: 'col no-padding s12' },
                      _react2.default.createElement(
                        'div',
                        { className: 'field-title' },
                        _react2.default.createElement(
                          'div',
                          { className: 'read-count-label' },
                          'Read 2'
                        ),
                        _react2.default.createElement(
                          'div',
                          { className: 'validation-info' },
                          'Accepted formats: fastq, fastq.gz, fasta, fasta.gz'
                        ),
                        _react2.default.createElement(
                          'div',
                          { className: 'example-link' },
                          'Example: s3://czbiohub-infectious-disease/RR004/RR004_water_2_S23/RR004_water_2_S23_R2_001.fastq.gz'
                        )
                      )
                    )
                  ),
                  _react2.default.createElement(
                    'div',
                    { className: 'row input-row' },
                    _react2.default.createElement(
                      'div',
                      { className: 'col no-padding s12' },
                      _react2.default.createElement('input', { ref: 'second_file_source', onFocus: this.clearError, type: 'text', className: 'browser-default', placeholder: 'aws/path-to-sample' }),
                      this.state.errors.second_file_source ? _react2.default.createElement(
                        'div',
                        { className: 'field-error' },
                        this.state.errors.second_file_source
                      ) : null
                    )
                  )
                ),
                _react2.default.createElement(
                  'div',
                  { className: 'field' },
                  _react2.default.createElement(
                    'div',
                    { className: 'row' },
                    _react2.default.createElement(
                      'div',
                      { className: 'col no-padding s12' },
                      _react2.default.createElement(
                        'div',
                        { className: 'field-title' },
                        _react2.default.createElement(
                          'div',
                          { className: 'read-count-label' },
                          'Sample name'
                        )
                      )
                    )
                  ),
                  _react2.default.createElement(
                    'div',
                    { className: 'row input-row' },
                    _react2.default.createElement(
                      'div',
                      { className: 'col no-padding s12' },
                      _react2.default.createElement('input', { type: 'text', ref: 'sample_name', className: 'browser-default',
                        onChange: function onChange(e) {
                          return _this5.updateSampleName(null, e.target.value);
                        }, placeholder: 'sample name' }),
                      this.state.errors.sampleName ? _react2.default.createElement(
                        'div',
                        { className: 'field-error' },
                        this.state.errors.sampleName
                      ) : null
                    )
                  )
                ),
                _react2.default.createElement(
                  'div',
                  { className: 'field' },
                  _react2.default.createElement(
                    'div',
                    { className: 'row' },
                    _react2.default.createElement(
                      'div',
                      { className: 'col no-padding s12' },
                      _react2.default.createElement(
                        'div',
                        { className: 'field-title' },
                        _react2.default.createElement(
                          'div',
                          { className: 'read-count-label' },
                          'Subsampling'
                        )
                      )
                    )
                  ),
                  _react2.default.createElement(
                    'div',
                    { className: 'row input-row' },
                    _react2.default.createElement(
                      'div',
                      { className: 'col no-padding s12' },
                      _react2.default.createElement('input', { ref: 'omit_subsampling_checked', type: 'checkbox', name: 'switch', id: 'omit_subsampling_checked', className: 'filled-in', onChange: this.toggleCheckBox, value: this.state.omit_subsampling_checked }),
                      _react2.default.createElement(
                        'label',
                        { htmlFor: 'omit_subsampling_checked', className: 'checkbox' },
                        'Skip subsampling (not recommended)'
                      )
                    )
                  )
                ),
                this.userDetails.admin ? _react2.default.createElement(
                  'div',
                  null,
                  _react2.default.createElement('div', { className: 'admin-fields divider' }),
                  _react2.default.createElement(
                    'div',
                    { className: 'admin-input-title' },
                    'Admin options'
                  ),
                  _react2.default.createElement(
                    'div',
                    { className: 'field' },
                    _react2.default.createElement(
                      'div',
                      { className: 'row' },
                      _react2.default.createElement(
                        'div',
                        { className: 'col no-padding s12' },
                        _react2.default.createElement(
                          'div',
                          { className: 'field-title' },
                          _react2.default.createElement(
                            'div',
                            { className: 'read-count-label' },
                            'Preload results path (s3)'
                          ),
                          _react2.default.createElement(
                            'div',
                            { className: 'example-link' },
                            'Example: s3://yunfang-workdir/id-rr004/RR004_water_2_S23/'
                          )
                        )
                      )
                    ),
                    _react2.default.createElement(
                      'div',
                      { className: 'row input-row' },
                      _react2.default.createElement(
                        'div',
                        { className: 'col no-padding s12' },
                        _react2.default.createElement('input', { type: 'text', ref: 's3_preload_result_path', className: 'browser-default', placeholder: 'aws/path-of-results' }),
                        this.state.errors.s3_preload_result_path ? _react2.default.createElement(
                          'div',
                          { className: 'field-error' },
                          this.state.errors.s3_preload_result_path
                        ) : null
                      )
                    )
                  ),
                  _react2.default.createElement(
                    'div',
                    { className: 'field' },
                    _react2.default.createElement(
                      'div',
                      { className: 'row' },
                      _react2.default.createElement(
                        'div',
                        { className: 'col no-padding s12' },
                        _react2.default.createElement(
                          'div',
                          { className: 'field-title' },
                          _react2.default.createElement(
                            'div',
                            { className: 'read-count-label', htmlFor: 'sample_job_queue' },
                            'Job queue'
                          ),
                          _react2.default.createElement(
                            'div',
                            { className: 'validation-info' },
                            'Example: aegea_batch_ondemand'
                          )
                        )
                      )
                    ),
                    _react2.default.createElement(
                      'div',
                      { className: 'row input-row' },
                      _react2.default.createElement(
                        'div',
                        { className: 'col no-padding s12' },
                        _react2.default.createElement('input', { id: 'sample_job_queue', ref: 'job_queue', type: 'text', className: 'browser-default',
                          placeholder: 'queue', value: this.state.selectedJobQueue,
                          onChange: this.handleQueueChange }),
                        this.state.errors.job_queue ? _react2.default.createElement(
                          'div',
                          { className: 'field-error' },
                          this.state.errors.job_queue
                        ) : null
                      )
                    )
                  ),
                  _react2.default.createElement(
                    'div',
                    { className: 'field' },
                    _react2.default.createElement(
                      'div',
                      { className: 'row' },
                      _react2.default.createElement(
                        'div',
                        { className: 'col no-padding s12' },
                        _react2.default.createElement(
                          'div',
                          { className: 'field-title' },
                          _react2.default.createElement(
                            'div',
                            { htmlFor: 'sample_memory', className: 'read-count-label' },
                            'Sample memory (in MB)'
                          )
                        )
                      )
                    ),
                    _react2.default.createElement(
                      'div',
                      { className: 'row input-row' },
                      _react2.default.createElement(
                        'div',
                        { className: 'col no-padding s12' },
                        _react2.default.createElement('input', { id: 'sample_memory', type: 'text', className: 'browser-default', ref: 'memory', value: this.state.selectedMemory, placeholder: '240000', onChange: this.handleMemoryChange }),
                        this.state.errors.memory ? _react2.default.createElement(
                          'div',
                          { className: 'field-error' },
                          this.state.errors.memory
                        ) : null
                      )
                    )
                  )
                ) : null,
                _react2.default.createElement(
                  'div',
                  { className: 'field' },
                  _react2.default.createElement(
                    'div',
                    { className: 'row' },
                    _react2.default.createElement(
                      'div',
                      { className: 'col no-padding s12' },
                      this.state.submitting ? _react2.default.createElement(
                        'button',
                        { type: 'button', disabled: true, className: 'new-button blue-button upload-samples-button' },
                        _react2.default.createElement('i', { className: 'fa fa-spinner fa-spin fa-lg' })
                      ) : _react2.default.createElement(
                        'button',
                        { type: 'submit', onClick: this.handleUpload, className: 'new-button blue-button upload-samples-button' },
                        'Upload sample'
                      ),
                      _react2.default.createElement(
                        'button',
                        { type: 'button', onClick: function onClick() {
                            return window.history.back();
                          }, className: 'new-button skyblue-button' },
                        'Cancel'
                      )
                    )
                  )
                )
              )
            )
          )
        )
      );
    }
  }, {
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        'div',
        null,
        this.props.selectedSample ? this.renderUpdateForm() : this.renderSampleForm()
      );
    }
  }], [{
    key: 'resolveGenomeIcon',
    value: function resolveGenomeIcon(genomeName, color) {
      var imgPath = '/assets/generic_genome.png';
      if (typeof genomeName === 'undefined') {
        return false;
      }
      genomeName = genomeName.toLowerCase();
      switch (genomeName) {
        case 'mosquito':
          return _IconComponent2.default.mosquito(color);
          break;
        case 'human':
          return _IconComponent2.default.human(color);
          break;
        case 'no host subtraction':
          return _IconComponent2.default.bacteria(color);
          break;
        default:
          return false;
      }
    }
  }]);

  return SampleUpload;
}(_react2.default.Component);

exports.default = SampleUpload;

/***/ }),

/***/ 34:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var IconComponent = function () {
  function IconComponent() {
    _classCallCheck(this, IconComponent);
  }

  _createClass(IconComponent, null, [{
    key: "mosquito",
    value: function mosquito(color) {
      return "<svg fill='" + color + "' x=\"0px\" y=\"0px\"\n           viewBox=\"0 0 463.003 463.003\" style='enable-background : new 0 0 463.003 463.003'>\n        <path d=\"M359.418,189.996c12.73-3.407,35.161-10.159,42.347-17.101c5.774-5.578,7.161-13.759,3.62-21.351\n          c-5.167-11.076-18.691-17.164-34.458-15.502c-10.467,1.102-33.561,7.968-58.011,15.238c-20.258,6.023-44.515,13.235-57.914,15.777\n          v-7.556c0-1.22-0.094-2.419-0.274-3.589l24.98-14.988c9.434-5.66,15.294-16.01,15.294-27.011V89.579l46.932-78.219\n          c2.131-3.552,0.979-8.159-2.573-10.29c-3.552-2.131-8.159-0.98-10.29,2.572l-48,80c-0.699,1.166-1.068,2.5-1.068,3.859v26.412\n          c0,5.762-3.069,11.184-8.011,14.148l-24.203,14.522c-2.473-2.381-5.463-4.226-8.786-5.348V71.501c0-4.142-3.357-7.5-7.5-7.5\n          s-7.5,3.358-7.5,7.5v65.734c-3.322,1.122-6.313,2.966-8.786,5.348l-24.203-14.522c-4.941-2.965-8.011-8.386-8.011-14.148V87.501\n          c0-1.359-0.369-2.693-1.068-3.859l-48-80c-2.133-3.552-6.738-4.702-10.29-2.572c-3.552,2.131-4.704,6.738-2.573,10.29l46.932,78.219\n          v24.334c0,11.001,5.86,21.351,15.294,27.011l24.98,14.988c-0.18,1.171-0.274,2.369-0.274,3.589v7.556\n          c-13.399-2.542-37.656-9.754-57.914-15.777c-24.45-7.27-47.544-14.136-58.011-15.238c-15.763-1.658-29.29,4.427-34.458,15.502\n          c-3.541,7.591-2.154,15.772,3.62,21.351c7.186,6.942,29.616,13.694,42.347,17.101c21.07,5.639,41.239,9.005,53.951,9.005\n          c10.197,0,21.08-1.139,30.733-2.57l-16.829,14.024c-6.79,5.659-11.857,13.083-14.653,21.47l-19.979,59.936l-63.164,78.956\n          c-2.588,3.234-2.063,7.954,1.171,10.542c1.383,1.106,3.038,1.644,4.681,1.644c2.2,0,4.38-0.964,5.861-2.815l64-80\n          c0.553-0.691,0.979-1.474,1.259-2.313l20.401-61.205c1.913-5.738,5.38-10.818,10.026-14.69l26.957-22.464v5.356l-21.591,26.989\n          c-6.712,8.389-10.409,18.927-10.409,29.673v56.292l-63.286,134.483c-1.764,3.748-0.155,8.216,3.593,9.979\n          c1.032,0.486,2.118,0.716,3.188,0.716c2.814,0,5.513-1.593,6.791-4.309l64-136c0.47-0.999,0.714-2.089,0.714-3.193v-57.969\n          c0-7.353,2.529-14.563,7.122-20.303l9.878-12.348v26.619c0,22.519,10.103,39.5,23.5,39.5s23.5-16.981,23.5-39.5v-26.619\n          l9.878,12.348c4.593,5.74,7.122,12.95,7.122,20.302v57.969c0,1.104,0.244,2.194,0.714,3.193l64,136\n          c1.278,2.716,3.976,4.309,6.791,4.309c1.069,0,2.156-0.23,3.188-0.716c3.748-1.764,5.356-6.232,3.593-9.979l-63.286-134.483v-56.292\n          c0-10.746-3.697-21.284-10.409-29.673l-21.591-26.989v-5.356l26.957,22.464c4.646,3.872,8.113,8.952,10.026,14.689l20.401,61.205\n          c0.28,0.839,0.706,1.623,1.259,2.313l64,80c1.481,1.852,3.661,2.815,5.861,2.815c1.643,0,3.298-0.538,4.681-1.644\n          c3.234-2.587,3.759-7.307,1.171-10.542l-63.164-78.956l-19.979-59.937c-2.796-8.386-7.863-15.81-14.653-21.469l-16.829-14.024\n          c9.653,1.431,20.536,2.57,30.733,2.57C318.178,199.001,338.347,195.635,359.418,189.996z M317.19,165.658\n          c22.722-6.756,46.217-13.742,55.307-14.698c10.576-1.115,17.312,2.677,19.294,6.926c0.809,1.733,0.657,3.153-0.448,4.221\n          c-6.067,5.861-58.5,21.894-85.876,21.894c-13.068,0-27.758-2.11-38.832-4.132C279.162,176.881,296.154,171.913,317.19,165.658z\n           M223.002,200.001v-18.597c2.638,1.027,5.503,1.597,8.5,1.597s5.862-0.57,8.5-1.597v18.597H223.002z M240.002,215.001v17h-17v-17\n          H240.002z M231.502,151.001c4.687,0,8.5,3.813,8.5,8.5s-3.813,8.5-8.5,8.5s-8.5-3.813-8.5-8.5S226.815,151.001,231.502,151.001z\n           M71.661,162.107c-1.105-1.068-1.257-2.488-0.448-4.221c1.744-3.739,7.168-7.123,15.653-7.123c1.157,0,2.372,0.063,3.641,0.197\n          c9.09,0.956,32.585,7.942,55.307,14.698c21.036,6.255,38.028,11.223,50.556,14.211c-11.074,2.021-25.764,4.132-38.832,4.132\n          C130.161,184.001,77.728,167.969,71.661,162.107z M231.502,280.001c-2.116,0-8.5-8.689-8.5-24.5v-8.5h17v8.5\n          C240.002,271.312,233.618,280.001,231.502,280.001z\"/>\n        <g>\n        </g>\n        <g>\n        </g>\n        <g>\n        </g>\n        <g>\n        </g>\n        <g>\n        </g>\n        <g>\n        </g>\n        <g>\n        </g>\n        <g>\n        </g>\n        <g>\n        </g>\n        <g>\n        </g>\n        <g>\n        </g>\n        <g>\n        </g>\n        <g>\n        </g>\n        <g>\n        </g>\n        <g>\n        </g>\n        </svg>";
    }
  }, {
    key: "human",
    value: function human(color) {
      return "<svg fill='" + color + "' x=\"0px\" y=\"0px\"\n         viewBox=\"0 0 511.997 511.997\" style='enable-background : new 0 0 511.997 511.997'>\n      <g>\n        <g>\n          <path d=\"M157.897,185.906c-3.217-2.609-7.939-2.117-10.549,1.101c-3.03,3.736-7.047,5.793-11.313,5.793\n            c-4.266,0-8.283-2.058-11.313-5.793c-2.609-3.217-7.333-3.709-10.549-1.101c-3.217,2.609-3.71,7.332-1.101,10.549\n            c5.847,7.21,14.217,11.345,22.963,11.345c8.746,0,17.115-4.135,22.963-11.345C161.607,193.238,161.114,188.515,157.897,185.906z\"\n            />\n        </g>\n      </g>\n      <g>\n        <g>\n          <path d=\"M101.759,141.386c-4.142,0-7.5,3.358-7.5,7.5v8.569c0,4.142,3.358,7.5,7.5,7.5c4.142,0,7.5-3.358,7.5-7.5v-8.569\n            C109.259,144.744,105.901,141.386,101.759,141.386z\"/>\n        </g>\n      </g>\n      <g>\n        <g>\n          <path d=\"M170.311,141.386c-4.142,0-7.5,3.358-7.5,7.5v8.569c0,4.142,3.357,7.5,7.5,7.5c4.142,0,7.5-3.358,7.5-7.5v-8.569\n            C177.811,144.744,174.453,141.386,170.311,141.386z\"/>\n        </g>\n      </g>\n      <g>\n        <g>\n          <path d=\"M406.397,228.75c-3.217-2.609-7.94-2.117-10.549,1.101c-3.03,3.735-7.048,5.793-11.313,5.793\n            c-4.266,0-8.283-2.058-11.313-5.793c-2.608-3.217-7.332-3.71-10.549-1.101c-3.217,2.609-3.709,7.332-1.1,10.549\n            c5.846,7.211,14.216,11.345,22.962,11.345c8.746,0,17.115-4.135,22.962-11.345C410.106,236.082,409.614,231.359,406.397,228.75z\"\n            />\n        </g>\n      </g>\n      <g>\n        <g>\n          <path d=\"M350.259,184.231c-4.142,0-7.5,3.358-7.5,7.5v8.569c0,4.142,3.358,7.5,7.5,7.5c4.142,0,7.5-3.358,7.5-7.5v-8.569\n            C357.759,187.589,354.401,184.231,350.259,184.231z\"/>\n        </g>\n      </g>\n      <g>\n        <g>\n          <path d=\"M418.811,184.231c-4.142,0-7.5,3.358-7.5,7.5v8.569c0,4.142,3.357,7.5,7.5,7.5c4.142,0,7.5-3.358,7.5-7.5v-8.569\n            C426.311,187.589,422.953,184.231,418.811,184.231z\"/>\n        </g>\n      </g>\n      <g>\n        <g>\n          <path d=\"M491.126,332.545l-58.757-23.503c-0.318-0.127-0.612-0.289-0.91-0.445c40.583-9.234,59.803-24.676,60.656-25.375\n            c2.029-1.663,3.042-4.265,2.671-6.862c-0.085-0.594-8.494-60.135-8.494-118.904c0-56.11-45.649-101.759-101.759-101.759\n            c-56.11,0-101.758,45.648-101.758,101.759c0,15.374-0.698,34.178-1.834,51.979l-16.373,8.187l-48.06-24.029\n            c-0.138-0.069-0.283-0.119-0.424-0.179c2.286-6.663,3.781-13.689,4.33-20.98c10.053-3.106,17.378-12.487,17.378-23.547\n            c0-7.449-3.328-14.131-8.569-18.653v-49.9c0-13.785-6.965-26.683-18.387-34.433c-3.87-14.38-16.79-24.481-31.958-24.481h-68.552\n            c-37.21,0-67.483,30.273-67.483,67.483v41.33c-5.241,4.521-8.569,11.204-8.569,18.653c0,11.06,7.325,20.441,17.378,23.547\n            c1.894,25.179,14.87,47.302,34.036,61.54v20.73L23.664,273.31C9.51,277.557,0,290.338,0,305.116v83.701c0,4.142,3.358,7.5,7.5,7.5\n            h1.069v86.759c0,4.142,3.358,7.5,7.5,7.5c4.142,0,7.5-3.358,7.5-7.5v-86.759h27.845v86.759c0,4.142,3.358,7.5,7.5,7.5\n            c4.142,0,7.5-3.358,7.5-7.5v-129.32c0-6.578-1.929-12.948-5.577-18.42l-12.82-19.23c-2.298-3.447-6.955-4.377-10.4-2.081\n            c-3.447,2.297-4.378,6.954-2.08,10.401l12.82,19.231c2,3,3.058,6.492,3.058,10.099v27.561H16.069H15v-76.201\n            c0-8.103,5.214-15.11,12.976-17.439l25.747-7.724c8.966,37.542,43.017,64.95,82.312,64.95c14.117,0,27.827-3.481,40.104-10.105\n            c4.487,6.121,11.724,10.105,19.878,10.105h1.069v1.069c0,25.143,13.832,47.103,34.276,58.712v12.233\n            c0,0.46-0.294,0.868-0.731,1.014l-27.977,9.326c-13.581,4.527-22.706,17.187-22.706,31.503v24.316c0,4.142,3.358,7.5,7.5,7.5\n            c4.142,0,7.5-3.358,7.5-7.5V458.76c0-7.849,5.003-14.791,12.449-17.272l8.227-2.743c10.884,16.232,29.189,26.125,48.944,26.125\n            c19.776,0,38.064-9.887,48.946-26.124l8.225,2.742c7.446,2.482,12.449,9.423,12.449,17.272v24.316c0,4.142,3.358,7.5,7.5,7.5\n            c4.142,0,7.5-3.358,7.5-7.5V458.76c0-14.316-9.125-26.976-22.706-31.502l-27.977-9.326c-0.437-0.146-0.731-0.553-0.731-1.014\n            v-12.233c15.307-8.692,26.893-23.188,31.753-40.481c14.173,14.83,33.968,23.546,55.005,23.546\n            c33.212,0,62.353-21.469,72.391-52.728l28.629,11.451c6.953,2.781,11.445,9.417,11.445,16.904v35.079h-1.069h-26.776v-9.638\n            c0-4.142-3.358-7.5-7.5-7.5c-4.142,0-7.5,3.358-7.5,7.5v94.259c0,4.142,3.358,7.5,7.5,7.5c4.142,0,7.5-3.358,7.5-7.5v-69.621\n            h19.276v69.621c0,4.142,3.358,7.5,7.5,7.5c4.142,0,7.5-3.358,7.5-7.5v-69.621h1.069c1.989,0,3.896-0.79,5.303-2.196\n            c1.407-1.407,2.197-3.314,2.197-5.304v-42.579C512,349.719,503.807,337.617,491.126,332.545z M297.776,157.455\n            c0-47.839,38.92-86.759,86.759-86.759c47.839,0,86.758,38.92,86.758,86.759c0,50.363,6.065,101.274,8.036,116.479\n            c-6.721,4.397-23.929,14.081-53.018,20.445v-11.935c3.984-2.258,7.798-4.835,11.384-7.733\n            c14.758-11.929,25.187-28.636,29.363-47.042c1.392-6.133,2.098-12.458,2.098-18.799c0-42.391-30.657-48.477-60.305-54.363\n            c-18.865-3.745-38.372-7.618-53.906-20.045c-2.251-1.801-5.335-2.152-7.934-0.903c-2.599,1.249-4.251,3.876-4.251,6.76\n            c0,0.199-0.327,19.933-28.595,27c-4.019,1.005-6.462,5.077-5.457,9.096c1.004,4.019,5.077,6.46,9.095,5.457\n            c23.66-5.915,33.312-19.188,37.248-29.16c16.264,9.638,34.483,13.254,50.879,16.509c31.689,6.291,48.226,10.912,48.226,39.65\n            c0,5.226-0.581,10.434-1.726,15.48c-3.435,15.134-12.016,28.876-24.165,38.696c-12.5,10.104-27.622,15.444-43.73,15.444\n            c-14.684,0-28.659-4.504-40.519-13.015c-4.345-11.859-11.324-22.709-20.533-31.649v-33.525c0-2.6-1.346-5.014-3.557-6.38\n            c-2.211-1.366-4.971-1.491-7.297-0.328l-16.193,8.096C297.324,186.071,297.776,171.221,297.776,157.455z M308.483,212.435v27.143\n            l-27.144-13.571L308.483,212.435z M220.655,212.435l27.143,13.572l-27.143,13.571V212.435z M179.948,294.558v7.123\n            c-5.37,4.637-8.569,11.423-8.569,18.583c-10.682,6.311-22.817,9.639-35.345,9.639c-32.624,0-60.849-22.958-67.91-54.27\n            l18.529-5.559c4.571,23.088,24.972,40.553,49.382,40.553c19.383,0,36.231-11.017,44.641-27.112\n            C180.195,287.157,179.948,290.845,179.948,294.558z M100.69,260.27v-17.373c10.762,4.97,22.734,7.747,35.345,7.747\n            c12.61,0,24.583-2.778,35.345-7.746v17.383c0,19.489-15.855,35.345-35.345,35.345c-19.457,0-35.29-15.804-35.343-35.249\n            C100.692,260.341,100.69,260.305,100.69,260.27z M136.035,235.644c-38.39,0-69.621-31.231-69.621-69.62c0-4.142-3.358-7.5-7.5-7.5\n            c-5.314,0-9.638-4.324-9.638-9.638c0-5.314,4.323-9.638,9.638-9.638h17.138c3.228,0,6.094-2.065,7.115-5.128l6.884-20.652\n            c17.235-0.389,70.664-2.812,100.751-17.856c3.705-1.853,5.207-6.357,3.354-10.062c-1.852-3.705-6.356-5.207-10.062-3.354\n            c-32.281,16.14-98.807,16.346-99.475,16.346c-3.228,0.001-6.094,2.066-7.114,5.129l-6.859,20.578H58.914\n            c-0.358,0-0.714,0.012-1.069,0.027V88.903c0-28.939,23.544-52.483,52.483-52.483h68.552c8.956,0,16.48,6.455,17.893,15.347\n            c0.359,2.26,1.73,4.232,3.723,5.356c8.468,4.776,13.729,13.669,13.729,23.21v43.941c-0.355-0.016-0.71-0.027-1.069-0.027h-8.569\n            c-4.142,0-7.5,3.358-7.5,7.5c0,4.142,3.358,7.5,7.5,7.5h8.569c5.314,0,9.638,4.323,9.638,9.638s-4.323,9.638-9.638,9.638\n            c-4.142,0-7.5,3.358-7.5,7.5C205.656,204.412,174.425,235.644,136.035,235.644z M186.379,260.283v-26.31\n            c7.461-5.543,13.982-12.276,19.276-19.928v19.781c-8.399,8.154-14.946,17.895-19.329,28.543\n            C186.355,261.676,186.379,260.982,186.379,260.283z M298.548,433.756c-8.257,10.087-20.661,16.113-33.979,16.113\n            c-13.302,0-25.714-6.03-33.974-16.114l4.78-1.593c6.572-2.19,10.988-8.317,10.988-15.244v-5.978\n            c5.796,1.627,11.898,2.516,18.207,2.516c6.309,0,12.411-0.889,18.207-2.516v5.978c-0.001,6.926,4.414,13.053,10.987,15.243\n            L298.548,433.756z M324.553,329.903c-4.142,0-7.5,3.358-7.5,7.5v7.457c0,0.065-0.001,0.13,0,0.195v0.917\n            c-0.001,28.939-23.545,52.483-52.484,52.483c-28.939,0-52.482-23.544-52.482-52.483v-8.569c0-4.142-3.358-7.5-7.5-7.5h-8.569\n            c-5.314,0-9.638-4.323-9.638-9.638c0-3.42,1.81-6.515,4.841-8.279c0.677-0.394,1.266-0.893,1.776-1.457\n            c18.54-0.537,78.639-4.026,118.138-26.597c3.596-2.055,4.846-6.636,2.791-10.233c-2.055-3.597-6.638-4.846-10.233-2.791\n            c-34.602,19.772-88.974,23.731-108.744,24.522v-0.872c0-13.949,4.224-27.458,11.878-38.847c0.599,0.949,1.4,1.773,2.386,2.382\n            c1.205,0.744,2.572,1.12,3.943,1.12c1.146,0,2.295-0.263,3.354-0.792l48.06-24.03l48.06,24.03\n            c1.059,0.529,2.208,0.792,3.354,0.792c1.372,0,2.739-0.376,3.943-1.12c0.985-0.609,1.786-1.434,2.385-2.382\n            c7.654,11.389,11.878,24.898,11.878,38.847v10.946c0,2.67,1.419,5.139,3.728,6.482c3.032,1.765,4.842,4.859,4.842,8.279\n            c0,5.314-4.324,9.638-9.638,9.638H324.553z M384.535,372.748c-20.764,0-40.028-10.571-51.242-27.849\n            c13.506-0.093,24.466-11.106,24.466-24.633c0-7.16-3.199-13.947-8.569-18.584v-7.123c0-3.019-0.163-6.021-0.482-8.995\n            c11.121,5.214,23.263,7.925,35.827,7.925c9.145,0,18.189-1.515,26.776-4.379v10.983c0,10.133,6.079,19.113,15.487,22.876\n            l16.173,6.469C435.22,355.066,411.55,372.748,384.535,372.748z\"/>\n        </g>\n      </g>\n      <g>\n        <g>\n          <path d=\"M286.432,357.285c-3.217-2.609-7.94-2.117-10.549,1.101c-3.031,3.736-7.048,5.793-11.313,5.793\n            c-4.265,0-8.283-2.057-11.313-5.793c-2.609-3.217-7.333-3.71-10.549-1.101c-3.217,2.609-3.71,7.332-1.101,10.549\n            c5.848,7.209,14.217,11.345,22.963,11.345c8.746,0,17.115-4.135,22.963-11.344C290.141,364.618,289.648,359.894,286.432,357.285z\"\n            />\n        </g>\n      </g>\n      <g>\n        <g>\n          <circle cx=\"239\" cy=\"328.868\" r=\"7.5\"/>\n        </g>\n      </g>\n      <g>\n        <g>\n          <circle cx=\"290\" cy=\"328.868\" r=\"7.5\"/>\n        </g>\n      </g>\n      <g>\n      </g>\n      <g>\n      </g>\n      <g>\n      </g>\n      <g>\n      </g>\n      <g>\n      </g>\n      <g>\n      </g>\n      <g>\n      </g>\n      <g>\n      </g>\n      <g>\n      </g>\n      <g>\n      </g>\n      <g>\n      </g>\n      <g>\n      </g>\n      <g>\n      </g>\n      <g>\n      </g>\n      <g>\n      </g>\n      </svg>";
    }
  }, {
    key: "bacteria",
    value: function bacteria(color) {
      return "\n      <svg fill=" + color + " x=\"0px\" y=\"0px\" viewBox=\"0 0 496 496\" style='enable-background : new new 0 0 496 496'>\n        <g>\n          <g>\n            <g>\n              <path d=\"M429.56,290.888l45.584-19.536l-6.296-14.704l-47.352,20.296c-7.68-11.08-17.456-20.592-28.752-27.976l22.104-36.848\n                l-13.72-8.232l-22.44,37.392C365.656,235.368,351.232,232,336,232h-2.408l33.4-60.12l-13.984-7.768l-37.144,66.864\n                c-16.384-2.512-31.128-9.976-42.672-20.864l20.464-20.464l-11.312-11.312l-19.672,19.672C253.464,184.984,248,169.128,248,152\n                c0-0.408-0.056-0.808-0.064-1.216l41.376-6.896l-2.624-15.784l-40.312,6.72c-1.816-10.008-5.128-19.496-9.792-28.176l55-27.496\n                l-7.16-14.312L227.72,93.192c-4.528-5.824-9.672-11.136-15.4-15.784l25.936-32.416l-12.504-10l-26.72,33.4\n                c-6.84-3.864-14.216-6.864-21.96-8.96l6.776-33.864l-15.688-3.136l-6.808,34.04C158.272,56.176,155.152,56,152,56\n                c-8.304,0-16.312,1.168-24,3.16V0h-16v64.84c-4.336,2-8.52,4.272-12.488,6.872l-37.36-44.84L49.848,37.128l37.08,44.496\n                c-4.68,4.328-8.92,9.096-12.664,14.272L52.44,81.344l-8.872,13.312L66,109.608c-4.072,8.216-6.984,17.064-8.552,26.392H0v16h56v8\n                c0,5.824,0.24,11.592,0.592,17.328l-34.16,6.832l3.144,15.688l32.488-6.496c1.32,11.088,3.288,21.984,5.872,32.64l-50.12,14.32\n                l4.392,15.392l49.92-14.264c2.072,6.808,4.44,13.48,7.008,20.064L20.44,288.856l7.16,14.312l53.8-26.896\n                c3.872,8.456,8.152,16.68,12.824,24.664l-42.64,28.424l8.872,13.312l42.208-28.144c5.664,8.528,11.768,16.728,18.304,24.568\n                L99.576,353.36l8.872,13.312l23.24-15.496c5.608,5.992,11.456,11.76,17.568,17.24l-35.392,42.472l12.296,10.248l35.336-42.4\n                c6.504,5.2,13.216,10.128,20.168,14.736l-36.44,58.296l13.56,8.488l36.464-58.344c9.096,5.312,18.512,10.136,28.216,14.416\n                l-15.056,45.16l15.168,5.064l14.72-44.152c10.36,3.872,21.024,7.104,31.912,9.744l-6.064,30.312l15.688,3.144l6.032-30.152\n                c8.584,1.56,17.296,2.728,26.128,3.488V496h16v-56.2c2.672,0.072,5.328,0.2,8.008,0.2c10.056,0,19.752-1.512,28.96-4.184\n                l19.88,39.768l14.312-7.16l-19.16-38.32c6.504-3.056,12.624-6.752,18.312-11.032L417.6,444.8l12.8-9.592l-20.008-26.672\n                c4.664-4.784,8.864-10.008,12.552-15.616l44.624,29.744l8.872-13.312l-45.776-30.52c3.824-8.408,6.512-17.408,7.976-26.824H496\n                v-16h-56C440,319.824,436.176,304.56,429.56,290.888z M336,424C190.432,424,72,305.568,72,160v-8c0-44.112,35.888-80,80-80\n                s80,35.888,80,80c0,52.936,43.064,96,96,96h8c48.52,0,88,39.48,88,88C424,384.52,384.52,424,336,424z\"/>\n              <path d=\"M160,192c26.472,0,48-21.528,48-48s-21.528-48-48-48s-48,21.528-48,48S133.528,192,160,192z M160,112\n                c17.648,0,32,14.352,32,32s-14.352,32-32,32s-32-14.352-32-32S142.352,112,160,112z\"/>\n              <path d=\"M144,232c-13.232,0-24,10.768-24,24s10.768,24,24,24s24-10.768,24-24S157.232,232,144,232z M144,264\n                c-4.416,0-8-3.584-8-8c0-4.416,3.584-8,8-8s8,3.584,8,8C152,260.416,148.416,264,144,264z\"/>\n              <path d=\"M224,312c-17.648,0-32,14.352-32,32s14.352,32,32,32s32-14.352,32-32S241.648,312,224,312z M224,360\n                c-8.824,0-16-7.176-16-16c0-8.824,7.176-16,16-16c8.824,0,16,7.176,16,16C240,352.824,232.824,360,224,360z\"/>\n              <path d=\"M272,248c-13.232,0-24,10.768-24,24s10.768,24,24,24s24-10.768,24-24S285.232,248,272,248z M272,280\n                c-4.416,0-8-3.584-8-8c0-4.416,3.584-8,8-8c4.416,0,8,3.584,8,8C280,276.416,276.416,280,272,280z\"/>\n              <path d=\"M352,304c-17.648,0-32,14.352-32,32s14.352,32,32,32s32-14.352,32-32S369.648,304,352,304z M352,352\n                c-8.824,0-16-7.176-16-16c0-8.824,7.176-16,16-16c8.824,0,16,7.176,16,16C368,344.824,360.824,352,352,352z\"/>\n              <path d=\"M480,96v-1.896c0-5.584-0.616-11.032-1.736-16.288l13.312-6.656l-7.16-14.312l-11.192,5.6\n                c-3.456-7.752-8.16-14.816-13.824-21L484.8,22.4l-9.6-12.8l-28,21c-4.256-3.048-8.808-5.68-13.64-7.832l5.6-11.192l-14.312-7.16\n                l-6.656,13.312C412.928,16.616,407.488,16,401.896,16H400V0h-16v16.808c-4.408,0.896-8.464,2.656-12.216,4.872l-4.632-9.256\n                l-14.312,7.16l6.648,13.288c-2.816,3.944-4.864,8.416-6.104,13.24l-23.448-5.872l-3.872,15.52l26.584,6.648\n                c0.744,4.592,2.304,8.864,4.48,12.792l-15.656,5.216l5.064,15.168l22.016-7.336c3.08,2.248,6.488,4,10.136,5.304l-9.344,14.016\n                l13.312,8.872l12.976-19.456c2.56,1.328,4.368,3.928,4.368,7.016c0,5.328,1.096,10.4,2.992,15.056l-15.432,10.288l8.872,13.312\n                l15.416-10.28c3.48,3.448,7.6,6.24,12.144,8.232V176h16v-32c6.032,0,11.704-1.44,16.84-3.848l17.504,17.504l11.312-11.312\n                l-15.888-15.888c4.6-5.168,7.992-11.432,9.424-18.456H496V96H480z M464,104c0,13.232-10.768,24-24,24s-24-10.768-24-24\n                s-10.768-24-24-24s-24-10.768-24-24s10.768-24,24-24h9.896C436.144,32,464,59.856,464,94.104V104z\"/>\n            </g>\n          </g>\n        </g>\n        <g>\n        </g>\n        <g>\n        </g>\n        <g>\n        </g>\n        <g>\n        </g>\n        <g>\n        </g>\n        <g>\n        </g>\n        <g>\n        </g>\n        <g>\n        </g>\n        <g>\n        </g>\n        <g>\n        </g>\n        <g>\n        </g>\n        <g>\n        </g>\n        <g>\n        </g>\n        <g>\n        </g>\n        <g>\n        </g>\n      </svg>";
    }
  }]);

  return IconComponent;
}();

exports.default = IconComponent;

/***/ }),

/***/ 5:
/***/ (function(module, exports) {

throw new Error("Module build failed: Error: ENOENT: no such file or directory, open '/Users/susanadelokiki/Documents/source/idseq-web/node_modules/axios/index.js'");

/***/ }),

/***/ 7:
/***/ (function(module, exports) {

throw new Error("Module build failed: Error: ENOENT: no such file or directory, open '/Users/susanadelokiki/Documents/source/idseq-web/node_modules/react-dom/index.js'");

/***/ })

/******/ });
//# sourceMappingURL=bundle.min.js.map