#!/usr/bin/env ruby

require 'rbconfig'
require 'rubygems'
require 'bundler/setup'
require 'pp'

def system!(cmd, err = nil)
  system(cmd) || abort("\n== Command #{cmd} failed ==\n\n#{err}\n\n====")
end

env = ARGV.shift
image = ARGV.shift
cluster = env  # Yes, the cluster name is exactly env, no prefix/postfix

if !env || !image
  puts 'Usage: ./bin/deploy ENV IMAGE_TAG'
  abort
end

if image == 'latest'
  puts "you should not deploy latest (it doesn't mean what you think it does)"
  abort
end

puts "deploying #{image} to #{env}"

def notify_slack(env, image, stage)
  slack_hook = ENV["SLACK_HOOK"]
  if slack_hook
    if stage=="start"
      puts `curl -X POST --data-urlencode 'payload={"icon_emoji": ":ghost:", "text": "starting to deploy #{image} to #{env}"}' #{slack_hook}`
    elsif stage=="end"
      puts `curl -X POST --data-urlencode 'payload={"icon_emoji": ":sharkdance:", "text": "finished deploying #{image} to #{env}"}' #{slack_hook}`
    elsif stage=="failure"
      puts `curl -X POST --data-urlencode 'payload={"icon_emoji": ":sob:", "text": "deploy of #{image} to #{env} failed"}' #{slack_hook}`
    end
  else
    puts "Not notifying Slack of this deploy because environment variable SLACK_HOOK is not set. Please add an appropriate webhook to ~/.bash_profile."
  end
end

notify_slack(env, image, "start")
begin
  os = RbConfig::CONFIG['host_os'] =~ /darwin/ ? 'darwin' : 'linux'
  system!("curl -L https://github.com/chanzuckerberg/czecs/releases/download/v0.1.1/czecs_0.1.1_#{os}_amd64.tar.gz | tar xz -C /tmp czecs")
  task_definition_arn = `/tmp/czecs register --quiet -f balances.json --set tag=#{image} --set env=#{env} czecs.json`.strip
  $?.exitstatus == 0 || abort("\n== Could not register task ==\n")
  puts 'running migrations'
  system!("/tmp/czecs task -f balances.json --timeout 0 --set taskDefinitionArn=#{task_definition_arn} --set cluster=#{cluster} czecs-task-migrate.json")
  system!("/tmp/czecs upgrade --task-definition-arn #{task_definition_arn} #{cluster} idseq-#{env}-web")
  system!("/tmp/czecs upgrade -f balances.json --set tag=#{image} --set env=#{env} --set name=resque --set rake_command=resque:workers #{cluster} idseq-#{env}-resque czecs-resque.json")
  system!("/tmp/czecs upgrade -f balances.json --set tag=#{image} --set env=#{env} --set name=resque-pipeline-monitor --set rake_command=pipeline_monitor #{cluster} idseq-#{env}-resque-pipeline-monitor czecs-resque.json")
  system!("/tmp/czecs upgrade -f balances.json --set tag=#{image} --set env=#{env} --set name=resque-result-monitor --set rake_command=result_monitor #{cluster} idseq-#{env}-resque-result-monitor czecs-resque.json")
  notify_slack(env, image, "end")
rescue Exception  # Even on abort/SystemExit
  notify_slack(env, image, "failure")
  raise
ensure
  system!("rm -f /tmp/czecs")
end
