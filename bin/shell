#!/usr/bin/env ruby

require 'rubygems'
require 'bundler/setup'
require 'aws-sdk-ecs'
require 'aws-sdk-ec2'
require 'pp'

env = ARGV.shift
command = ARGV.shift || "rails console"
if !env
  puts 'Usage: ./bin/shell ENV [COMMAND]'
  puts '  COMMAND: default is "rails console"'
  abort
end

ecs_client = Aws::ECS::Client.new(region: 'us-west-2')
ec2_client = Aws::EC2::Client.new(region: 'us-west-2')
service = "idseq-web-#{env}"

resp = ecs_client.describe_services(cluster: env, services: [service])
service = resp.services.first

task = ecs_client.list_tasks(cluster: env, service_name: "idseq-web-#{env}").task_arns.first

tasks = ecs_client.describe_tasks(cluster: env, tasks: [task])
instances = ecs_client.describe_container_instances(cluster: env,
                                                    container_instances: [tasks.tasks[0].container_instance_arn])

resp = ec2_client.describe_instances(instance_ids: [instances.container_instances[0].ec2_instance_id])

public_ip = resp.reservations.first.instances.first.public_ip_address

exec %(ssh -t ec2-user@#{public_ip} "docker exec -it \\`docker ps | grep chanzuckerberg/idseq-web | head -1 | awk '{print \\$NF}'\\` #{command} ")
