#!/usr/bin/env ruby

require 'rubygems'
require 'bundler/setup'
require 'aws-sdk-ecs'
require 'aws-sdk-ec2'
require 'aws-sdk-iam'
require 'pp'

keep_alive = false

while ARGV.first =~ /^--.+$/
  opt = ARGV.shift
  case opt 
  when "--service-name"
    service = ARGV.shift
  when "--keep-alive"
    keep_alive = true
  end
end

env = ARGV.shift

service ||= "idseq-#{env}-web"

command = ARGV.shift || "rails console"
if !env
  puts 'Usage: ./bin/shell [--service-name <SERVICE_NAME>] [--keep-alive] <env> [command]'
  puts
  puts 'positional arguments:'
  puts '  env       Environment (prod | staging | public | sandbox)'
  puts '  command   Command to be executed on the container. Default is "rails console"'
  puts
  puts 'optional arguments:'
  puts '  --service-name <SERVICE_NAME>'
  puts '      When this parameter is omited, defaults to "idseq-{env}-web"'
  puts '  --keep-alive'
  puts '      Send keep alives every 60 seconds to prevent disconnections'
  puts
  abort
end

ecs_client = Aws::ECS::Client.new(region: 'us-west-2')
ec2_client = Aws::EC2::Client.new(region: 'us-west-2')

iam_client = Aws::IAM::Client.new(region: 'us-west-2')
aws_account_alias = iam_client.list_account_aliases().account_aliases[0]

cluster = if env == "sandbox" or aws_account_alias == "idseq-prod"
            "idseq-#{env}-ecs"
          else
            # TODO(2020-01-23): Rename staging clusters to new format (IDSEQ-2155).
            env
          end

task = ecs_client.list_tasks(cluster: cluster, service_name: service).task_arns.first

tasks = ecs_client.describe_tasks(cluster: cluster, tasks: [task])
instances = ecs_client.describe_container_instances(cluster: cluster,
                                                    container_instances: [tasks.tasks[0].container_instance_arn])

resp = ec2_client.describe_instances(instance_ids: [instances.container_instances[0].ec2_instance_id])

private_ip = resp.reservations.first.instances.first.private_ip_address

exec %(ssh #{keep_alive ? "-o ServerAliveInterval=60" : ""} -t #{private_ip} "sudo docker exec -it \\`sudo docker ps | grep ecs-#{service} | head -1 | awk '{print \\$NF}'\\` bin/entrypoint.sh #{command} ")
